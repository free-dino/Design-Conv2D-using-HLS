// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "convolution2D.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic convolution2D::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic convolution2D::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<10> convolution2D::ap_ST_fsm_state1 = "1";
const sc_lv<10> convolution2D::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<10> convolution2D::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<10> convolution2D::ap_ST_fsm_pp0_stage2 = "1000";
const sc_lv<10> convolution2D::ap_ST_fsm_pp0_stage3 = "10000";
const sc_lv<10> convolution2D::ap_ST_fsm_pp0_stage4 = "100000";
const sc_lv<10> convolution2D::ap_ST_fsm_pp0_stage5 = "1000000";
const sc_lv<10> convolution2D::ap_ST_fsm_pp0_stage6 = "10000000";
const sc_lv<10> convolution2D::ap_ST_fsm_pp0_stage7 = "100000000";
const sc_lv<10> convolution2D::ap_ST_fsm_state14 = "1000000000";
const sc_lv<32> convolution2D::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool convolution2D::ap_const_boolean_1 = true;
const sc_lv<32> convolution2D::ap_const_lv32_2 = "10";
const bool convolution2D::ap_const_boolean_0 = false;
const sc_lv<1> convolution2D::ap_const_lv1_0 = "0";
const sc_lv<32> convolution2D::ap_const_lv32_3 = "11";
const sc_lv<32> convolution2D::ap_const_lv32_4 = "100";
const sc_lv<32> convolution2D::ap_const_lv32_5 = "101";
const sc_lv<32> convolution2D::ap_const_lv32_6 = "110";
const sc_lv<32> convolution2D::ap_const_lv32_8 = "1000";
const sc_lv<32> convolution2D::ap_const_lv32_1 = "1";
const sc_lv<32> convolution2D::ap_const_lv32_7 = "111";
const sc_lv<1> convolution2D::ap_const_lv1_1 = "1";
const sc_lv<2> convolution2D::ap_const_lv2_0 = "00";
const sc_lv<64> convolution2D::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> convolution2D::ap_const_lv64_1 = "1";
const sc_lv<64> convolution2D::ap_const_lv64_2 = "10";
const sc_lv<64> convolution2D::ap_const_lv64_3 = "11";
const sc_lv<64> convolution2D::ap_const_lv64_4 = "100";
const sc_lv<64> convolution2D::ap_const_lv64_5 = "101";
const sc_lv<64> convolution2D::ap_const_lv64_6 = "110";
const sc_lv<64> convolution2D::ap_const_lv64_7 = "111";
const sc_lv<64> convolution2D::ap_const_lv64_8 = "1000";
const sc_lv<2> convolution2D::ap_const_lv2_3 = "11";
const sc_lv<2> convolution2D::ap_const_lv2_1 = "1";
const sc_lv<5> convolution2D::ap_const_lv5_1 = "1";
const sc_lv<3> convolution2D::ap_const_lv3_2 = "10";
const sc_lv<5> convolution2D::ap_const_lv5_2 = "10";
const sc_lv<6> convolution2D::ap_const_lv6_1 = "1";
const sc_lv<5> convolution2D::ap_const_lv5_3 = "11";
const sc_lv<6> convolution2D::ap_const_lv6_2 = "10";
const sc_lv<6> convolution2D::ap_const_lv6_3 = "11";
const sc_lv<5> convolution2D::ap_const_lv5_4 = "100";
const sc_lv<6> convolution2D::ap_const_lv6_4 = "100";
const sc_lv<32> convolution2D::ap_const_lv32_9 = "1001";

convolution2D::convolution2D(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_11001);

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);

    SC_METHOD(thread_ap_block_pp0_stage3);

    SC_METHOD(thread_ap_block_pp0_stage3_11001);

    SC_METHOD(thread_ap_block_pp0_stage3_subdone);

    SC_METHOD(thread_ap_block_pp0_stage4);

    SC_METHOD(thread_ap_block_pp0_stage4_11001);

    SC_METHOD(thread_ap_block_pp0_stage4_subdone);

    SC_METHOD(thread_ap_block_pp0_stage5);

    SC_METHOD(thread_ap_block_pp0_stage5_11001);

    SC_METHOD(thread_ap_block_pp0_stage5_subdone);

    SC_METHOD(thread_ap_block_pp0_stage6);

    SC_METHOD(thread_ap_block_pp0_stage6_11001);

    SC_METHOD(thread_ap_block_pp0_stage6_subdone);

    SC_METHOD(thread_ap_block_pp0_stage7);

    SC_METHOD(thread_ap_block_pp0_stage7_11001);

    SC_METHOD(thread_ap_block_pp0_stage7_subdone);

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state11_pp0_stage1_iter1);

    SC_METHOD(thread_ap_block_state12_pp0_stage2_iter1);

    SC_METHOD(thread_ap_block_state13_pp0_stage3_iter1);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state5_pp0_stage3_iter0);

    SC_METHOD(thread_ap_block_state6_pp0_stage4_iter0);

    SC_METHOD(thread_ap_block_state7_pp0_stage5_iter0);

    SC_METHOD(thread_ap_block_state8_pp0_stage6_iter0);

    SC_METHOD(thread_ap_block_state9_pp0_stage7_iter0);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond3_fu_457_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_i_phi_fu_317_p4);
    sensitive << ( i_reg_313 );
    sensitive << ( exitcond3_reg_875 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( i_1_reg_879 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_exitcond3_fu_457_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_i_phi_fu_317_p4 );

    SC_METHOD(thread_grp_fu_346_p2);
    sensitive << ( reg_324 );
    sensitive << ( reg_328 );

    SC_METHOD(thread_grp_fu_352_p2);
    sensitive << ( reg_332 );
    sensitive << ( kernel_load_1_reg_921 );

    SC_METHOD(thread_grp_fu_357_p2);
    sensitive << ( reg_328 );
    sensitive << ( reg_332 );

    SC_METHOD(thread_grp_fu_363_p2);
    sensitive << ( reg_324 );
    sensitive << ( kernel_load_2_reg_940 );

    SC_METHOD(thread_grp_fu_368_p2);
    sensitive << ( reg_332 );
    sensitive << ( reg_337 );

    SC_METHOD(thread_grp_fu_374_p2);
    sensitive << ( reg_332 );
    sensitive << ( kernel_load_5_reg_956 );

    SC_METHOD(thread_grp_fu_379_p2);
    sensitive << ( reg_324 );
    sensitive << ( reg_337 );

    SC_METHOD(thread_grp_fu_385_p2);
    sensitive << ( reg_324 );
    sensitive << ( kernel_load_6_reg_998 );

    SC_METHOD(thread_grp_fu_390_p2);
    sensitive << ( reg_342 );
    sensitive << ( kernel_load_7_reg_1004 );

    SC_METHOD(thread_grp_fu_431_p2);
    sensitive << ( reg_395 );
    sensitive << ( reg_399 );

    SC_METHOD(thread_grp_fu_437_p2);
    sensitive << ( reg_407 );
    sensitive << ( reg_411 );

    SC_METHOD(thread_grp_fu_447_p2);
    sensitive << ( reg_443 );
    sensitive << ( grp_fu_437_p2 );

    SC_METHOD(thread_i_1_fu_463_p2);
    sensitive << ( ap_phi_mux_i_phi_fu_317_p4 );

    SC_METHOD(thread_i_cast_fu_469_p1);
    sensitive << ( ap_phi_mux_i_phi_fu_317_p4 );

    SC_METHOD(thread_input_r_address0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_3_cast_fu_495_p1 );
    sensitive << ( tmp_5_cast_fu_528_p1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( tmp_15_cast_fu_563_p1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_20_cast_fu_598_p1 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( tmp_22_cast_fu_634_p1 );
    sensitive << ( tmp_17_cast_fu_649_p1 );
    sensitive << ( ap_block_pp0_stage5 );
    sensitive << ( tmp_7_cast_fu_679_p1 );
    sensitive << ( ap_block_pp0_stage6 );
    sensitive << ( tmp_24_cast_fu_709_p1 );
    sensitive << ( ap_block_pp0_stage7 );

    SC_METHOD(thread_input_r_address1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_4_cast_fu_506_p1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( tmp_14_cast_fu_553_p1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_16_cast_fu_573_p1 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( tmp_21_cast_fu_609_p1 );
    sensitive << ( tmp_6_cast_fu_624_p1 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage5 );
    sensitive << ( tmp_23_cast_fu_659_p1 );
    sensitive << ( ap_block_pp0_stage6 );
    sensitive << ( tmp_18_cast_fu_689_p1 );

    SC_METHOD(thread_input_r_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6_11001 );

    SC_METHOD(thread_input_r_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6_11001 );

    SC_METHOD(thread_kernel_address0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage4 );

    SC_METHOD(thread_kernel_address1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_kernel_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_kernel_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( tmp_9_cast_fu_752_p1 );
    sensitive << ( tmp_10_cast_fu_787_p1 );
    sensitive << ( tmp_12_cast_fu_825_p1 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( sum_2_0_2_2_reg_1065 );
    sensitive << ( sum_2_1_2_2_reg_1085 );
    sensitive << ( sum_2_2_2_2_reg_1095 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( exitcond3_reg_875 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond3_reg_875_pp0_iter1_reg );

    SC_METHOD(thread_p_shl1_cast_fu_543_p1);
    sensitive << ( tmp_11_fu_536_p3 );

    SC_METHOD(thread_p_shl3_cast_fu_485_p1);
    sensitive << ( tmp_2_fu_477_p3 );

    SC_METHOD(thread_p_shl_cast_fu_588_p1);
    sensitive << ( tmp_17_fu_581_p3 );

    SC_METHOD(thread_sum_2_0_2_2_fu_730_p2);
    sensitive << ( reg_453 );
    sensitive << ( tmp4_fu_725_p2 );

    SC_METHOD(thread_sum_2_1_2_2_fu_777_p2);
    sensitive << ( tmp8_reg_1075 );
    sensitive << ( tmp11_fu_771_p2 );

    SC_METHOD(thread_sum_2_2_2_2_fu_814_p2);
    sensitive << ( reg_453 );
    sensitive << ( tmp18_fu_809_p2 );

    SC_METHOD(thread_tmp10_fu_756_p2);
    sensitive << ( reg_403 );
    sensitive << ( reg_415 );

    SC_METHOD(thread_tmp11_fu_771_p2);
    sensitive << ( tmp10_fu_756_p2 );
    sensitive << ( tmp13_fu_766_p2 );

    SC_METHOD(thread_tmp12_fu_762_p2);
    sensitive << ( tmp_1_1_2_1_reg_1055 );
    sensitive << ( tmp_1_1_2_2_reg_1070 );

    SC_METHOD(thread_tmp13_fu_766_p2);
    sensitive << ( tmp_1_1_2_reg_1030 );
    sensitive << ( tmp12_fu_762_p2 );

    SC_METHOD(thread_tmp17_fu_792_p2);
    sensitive << ( reg_415 );
    sensitive << ( tmp_1_2_1_1_reg_1080 );

    SC_METHOD(thread_tmp18_fu_809_p2);
    sensitive << ( tmp17_reg_1090 );
    sensitive << ( tmp20_fu_803_p2 );

    SC_METHOD(thread_tmp19_fu_797_p2);
    sensitive << ( reg_419 );
    sensitive << ( reg_427 );

    SC_METHOD(thread_tmp20_fu_803_p2);
    sensitive << ( reg_423 );
    sensitive << ( tmp19_fu_797_p2 );

    SC_METHOD(thread_tmp4_fu_725_p2);
    sensitive << ( tmp5_reg_1025 );
    sensitive << ( tmp6_fu_719_p2 );

    SC_METHOD(thread_tmp5_fu_664_p2);
    sensitive << ( reg_415 );
    sensitive << ( tmp_1_0_1_1_reg_988 );

    SC_METHOD(thread_tmp6_fu_719_p2);
    sensitive << ( reg_423 );
    sensitive << ( tmp7_fu_714_p2 );

    SC_METHOD(thread_tmp7_fu_714_p2);
    sensitive << ( reg_427 );
    sensitive << ( tmp_1_0_2_2_reg_1045 );

    SC_METHOD(thread_tmp8_fu_747_p2);
    sensitive << ( tmp9_reg_1010 );
    sensitive << ( tmp_fu_742_p2 );

    SC_METHOD(thread_tmp9_fu_639_p2);
    sensitive << ( reg_403 );
    sensitive << ( tmp_1_1_0_1_reg_978 );

    SC_METHOD(thread_tmp_10_cast_fu_787_p1);
    sensitive << ( tmp_8_fu_782_p2 );

    SC_METHOD(thread_tmp_10_fu_820_p2);
    sensitive << ( tmp_9_reg_903_pp0_iter1_reg );

    SC_METHOD(thread_tmp_11_fu_536_p3);
    sensitive << ( i_1_reg_879 );

    SC_METHOD(thread_tmp_12_cast_fu_825_p1);
    sensitive << ( tmp_10_fu_820_p2 );

    SC_METHOD(thread_tmp_12_fu_547_p2);
    sensitive << ( tmp_5_0_1_cast_fu_533_p1 );
    sensitive << ( p_shl1_cast_fu_543_p1 );

    SC_METHOD(thread_tmp_13_fu_558_p2);
    sensitive << ( tmp_12_reg_927 );

    SC_METHOD(thread_tmp_14_cast_fu_553_p1);
    sensitive << ( tmp_12_fu_547_p2 );

    SC_METHOD(thread_tmp_14_fu_568_p2);
    sensitive << ( tmp_12_reg_927 );

    SC_METHOD(thread_tmp_15_cast_fu_563_p1);
    sensitive << ( tmp_13_fu_558_p2 );

    SC_METHOD(thread_tmp_15_fu_644_p2);
    sensitive << ( tmp_12_reg_927 );

    SC_METHOD(thread_tmp_16_cast_fu_573_p1);
    sensitive << ( tmp_14_fu_568_p2 );

    SC_METHOD(thread_tmp_16_fu_684_p2);
    sensitive << ( tmp_12_reg_927 );

    SC_METHOD(thread_tmp_17_cast_fu_649_p1);
    sensitive << ( tmp_15_fu_644_p2 );

    SC_METHOD(thread_tmp_17_fu_581_p3);
    sensitive << ( tmp_4_0_2_reg_910 );

    SC_METHOD(thread_tmp_18_cast_fu_689_p1);
    sensitive << ( tmp_16_fu_684_p2 );

    SC_METHOD(thread_tmp_18_fu_592_p2);
    sensitive << ( tmp_5_0_2_cast_fu_578_p1 );
    sensitive << ( p_shl_cast_fu_588_p1 );

    SC_METHOD(thread_tmp_19_fu_603_p2);
    sensitive << ( tmp_18_fu_592_p2 );

    SC_METHOD(thread_tmp_1_1_0_1_fu_614_p2);
    sensitive << ( reg_324 );
    sensitive << ( kernel_load_1_reg_921 );

    SC_METHOD(thread_tmp_1_1_0_2_fu_694_p2);
    sensitive << ( reg_332 );
    sensitive << ( kernel_load_2_reg_940 );

    SC_METHOD(thread_tmp_1_1_2_1_fu_699_p2);
    sensitive << ( reg_324 );
    sensitive << ( kernel_load_7_reg_1004 );

    SC_METHOD(thread_tmp_1_1_2_2_fu_736_p2);
    sensitive << ( reg_337 );
    sensitive << ( reg_342 );

    SC_METHOD(thread_tmp_1_1_2_fu_669_p2);
    sensitive << ( reg_342 );
    sensitive << ( kernel_load_6_reg_998 );

    SC_METHOD(thread_tmp_20_cast_fu_598_p1);
    sensitive << ( tmp_18_fu_592_p2 );

    SC_METHOD(thread_tmp_20_fu_629_p2);
    sensitive << ( tmp_18_reg_961 );

    SC_METHOD(thread_tmp_21_cast_fu_609_p1);
    sensitive << ( tmp_19_fu_603_p2 );

    SC_METHOD(thread_tmp_21_fu_654_p2);
    sensitive << ( tmp_18_reg_961 );

    SC_METHOD(thread_tmp_22_cast_fu_634_p1);
    sensitive << ( tmp_20_fu_629_p2 );

    SC_METHOD(thread_tmp_22_fu_704_p2);
    sensitive << ( tmp_18_reg_961 );

    SC_METHOD(thread_tmp_23_cast_fu_659_p1);
    sensitive << ( tmp_21_fu_654_p2 );

    SC_METHOD(thread_tmp_24_cast_fu_709_p1);
    sensitive << ( tmp_22_fu_704_p2 );

    SC_METHOD(thread_tmp_2_fu_477_p3);
    sensitive << ( ap_phi_mux_i_phi_fu_317_p4 );

    SC_METHOD(thread_tmp_3_cast_fu_495_p1);
    sensitive << ( tmp_3_fu_489_p2 );

    SC_METHOD(thread_tmp_3_fu_489_p2);
    sensitive << ( tmp_cast_fu_473_p1 );
    sensitive << ( p_shl3_cast_fu_485_p1 );

    SC_METHOD(thread_tmp_4_0_2_fu_517_p2);
    sensitive << ( i_cast_fu_469_p1 );

    SC_METHOD(thread_tmp_4_cast_fu_506_p1);
    sensitive << ( tmp_4_fu_500_p2 );

    SC_METHOD(thread_tmp_4_fu_500_p2);
    sensitive << ( tmp_3_fu_489_p2 );

    SC_METHOD(thread_tmp_5_0_1_cast_fu_533_p1);
    sensitive << ( i_1_reg_879 );

    SC_METHOD(thread_tmp_5_0_2_cast_fu_578_p1);
    sensitive << ( tmp_4_0_2_reg_910 );

    SC_METHOD(thread_tmp_5_cast_fu_528_p1);
    sensitive << ( tmp_5_fu_523_p2 );

    SC_METHOD(thread_tmp_5_fu_523_p2);
    sensitive << ( tmp_3_reg_886 );

    SC_METHOD(thread_tmp_6_cast_fu_624_p1);
    sensitive << ( tmp_6_fu_619_p2 );

    SC_METHOD(thread_tmp_6_fu_619_p2);
    sensitive << ( tmp_3_reg_886 );

    SC_METHOD(thread_tmp_7_cast_fu_679_p1);
    sensitive << ( tmp_7_fu_674_p2 );

    SC_METHOD(thread_tmp_7_fu_674_p2);
    sensitive << ( tmp_3_reg_886 );

    SC_METHOD(thread_tmp_8_fu_782_p2);
    sensitive << ( tmp_9_reg_903_pp0_iter1_reg );

    SC_METHOD(thread_tmp_9_cast_fu_752_p1);
    sensitive << ( tmp_9_reg_903 );

    SC_METHOD(thread_tmp_9_fu_511_p2);
    sensitive << ( tmp_cast_fu_473_p1 );
    sensitive << ( p_shl3_cast_fu_485_p1 );

    SC_METHOD(thread_tmp_cast_fu_473_p1);
    sensitive << ( ap_phi_mux_i_phi_fu_317_p4 );

    SC_METHOD(thread_tmp_fu_742_p2);
    sensitive << ( reg_419 );
    sensitive << ( tmp_1_1_0_2_reg_1050 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond3_fu_457_p2 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage7_subdone );
    sensitive << ( ap_block_pp0_stage3_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_block_pp0_stage2_subdone );
    sensitive << ( ap_block_pp0_stage4_subdone );
    sensitive << ( ap_block_pp0_stage5_subdone );
    sensitive << ( ap_block_pp0_stage6_subdone );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "0000000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "convolution2D_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_r_address0, "(port)input_r_address0");
    sc_trace(mVcdFile, input_r_ce0, "(port)input_r_ce0");
    sc_trace(mVcdFile, input_r_q0, "(port)input_r_q0");
    sc_trace(mVcdFile, input_r_address1, "(port)input_r_address1");
    sc_trace(mVcdFile, input_r_ce1, "(port)input_r_ce1");
    sc_trace(mVcdFile, input_r_q1, "(port)input_r_q1");
    sc_trace(mVcdFile, kernel_address0, "(port)kernel_address0");
    sc_trace(mVcdFile, kernel_ce0, "(port)kernel_ce0");
    sc_trace(mVcdFile, kernel_q0, "(port)kernel_q0");
    sc_trace(mVcdFile, kernel_address1, "(port)kernel_address1");
    sc_trace(mVcdFile, kernel_ce1, "(port)kernel_ce1");
    sc_trace(mVcdFile, kernel_q1, "(port)kernel_q1");
    sc_trace(mVcdFile, output_r_address0, "(port)output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "(port)output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "(port)output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "(port)output_r_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_reg_313, "i_reg_313");
    sc_trace(mVcdFile, reg_324, "reg_324");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage1_iter1, "ap_block_state11_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, exitcond3_reg_875, "exitcond3_reg_875");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage2_iter0, "ap_block_state4_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage2_iter1, "ap_block_state12_pp0_stage2_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage3_iter0, "ap_block_state5_pp0_stage3_iter0");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage3_iter1, "ap_block_state13_pp0_stage3_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage3_11001, "ap_block_pp0_stage3_11001");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage4, "ap_CS_fsm_pp0_stage4");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage4_iter0, "ap_block_state6_pp0_stage4_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage4_11001, "ap_block_pp0_stage4_11001");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage5, "ap_CS_fsm_pp0_stage5");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage5_iter0, "ap_block_state7_pp0_stage5_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage5_11001, "ap_block_pp0_stage5_11001");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage7, "ap_CS_fsm_pp0_stage7");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage7_iter0, "ap_block_state9_pp0_stage7_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage7_11001, "ap_block_pp0_stage7_11001");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter1, "ap_block_state10_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, reg_328, "reg_328");
    sc_trace(mVcdFile, reg_332, "reg_332");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage6, "ap_CS_fsm_pp0_stage6");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage6_iter0, "ap_block_state8_pp0_stage6_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage6_11001, "ap_block_pp0_stage6_11001");
    sc_trace(mVcdFile, reg_337, "reg_337");
    sc_trace(mVcdFile, reg_342, "reg_342");
    sc_trace(mVcdFile, grp_fu_346_p2, "grp_fu_346_p2");
    sc_trace(mVcdFile, reg_395, "reg_395");
    sc_trace(mVcdFile, grp_fu_352_p2, "grp_fu_352_p2");
    sc_trace(mVcdFile, reg_399, "reg_399");
    sc_trace(mVcdFile, grp_fu_357_p2, "grp_fu_357_p2");
    sc_trace(mVcdFile, reg_403, "reg_403");
    sc_trace(mVcdFile, grp_fu_363_p2, "grp_fu_363_p2");
    sc_trace(mVcdFile, reg_407, "reg_407");
    sc_trace(mVcdFile, grp_fu_368_p2, "grp_fu_368_p2");
    sc_trace(mVcdFile, reg_411, "reg_411");
    sc_trace(mVcdFile, grp_fu_374_p2, "grp_fu_374_p2");
    sc_trace(mVcdFile, reg_415, "reg_415");
    sc_trace(mVcdFile, grp_fu_379_p2, "grp_fu_379_p2");
    sc_trace(mVcdFile, reg_419, "reg_419");
    sc_trace(mVcdFile, exitcond3_reg_875_pp0_iter1_reg, "exitcond3_reg_875_pp0_iter1_reg");
    sc_trace(mVcdFile, grp_fu_385_p2, "grp_fu_385_p2");
    sc_trace(mVcdFile, reg_423, "reg_423");
    sc_trace(mVcdFile, grp_fu_390_p2, "grp_fu_390_p2");
    sc_trace(mVcdFile, reg_427, "reg_427");
    sc_trace(mVcdFile, grp_fu_431_p2, "grp_fu_431_p2");
    sc_trace(mVcdFile, reg_443, "reg_443");
    sc_trace(mVcdFile, grp_fu_447_p2, "grp_fu_447_p2");
    sc_trace(mVcdFile, reg_453, "reg_453");
    sc_trace(mVcdFile, exitcond3_fu_457_p2, "exitcond3_fu_457_p2");
    sc_trace(mVcdFile, i_1_fu_463_p2, "i_1_fu_463_p2");
    sc_trace(mVcdFile, i_1_reg_879, "i_1_reg_879");
    sc_trace(mVcdFile, tmp_3_fu_489_p2, "tmp_3_fu_489_p2");
    sc_trace(mVcdFile, tmp_3_reg_886, "tmp_3_reg_886");
    sc_trace(mVcdFile, tmp_9_fu_511_p2, "tmp_9_fu_511_p2");
    sc_trace(mVcdFile, tmp_9_reg_903, "tmp_9_reg_903");
    sc_trace(mVcdFile, tmp_9_reg_903_pp0_iter1_reg, "tmp_9_reg_903_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_4_0_2_fu_517_p2, "tmp_4_0_2_fu_517_p2");
    sc_trace(mVcdFile, tmp_4_0_2_reg_910, "tmp_4_0_2_reg_910");
    sc_trace(mVcdFile, kernel_load_1_reg_921, "kernel_load_1_reg_921");
    sc_trace(mVcdFile, tmp_12_fu_547_p2, "tmp_12_fu_547_p2");
    sc_trace(mVcdFile, tmp_12_reg_927, "tmp_12_reg_927");
    sc_trace(mVcdFile, kernel_load_2_reg_940, "kernel_load_2_reg_940");
    sc_trace(mVcdFile, kernel_load_5_reg_956, "kernel_load_5_reg_956");
    sc_trace(mVcdFile, tmp_18_fu_592_p2, "tmp_18_fu_592_p2");
    sc_trace(mVcdFile, tmp_18_reg_961, "tmp_18_reg_961");
    sc_trace(mVcdFile, tmp_1_1_0_1_fu_614_p2, "tmp_1_1_0_1_fu_614_p2");
    sc_trace(mVcdFile, tmp_1_1_0_1_reg_978, "tmp_1_1_0_1_reg_978");
    sc_trace(mVcdFile, tmp_1_0_1_1_reg_988, "tmp_1_0_1_1_reg_988");
    sc_trace(mVcdFile, kernel_load_6_reg_998, "kernel_load_6_reg_998");
    sc_trace(mVcdFile, kernel_load_7_reg_1004, "kernel_load_7_reg_1004");
    sc_trace(mVcdFile, tmp9_fu_639_p2, "tmp9_fu_639_p2");
    sc_trace(mVcdFile, tmp9_reg_1010, "tmp9_reg_1010");
    sc_trace(mVcdFile, tmp5_fu_664_p2, "tmp5_fu_664_p2");
    sc_trace(mVcdFile, tmp5_reg_1025, "tmp5_reg_1025");
    sc_trace(mVcdFile, tmp_1_1_2_fu_669_p2, "tmp_1_1_2_fu_669_p2");
    sc_trace(mVcdFile, tmp_1_1_2_reg_1030, "tmp_1_1_2_reg_1030");
    sc_trace(mVcdFile, tmp_1_0_2_2_reg_1045, "tmp_1_0_2_2_reg_1045");
    sc_trace(mVcdFile, tmp_1_1_0_2_fu_694_p2, "tmp_1_1_0_2_fu_694_p2");
    sc_trace(mVcdFile, tmp_1_1_0_2_reg_1050, "tmp_1_1_0_2_reg_1050");
    sc_trace(mVcdFile, tmp_1_1_2_1_fu_699_p2, "tmp_1_1_2_1_fu_699_p2");
    sc_trace(mVcdFile, tmp_1_1_2_1_reg_1055, "tmp_1_1_2_1_reg_1055");
    sc_trace(mVcdFile, sum_2_0_2_2_fu_730_p2, "sum_2_0_2_2_fu_730_p2");
    sc_trace(mVcdFile, sum_2_0_2_2_reg_1065, "sum_2_0_2_2_reg_1065");
    sc_trace(mVcdFile, tmp_1_1_2_2_fu_736_p2, "tmp_1_1_2_2_fu_736_p2");
    sc_trace(mVcdFile, tmp_1_1_2_2_reg_1070, "tmp_1_1_2_2_reg_1070");
    sc_trace(mVcdFile, tmp8_fu_747_p2, "tmp8_fu_747_p2");
    sc_trace(mVcdFile, tmp8_reg_1075, "tmp8_reg_1075");
    sc_trace(mVcdFile, tmp_1_2_1_1_reg_1080, "tmp_1_2_1_1_reg_1080");
    sc_trace(mVcdFile, sum_2_1_2_2_fu_777_p2, "sum_2_1_2_2_fu_777_p2");
    sc_trace(mVcdFile, sum_2_1_2_2_reg_1085, "sum_2_1_2_2_reg_1085");
    sc_trace(mVcdFile, tmp17_fu_792_p2, "tmp17_fu_792_p2");
    sc_trace(mVcdFile, tmp17_reg_1090, "tmp17_reg_1090");
    sc_trace(mVcdFile, sum_2_2_2_2_fu_814_p2, "sum_2_2_2_2_fu_814_p2");
    sc_trace(mVcdFile, sum_2_2_2_2_reg_1095, "sum_2_2_2_2_reg_1095");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_block_pp0_stage7_subdone, "ap_block_pp0_stage7_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage3_subdone, "ap_block_pp0_stage3_subdone");
    sc_trace(mVcdFile, ap_phi_mux_i_phi_fu_317_p4, "ap_phi_mux_i_phi_fu_317_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, tmp_3_cast_fu_495_p1, "tmp_3_cast_fu_495_p1");
    sc_trace(mVcdFile, tmp_4_cast_fu_506_p1, "tmp_4_cast_fu_506_p1");
    sc_trace(mVcdFile, tmp_5_cast_fu_528_p1, "tmp_5_cast_fu_528_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, tmp_14_cast_fu_553_p1, "tmp_14_cast_fu_553_p1");
    sc_trace(mVcdFile, tmp_15_cast_fu_563_p1, "tmp_15_cast_fu_563_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, tmp_16_cast_fu_573_p1, "tmp_16_cast_fu_573_p1");
    sc_trace(mVcdFile, tmp_20_cast_fu_598_p1, "tmp_20_cast_fu_598_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage3, "ap_block_pp0_stage3");
    sc_trace(mVcdFile, tmp_21_cast_fu_609_p1, "tmp_21_cast_fu_609_p1");
    sc_trace(mVcdFile, tmp_6_cast_fu_624_p1, "tmp_6_cast_fu_624_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage4, "ap_block_pp0_stage4");
    sc_trace(mVcdFile, tmp_22_cast_fu_634_p1, "tmp_22_cast_fu_634_p1");
    sc_trace(mVcdFile, tmp_17_cast_fu_649_p1, "tmp_17_cast_fu_649_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage5, "ap_block_pp0_stage5");
    sc_trace(mVcdFile, tmp_23_cast_fu_659_p1, "tmp_23_cast_fu_659_p1");
    sc_trace(mVcdFile, tmp_7_cast_fu_679_p1, "tmp_7_cast_fu_679_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage6, "ap_block_pp0_stage6");
    sc_trace(mVcdFile, tmp_18_cast_fu_689_p1, "tmp_18_cast_fu_689_p1");
    sc_trace(mVcdFile, tmp_24_cast_fu_709_p1, "tmp_24_cast_fu_709_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage7, "ap_block_pp0_stage7");
    sc_trace(mVcdFile, tmp_9_cast_fu_752_p1, "tmp_9_cast_fu_752_p1");
    sc_trace(mVcdFile, tmp_10_cast_fu_787_p1, "tmp_10_cast_fu_787_p1");
    sc_trace(mVcdFile, tmp_12_cast_fu_825_p1, "tmp_12_cast_fu_825_p1");
    sc_trace(mVcdFile, grp_fu_437_p2, "grp_fu_437_p2");
    sc_trace(mVcdFile, tmp_2_fu_477_p3, "tmp_2_fu_477_p3");
    sc_trace(mVcdFile, tmp_cast_fu_473_p1, "tmp_cast_fu_473_p1");
    sc_trace(mVcdFile, p_shl3_cast_fu_485_p1, "p_shl3_cast_fu_485_p1");
    sc_trace(mVcdFile, tmp_4_fu_500_p2, "tmp_4_fu_500_p2");
    sc_trace(mVcdFile, i_cast_fu_469_p1, "i_cast_fu_469_p1");
    sc_trace(mVcdFile, tmp_5_fu_523_p2, "tmp_5_fu_523_p2");
    sc_trace(mVcdFile, tmp_11_fu_536_p3, "tmp_11_fu_536_p3");
    sc_trace(mVcdFile, tmp_5_0_1_cast_fu_533_p1, "tmp_5_0_1_cast_fu_533_p1");
    sc_trace(mVcdFile, p_shl1_cast_fu_543_p1, "p_shl1_cast_fu_543_p1");
    sc_trace(mVcdFile, tmp_13_fu_558_p2, "tmp_13_fu_558_p2");
    sc_trace(mVcdFile, tmp_14_fu_568_p2, "tmp_14_fu_568_p2");
    sc_trace(mVcdFile, tmp_17_fu_581_p3, "tmp_17_fu_581_p3");
    sc_trace(mVcdFile, tmp_5_0_2_cast_fu_578_p1, "tmp_5_0_2_cast_fu_578_p1");
    sc_trace(mVcdFile, p_shl_cast_fu_588_p1, "p_shl_cast_fu_588_p1");
    sc_trace(mVcdFile, tmp_19_fu_603_p2, "tmp_19_fu_603_p2");
    sc_trace(mVcdFile, tmp_6_fu_619_p2, "tmp_6_fu_619_p2");
    sc_trace(mVcdFile, tmp_20_fu_629_p2, "tmp_20_fu_629_p2");
    sc_trace(mVcdFile, tmp_15_fu_644_p2, "tmp_15_fu_644_p2");
    sc_trace(mVcdFile, tmp_21_fu_654_p2, "tmp_21_fu_654_p2");
    sc_trace(mVcdFile, tmp_7_fu_674_p2, "tmp_7_fu_674_p2");
    sc_trace(mVcdFile, tmp_16_fu_684_p2, "tmp_16_fu_684_p2");
    sc_trace(mVcdFile, tmp_22_fu_704_p2, "tmp_22_fu_704_p2");
    sc_trace(mVcdFile, tmp7_fu_714_p2, "tmp7_fu_714_p2");
    sc_trace(mVcdFile, tmp6_fu_719_p2, "tmp6_fu_719_p2");
    sc_trace(mVcdFile, tmp4_fu_725_p2, "tmp4_fu_725_p2");
    sc_trace(mVcdFile, tmp_fu_742_p2, "tmp_fu_742_p2");
    sc_trace(mVcdFile, tmp12_fu_762_p2, "tmp12_fu_762_p2");
    sc_trace(mVcdFile, tmp10_fu_756_p2, "tmp10_fu_756_p2");
    sc_trace(mVcdFile, tmp13_fu_766_p2, "tmp13_fu_766_p2");
    sc_trace(mVcdFile, tmp11_fu_771_p2, "tmp11_fu_771_p2");
    sc_trace(mVcdFile, tmp_8_fu_782_p2, "tmp_8_fu_782_p2");
    sc_trace(mVcdFile, tmp19_fu_797_p2, "tmp19_fu_797_p2");
    sc_trace(mVcdFile, tmp20_fu_803_p2, "tmp20_fu_803_p2");
    sc_trace(mVcdFile, tmp18_fu_809_p2, "tmp18_fu_809_p2");
    sc_trace(mVcdFile, tmp_10_fu_820_p2, "tmp_10_fu_820_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage4_subdone, "ap_block_pp0_stage4_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage5_subdone, "ap_block_pp0_stage5_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage6_subdone, "ap_block_pp0_stage6_subdone");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
    mHdltvinHandle.open("convolution2D.hdltvin.dat");
    mHdltvoutHandle.open("convolution2D.hdltvout.dat");
}

convolution2D::~convolution2D() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void convolution2D::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage7_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        i_reg_313 = i_1_reg_879.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_313 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0))) {
        reg_332 = input_r_q0.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0)))) {
        reg_332 = input_r_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0))) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0))) {
            reg_337 = kernel_q0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
            reg_337 = kernel_q1.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond3_reg_875 = exitcond3_fu_457_p2.read();
        exitcond3_reg_875_pp0_iter1_reg = exitcond3_reg_875.read();
        tmp_9_reg_903_pp0_iter1_reg = tmp_9_reg_903.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        i_1_reg_879 = i_1_fu_463_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0))) {
        kernel_load_1_reg_921 = kernel_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        kernel_load_2_reg_940 = kernel_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        kernel_load_5_reg_956 = kernel_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0))) {
        kernel_load_6_reg_998 = kernel_q0.read();
        kernel_load_7_reg_1004 = kernel_q1.read();
        tmp_1_0_1_1_reg_988 = grp_fu_346_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        reg_324 = input_r_q0.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)))) {
        reg_328 = kernel_q0.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0)))) {
        reg_342 = input_r_q1.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)))) {
        reg_395 = grp_fu_346_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0)))) {
        reg_399 = grp_fu_352_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)))) {
        reg_403 = grp_fu_357_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        reg_407 = grp_fu_363_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0)))) {
        reg_411 = grp_fu_368_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        reg_415 = grp_fu_374_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_reg_875_pp0_iter1_reg.read())))) {
        reg_419 = grp_fu_379_p2.read();
        reg_453 = grp_fu_447_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0)))) {
        reg_423 = grp_fu_385_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        reg_427 = grp_fu_390_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0)))) {
        reg_443 = grp_fu_431_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0))) {
        sum_2_0_2_2_reg_1065 = sum_2_0_2_2_fu_730_p2.read();
        tmp8_reg_1075 = tmp8_fu_747_p2.read();
        tmp_1_1_2_2_reg_1070 = tmp_1_1_2_2_fu_736_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        sum_2_1_2_2_reg_1085 = sum_2_1_2_2_fu_777_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_reg_875_pp0_iter1_reg.read()))) {
        sum_2_2_2_2_reg_1095 = sum_2_2_2_2_fu_814_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_reg_875_pp0_iter1_reg.read()))) {
        tmp17_reg_1090 = tmp17_fu_792_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0))) {
        tmp5_reg_1025 = tmp5_fu_664_p2.read();
        tmp_1_1_2_reg_1030 = tmp_1_1_2_fu_669_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0))) {
        tmp9_reg_1010 = tmp9_fu_639_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0))) {
        tmp_12_reg_927 = tmp_12_fu_547_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        tmp_18_reg_961 = tmp_18_fu_592_p2.read();
        tmp_1_1_0_1_reg_978 = tmp_1_1_0_1_fu_614_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0))) {
        tmp_1_0_2_2_reg_1045 = grp_fu_379_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0))) {
        tmp_1_1_0_2_reg_1050 = tmp_1_1_0_2_fu_694_p2.read();
        tmp_1_1_2_1_reg_1055 = tmp_1_1_2_1_fu_699_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0))) {
        tmp_1_2_1_1_reg_1080 = grp_fu_357_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_457_p2.read()))) {
        tmp_3_reg_886 = tmp_3_fu_489_p2.read();
        tmp_4_0_2_reg_910 = tmp_4_0_2_fu_517_p2.read();
        tmp_9_reg_903 = tmp_9_fu_511_p2.read();
    }
}

void convolution2D::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void convolution2D::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void convolution2D::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[3];
}

void convolution2D::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read()[4];
}

void convolution2D::thread_ap_CS_fsm_pp0_stage4() {
    ap_CS_fsm_pp0_stage4 = ap_CS_fsm.read()[5];
}

void convolution2D::thread_ap_CS_fsm_pp0_stage5() {
    ap_CS_fsm_pp0_stage5 = ap_CS_fsm.read()[6];
}

void convolution2D::thread_ap_CS_fsm_pp0_stage6() {
    ap_CS_fsm_pp0_stage6 = ap_CS_fsm.read()[7];
}

void convolution2D::thread_ap_CS_fsm_pp0_stage7() {
    ap_CS_fsm_pp0_stage7 = ap_CS_fsm.read()[8];
}

void convolution2D::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void convolution2D::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[9];
}

void convolution2D::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_pp0_stage3() {
    ap_block_pp0_stage3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_pp0_stage3_11001() {
    ap_block_pp0_stage3_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_pp0_stage3_subdone() {
    ap_block_pp0_stage3_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_pp0_stage4() {
    ap_block_pp0_stage4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_pp0_stage4_11001() {
    ap_block_pp0_stage4_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_pp0_stage4_subdone() {
    ap_block_pp0_stage4_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_pp0_stage5() {
    ap_block_pp0_stage5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_pp0_stage5_11001() {
    ap_block_pp0_stage5_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_pp0_stage5_subdone() {
    ap_block_pp0_stage5_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_pp0_stage6() {
    ap_block_pp0_stage6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_pp0_stage6_11001() {
    ap_block_pp0_stage6_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_pp0_stage6_subdone() {
    ap_block_pp0_stage6_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_pp0_stage7() {
    ap_block_pp0_stage7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_pp0_stage7_11001() {
    ap_block_pp0_stage7_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_pp0_stage7_subdone() {
    ap_block_pp0_stage7_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_state10_pp0_stage0_iter1() {
    ap_block_state10_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_state11_pp0_stage1_iter1() {
    ap_block_state11_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_state12_pp0_stage2_iter1() {
    ap_block_state12_pp0_stage2_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_state13_pp0_stage3_iter1() {
    ap_block_state13_pp0_stage3_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_state4_pp0_stage2_iter0() {
    ap_block_state4_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_state5_pp0_stage3_iter0() {
    ap_block_state5_pp0_stage3_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_state6_pp0_stage4_iter0() {
    ap_block_state6_pp0_stage4_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_state7_pp0_stage5_iter0() {
    ap_block_state7_pp0_stage5_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_state8_pp0_stage6_iter0() {
    ap_block_state8_pp0_stage6_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_state9_pp0_stage7_iter0() {
    ap_block_state9_pp0_stage7_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(exitcond3_fu_457_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void convolution2D::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void convolution2D::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void convolution2D::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void convolution2D::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void convolution2D::thread_ap_phi_mux_i_phi_fu_317_p4() {
    if ((esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_phi_fu_317_p4 = i_1_reg_879.read();
    } else {
        ap_phi_mux_i_phi_fu_317_p4 = i_reg_313.read();
    }
}

void convolution2D::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void convolution2D::thread_exitcond3_fu_457_p2() {
    exitcond3_fu_457_p2 = (!ap_phi_mux_i_phi_fu_317_p4.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i_phi_fu_317_p4.read() == ap_const_lv2_3);
}

void convolution2D::thread_grp_fu_346_p2() {
    grp_fu_346_p2 = (!reg_328.read().is_01() || !reg_324.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_328.read()) * sc_bigint<32>(reg_324.read());
}

void convolution2D::thread_grp_fu_352_p2() {
    grp_fu_352_p2 = (!kernel_load_1_reg_921.read().is_01() || !reg_332.read().is_01())? sc_lv<32>(): sc_bigint<32>(kernel_load_1_reg_921.read()) * sc_bigint<32>(reg_332.read());
}

void convolution2D::thread_grp_fu_357_p2() {
    grp_fu_357_p2 = (!reg_328.read().is_01() || !reg_332.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_328.read()) * sc_bigint<32>(reg_332.read());
}

void convolution2D::thread_grp_fu_363_p2() {
    grp_fu_363_p2 = (!kernel_load_2_reg_940.read().is_01() || !reg_324.read().is_01())? sc_lv<32>(): sc_bigint<32>(kernel_load_2_reg_940.read()) * sc_bigint<32>(reg_324.read());
}

void convolution2D::thread_grp_fu_368_p2() {
    grp_fu_368_p2 = (!reg_337.read().is_01() || !reg_332.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_337.read()) * sc_bigint<32>(reg_332.read());
}

void convolution2D::thread_grp_fu_374_p2() {
    grp_fu_374_p2 = (!kernel_load_5_reg_956.read().is_01() || !reg_332.read().is_01())? sc_lv<32>(): sc_bigint<32>(kernel_load_5_reg_956.read()) * sc_bigint<32>(reg_332.read());
}

void convolution2D::thread_grp_fu_379_p2() {
    grp_fu_379_p2 = (!reg_337.read().is_01() || !reg_324.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_337.read()) * sc_bigint<32>(reg_324.read());
}

void convolution2D::thread_grp_fu_385_p2() {
    grp_fu_385_p2 = (!kernel_load_6_reg_998.read().is_01() || !reg_324.read().is_01())? sc_lv<32>(): sc_bigint<32>(kernel_load_6_reg_998.read()) * sc_bigint<32>(reg_324.read());
}

void convolution2D::thread_grp_fu_390_p2() {
    grp_fu_390_p2 = (!kernel_load_7_reg_1004.read().is_01() || !reg_342.read().is_01())? sc_lv<32>(): sc_bigint<32>(kernel_load_7_reg_1004.read()) * sc_bigint<32>(reg_342.read());
}

void convolution2D::thread_grp_fu_431_p2() {
    grp_fu_431_p2 = (!reg_399.read().is_01() || !reg_395.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_399.read()) + sc_biguint<32>(reg_395.read()));
}

void convolution2D::thread_grp_fu_437_p2() {
    grp_fu_437_p2 = (!reg_411.read().is_01() || !reg_407.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_411.read()) + sc_biguint<32>(reg_407.read()));
}

void convolution2D::thread_grp_fu_447_p2() {
    grp_fu_447_p2 = (!reg_443.read().is_01() || !grp_fu_437_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_443.read()) + sc_biguint<32>(grp_fu_437_p2.read()));
}

void convolution2D::thread_i_1_fu_463_p2() {
    i_1_fu_463_p2 = (!ap_phi_mux_i_phi_fu_317_p4.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(ap_phi_mux_i_phi_fu_317_p4.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void convolution2D::thread_i_cast_fu_469_p1() {
    i_cast_fu_469_p1 = esl_zext<3,2>(ap_phi_mux_i_phi_fu_317_p4.read());
}

void convolution2D::thread_input_r_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage7.read(), ap_const_boolean_0))) {
            input_r_address0 =  (sc_lv<5>) (tmp_24_cast_fu_709_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage6.read(), ap_const_boolean_0))) {
            input_r_address0 =  (sc_lv<5>) (tmp_7_cast_fu_679_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage5.read(), ap_const_boolean_0))) {
            input_r_address0 =  (sc_lv<5>) (tmp_17_cast_fu_649_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0))) {
            input_r_address0 =  (sc_lv<5>) (tmp_22_cast_fu_634_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            input_r_address0 =  (sc_lv<5>) (tmp_20_cast_fu_598_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            input_r_address0 =  (sc_lv<5>) (tmp_15_cast_fu_563_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            input_r_address0 =  (sc_lv<5>) (tmp_5_cast_fu_528_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            input_r_address0 =  (sc_lv<5>) (tmp_3_cast_fu_495_p1.read());
        } else {
            input_r_address0 = "XXXXX";
        }
    } else {
        input_r_address0 = "XXXXX";
    }
}

void convolution2D::thread_input_r_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage6.read(), ap_const_boolean_0))) {
            input_r_address1 =  (sc_lv<5>) (tmp_18_cast_fu_689_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage5.read(), ap_const_boolean_0))) {
            input_r_address1 =  (sc_lv<5>) (tmp_23_cast_fu_659_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0))) {
            input_r_address1 =  (sc_lv<5>) (tmp_6_cast_fu_624_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            input_r_address1 =  (sc_lv<5>) (tmp_21_cast_fu_609_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            input_r_address1 =  (sc_lv<5>) (tmp_16_cast_fu_573_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            input_r_address1 =  (sc_lv<5>) (tmp_14_cast_fu_553_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            input_r_address1 =  (sc_lv<5>) (tmp_4_cast_fu_506_p1.read());
        } else {
            input_r_address1 = "XXXXX";
        }
    } else {
        input_r_address1 = "XXXXX";
    }
}

void convolution2D::thread_input_r_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        input_r_ce0 = ap_const_logic_1;
    } else {
        input_r_ce0 = ap_const_logic_0;
    }
}

void convolution2D::thread_input_r_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        input_r_ce1 = ap_const_logic_1;
    } else {
        input_r_ce1 = ap_const_logic_0;
    }
}

void convolution2D::thread_kernel_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0))) {
            kernel_address0 =  (sc_lv<4>) (ap_const_lv64_8);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            kernel_address0 =  (sc_lv<4>) (ap_const_lv64_6);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            kernel_address0 =  (sc_lv<4>) (ap_const_lv64_4);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            kernel_address0 =  (sc_lv<4>) (ap_const_lv64_2);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            kernel_address0 =  (sc_lv<4>) (ap_const_lv64_0);
        } else {
            kernel_address0 =  (sc_lv<4>) ("XXXX");
        }
    } else {
        kernel_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void convolution2D::thread_kernel_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            kernel_address1 =  (sc_lv<4>) (ap_const_lv64_7);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            kernel_address1 =  (sc_lv<4>) (ap_const_lv64_5);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            kernel_address1 =  (sc_lv<4>) (ap_const_lv64_3);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            kernel_address1 =  (sc_lv<4>) (ap_const_lv64_1);
        } else {
            kernel_address1 =  (sc_lv<4>) ("XXXX");
        }
    } else {
        kernel_address1 =  (sc_lv<4>) ("XXXX");
    }
}

void convolution2D::thread_kernel_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        kernel_ce0 = ap_const_logic_1;
    } else {
        kernel_ce0 = ap_const_logic_0;
    }
}

void convolution2D::thread_kernel_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        kernel_ce1 = ap_const_logic_1;
    } else {
        kernel_ce1 = ap_const_logic_0;
    }
}

void convolution2D::thread_output_r_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            output_r_address0 =  (sc_lv<4>) (tmp_12_cast_fu_825_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            output_r_address0 =  (sc_lv<4>) (tmp_10_cast_fu_787_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            output_r_address0 =  (sc_lv<4>) (tmp_9_cast_fu_752_p1.read());
        } else {
            output_r_address0 =  (sc_lv<4>) ("XXXX");
        }
    } else {
        output_r_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void convolution2D::thread_output_r_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void convolution2D::thread_output_r_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            output_r_d0 = sum_2_2_2_2_reg_1095.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            output_r_d0 = sum_2_1_2_2_reg_1085.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            output_r_d0 = sum_2_0_2_2_reg_1065.read();
        } else {
            output_r_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        output_r_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void convolution2D::thread_output_r_we0() {
    if (((esl_seteq<1,1,1>(exitcond3_reg_875.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_reg_875_pp0_iter1_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_reg_875_pp0_iter1_reg.read())))) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void convolution2D::thread_p_shl1_cast_fu_543_p1() {
    p_shl1_cast_fu_543_p1 = esl_zext<5,4>(tmp_11_fu_536_p3.read());
}

void convolution2D::thread_p_shl3_cast_fu_485_p1() {
    p_shl3_cast_fu_485_p1 = esl_zext<5,4>(tmp_2_fu_477_p3.read());
}

void convolution2D::thread_p_shl_cast_fu_588_p1() {
    p_shl_cast_fu_588_p1 = esl_zext<6,5>(tmp_17_fu_581_p3.read());
}

void convolution2D::thread_sum_2_0_2_2_fu_730_p2() {
    sum_2_0_2_2_fu_730_p2 = (!reg_453.read().is_01() || !tmp4_fu_725_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_453.read()) + sc_biguint<32>(tmp4_fu_725_p2.read()));
}

void convolution2D::thread_sum_2_1_2_2_fu_777_p2() {
    sum_2_1_2_2_fu_777_p2 = (!tmp8_reg_1075.read().is_01() || !tmp11_fu_771_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp8_reg_1075.read()) + sc_biguint<32>(tmp11_fu_771_p2.read()));
}

void convolution2D::thread_sum_2_2_2_2_fu_814_p2() {
    sum_2_2_2_2_fu_814_p2 = (!reg_453.read().is_01() || !tmp18_fu_809_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_453.read()) + sc_biguint<32>(tmp18_fu_809_p2.read()));
}

void convolution2D::thread_tmp10_fu_756_p2() {
    tmp10_fu_756_p2 = (!reg_415.read().is_01() || !reg_403.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_415.read()) + sc_biguint<32>(reg_403.read()));
}

void convolution2D::thread_tmp11_fu_771_p2() {
    tmp11_fu_771_p2 = (!tmp10_fu_756_p2.read().is_01() || !tmp13_fu_766_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp10_fu_756_p2.read()) + sc_biguint<32>(tmp13_fu_766_p2.read()));
}

void convolution2D::thread_tmp12_fu_762_p2() {
    tmp12_fu_762_p2 = (!tmp_1_1_2_2_reg_1070.read().is_01() || !tmp_1_1_2_1_reg_1055.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_1_1_2_2_reg_1070.read()) + sc_biguint<32>(tmp_1_1_2_1_reg_1055.read()));
}

void convolution2D::thread_tmp13_fu_766_p2() {
    tmp13_fu_766_p2 = (!tmp_1_1_2_reg_1030.read().is_01() || !tmp12_fu_762_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_1_1_2_reg_1030.read()) + sc_biguint<32>(tmp12_fu_762_p2.read()));
}

void convolution2D::thread_tmp17_fu_792_p2() {
    tmp17_fu_792_p2 = (!reg_415.read().is_01() || !tmp_1_2_1_1_reg_1080.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_415.read()) + sc_biguint<32>(tmp_1_2_1_1_reg_1080.read()));
}

void convolution2D::thread_tmp18_fu_809_p2() {
    tmp18_fu_809_p2 = (!tmp17_reg_1090.read().is_01() || !tmp20_fu_803_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp17_reg_1090.read()) + sc_biguint<32>(tmp20_fu_803_p2.read()));
}

void convolution2D::thread_tmp19_fu_797_p2() {
    tmp19_fu_797_p2 = (!reg_419.read().is_01() || !reg_427.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_419.read()) + sc_biguint<32>(reg_427.read()));
}

void convolution2D::thread_tmp20_fu_803_p2() {
    tmp20_fu_803_p2 = (!reg_423.read().is_01() || !tmp19_fu_797_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_423.read()) + sc_biguint<32>(tmp19_fu_797_p2.read()));
}

void convolution2D::thread_tmp4_fu_725_p2() {
    tmp4_fu_725_p2 = (!tmp5_reg_1025.read().is_01() || !tmp6_fu_719_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp5_reg_1025.read()) + sc_biguint<32>(tmp6_fu_719_p2.read()));
}

void convolution2D::thread_tmp5_fu_664_p2() {
    tmp5_fu_664_p2 = (!reg_415.read().is_01() || !tmp_1_0_1_1_reg_988.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_415.read()) + sc_biguint<32>(tmp_1_0_1_1_reg_988.read()));
}

void convolution2D::thread_tmp6_fu_719_p2() {
    tmp6_fu_719_p2 = (!reg_423.read().is_01() || !tmp7_fu_714_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_423.read()) + sc_biguint<32>(tmp7_fu_714_p2.read()));
}

void convolution2D::thread_tmp7_fu_714_p2() {
    tmp7_fu_714_p2 = (!tmp_1_0_2_2_reg_1045.read().is_01() || !reg_427.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_1_0_2_2_reg_1045.read()) + sc_biguint<32>(reg_427.read()));
}

void convolution2D::thread_tmp8_fu_747_p2() {
    tmp8_fu_747_p2 = (!tmp9_reg_1010.read().is_01() || !tmp_fu_742_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp9_reg_1010.read()) + sc_biguint<32>(tmp_fu_742_p2.read()));
}

void convolution2D::thread_tmp9_fu_639_p2() {
    tmp9_fu_639_p2 = (!tmp_1_1_0_1_reg_978.read().is_01() || !reg_403.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_1_1_0_1_reg_978.read()) + sc_biguint<32>(reg_403.read()));
}

void convolution2D::thread_tmp_10_cast_fu_787_p1() {
    tmp_10_cast_fu_787_p1 = esl_sext<64,5>(tmp_8_fu_782_p2.read());
}

void convolution2D::thread_tmp_10_fu_820_p2() {
    tmp_10_fu_820_p2 = (!tmp_9_reg_903_pp0_iter1_reg.read().is_01() || !ap_const_lv5_2.is_01())? sc_lv<5>(): (sc_bigint<5>(tmp_9_reg_903_pp0_iter1_reg.read()) + sc_biguint<5>(ap_const_lv5_2));
}

void convolution2D::thread_tmp_11_fu_536_p3() {
    tmp_11_fu_536_p3 = esl_concat<2,2>(i_1_reg_879.read(), ap_const_lv2_0);
}

void convolution2D::thread_tmp_12_cast_fu_825_p1() {
    tmp_12_cast_fu_825_p1 = esl_sext<64,5>(tmp_10_fu_820_p2.read());
}

void convolution2D::thread_tmp_12_fu_547_p2() {
    tmp_12_fu_547_p2 = (!tmp_5_0_1_cast_fu_533_p1.read().is_01() || !p_shl1_cast_fu_543_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_5_0_1_cast_fu_533_p1.read()) + sc_biguint<5>(p_shl1_cast_fu_543_p1.read()));
}

void convolution2D::thread_tmp_13_fu_558_p2() {
    tmp_13_fu_558_p2 = (!tmp_12_reg_927.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_12_reg_927.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void convolution2D::thread_tmp_14_cast_fu_553_p1() {
    tmp_14_cast_fu_553_p1 = esl_zext<64,5>(tmp_12_fu_547_p2.read());
}

void convolution2D::thread_tmp_14_fu_568_p2() {
    tmp_14_fu_568_p2 = (!tmp_12_reg_927.read().is_01() || !ap_const_lv5_2.is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_12_reg_927.read()) + sc_biguint<5>(ap_const_lv5_2));
}

void convolution2D::thread_tmp_15_cast_fu_563_p1() {
    tmp_15_cast_fu_563_p1 = esl_zext<64,5>(tmp_13_fu_558_p2.read());
}

void convolution2D::thread_tmp_15_fu_644_p2() {
    tmp_15_fu_644_p2 = (!tmp_12_reg_927.read().is_01() || !ap_const_lv5_3.is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_12_reg_927.read()) + sc_biguint<5>(ap_const_lv5_3));
}

void convolution2D::thread_tmp_16_cast_fu_573_p1() {
    tmp_16_cast_fu_573_p1 = esl_zext<64,5>(tmp_14_fu_568_p2.read());
}

void convolution2D::thread_tmp_16_fu_684_p2() {
    tmp_16_fu_684_p2 = (!tmp_12_reg_927.read().is_01() || !ap_const_lv5_4.is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_12_reg_927.read()) + sc_biguint<5>(ap_const_lv5_4));
}

void convolution2D::thread_tmp_17_cast_fu_649_p1() {
    tmp_17_cast_fu_649_p1 = esl_zext<64,5>(tmp_15_fu_644_p2.read());
}

void convolution2D::thread_tmp_17_fu_581_p3() {
    tmp_17_fu_581_p3 = esl_concat<3,2>(tmp_4_0_2_reg_910.read(), ap_const_lv2_0);
}

void convolution2D::thread_tmp_18_cast_fu_689_p1() {
    tmp_18_cast_fu_689_p1 = esl_zext<64,5>(tmp_16_fu_684_p2.read());
}

void convolution2D::thread_tmp_18_fu_592_p2() {
    tmp_18_fu_592_p2 = (!tmp_5_0_2_cast_fu_578_p1.read().is_01() || !p_shl_cast_fu_588_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_5_0_2_cast_fu_578_p1.read()) + sc_biguint<6>(p_shl_cast_fu_588_p1.read()));
}

void convolution2D::thread_tmp_19_fu_603_p2() {
    tmp_19_fu_603_p2 = (!tmp_18_fu_592_p2.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_18_fu_592_p2.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void convolution2D::thread_tmp_1_1_0_1_fu_614_p2() {
    tmp_1_1_0_1_fu_614_p2 = (!kernel_load_1_reg_921.read().is_01() || !reg_324.read().is_01())? sc_lv<32>(): sc_bigint<32>(kernel_load_1_reg_921.read()) * sc_bigint<32>(reg_324.read());
}

void convolution2D::thread_tmp_1_1_0_2_fu_694_p2() {
    tmp_1_1_0_2_fu_694_p2 = (!kernel_load_2_reg_940.read().is_01() || !reg_332.read().is_01())? sc_lv<32>(): sc_bigint<32>(kernel_load_2_reg_940.read()) * sc_bigint<32>(reg_332.read());
}

void convolution2D::thread_tmp_1_1_2_1_fu_699_p2() {
    tmp_1_1_2_1_fu_699_p2 = (!kernel_load_7_reg_1004.read().is_01() || !reg_324.read().is_01())? sc_lv<32>(): sc_bigint<32>(kernel_load_7_reg_1004.read()) * sc_bigint<32>(reg_324.read());
}

void convolution2D::thread_tmp_1_1_2_2_fu_736_p2() {
    tmp_1_1_2_2_fu_736_p2 = (!reg_337.read().is_01() || !reg_342.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_337.read()) * sc_bigint<32>(reg_342.read());
}

void convolution2D::thread_tmp_1_1_2_fu_669_p2() {
    tmp_1_1_2_fu_669_p2 = (!kernel_load_6_reg_998.read().is_01() || !reg_342.read().is_01())? sc_lv<32>(): sc_bigint<32>(kernel_load_6_reg_998.read()) * sc_bigint<32>(reg_342.read());
}

void convolution2D::thread_tmp_20_cast_fu_598_p1() {
    tmp_20_cast_fu_598_p1 = esl_zext<64,6>(tmp_18_fu_592_p2.read());
}

void convolution2D::thread_tmp_20_fu_629_p2() {
    tmp_20_fu_629_p2 = (!tmp_18_reg_961.read().is_01() || !ap_const_lv6_2.is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_18_reg_961.read()) + sc_biguint<6>(ap_const_lv6_2));
}

void convolution2D::thread_tmp_21_cast_fu_609_p1() {
    tmp_21_cast_fu_609_p1 = esl_zext<64,6>(tmp_19_fu_603_p2.read());
}

void convolution2D::thread_tmp_21_fu_654_p2() {
    tmp_21_fu_654_p2 = (!tmp_18_reg_961.read().is_01() || !ap_const_lv6_3.is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_18_reg_961.read()) + sc_biguint<6>(ap_const_lv6_3));
}

void convolution2D::thread_tmp_22_cast_fu_634_p1() {
    tmp_22_cast_fu_634_p1 = esl_sext<64,6>(tmp_20_fu_629_p2.read());
}

void convolution2D::thread_tmp_22_fu_704_p2() {
    tmp_22_fu_704_p2 = (!tmp_18_reg_961.read().is_01() || !ap_const_lv6_4.is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_18_reg_961.read()) + sc_biguint<6>(ap_const_lv6_4));
}

void convolution2D::thread_tmp_23_cast_fu_659_p1() {
    tmp_23_cast_fu_659_p1 = esl_sext<64,6>(tmp_21_fu_654_p2.read());
}

void convolution2D::thread_tmp_24_cast_fu_709_p1() {
    tmp_24_cast_fu_709_p1 = esl_sext<64,6>(tmp_22_fu_704_p2.read());
}

void convolution2D::thread_tmp_2_fu_477_p3() {
    tmp_2_fu_477_p3 = esl_concat<2,2>(ap_phi_mux_i_phi_fu_317_p4.read(), ap_const_lv2_0);
}

void convolution2D::thread_tmp_3_cast_fu_495_p1() {
    tmp_3_cast_fu_495_p1 = esl_zext<64,5>(tmp_3_fu_489_p2.read());
}

void convolution2D::thread_tmp_3_fu_489_p2() {
    tmp_3_fu_489_p2 = (!tmp_cast_fu_473_p1.read().is_01() || !p_shl3_cast_fu_485_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_cast_fu_473_p1.read()) + sc_biguint<5>(p_shl3_cast_fu_485_p1.read()));
}

void convolution2D::thread_tmp_4_0_2_fu_517_p2() {
    tmp_4_0_2_fu_517_p2 = (!i_cast_fu_469_p1.read().is_01() || !ap_const_lv3_2.is_01())? sc_lv<3>(): (sc_biguint<3>(i_cast_fu_469_p1.read()) + sc_biguint<3>(ap_const_lv3_2));
}

void convolution2D::thread_tmp_4_cast_fu_506_p1() {
    tmp_4_cast_fu_506_p1 = esl_zext<64,5>(tmp_4_fu_500_p2.read());
}

void convolution2D::thread_tmp_4_fu_500_p2() {
    tmp_4_fu_500_p2 = (!tmp_3_fu_489_p2.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_3_fu_489_p2.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void convolution2D::thread_tmp_5_0_1_cast_fu_533_p1() {
    tmp_5_0_1_cast_fu_533_p1 = esl_zext<5,2>(i_1_reg_879.read());
}

void convolution2D::thread_tmp_5_0_2_cast_fu_578_p1() {
    tmp_5_0_2_cast_fu_578_p1 = esl_zext<6,3>(tmp_4_0_2_reg_910.read());
}

void convolution2D::thread_tmp_5_cast_fu_528_p1() {
    tmp_5_cast_fu_528_p1 = esl_zext<64,5>(tmp_5_fu_523_p2.read());
}

void convolution2D::thread_tmp_5_fu_523_p2() {
    tmp_5_fu_523_p2 = (!tmp_3_reg_886.read().is_01() || !ap_const_lv5_2.is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_3_reg_886.read()) + sc_biguint<5>(ap_const_lv5_2));
}

void convolution2D::thread_tmp_6_cast_fu_624_p1() {
    tmp_6_cast_fu_624_p1 = esl_zext<64,5>(tmp_6_fu_619_p2.read());
}

void convolution2D::thread_tmp_6_fu_619_p2() {
    tmp_6_fu_619_p2 = (!tmp_3_reg_886.read().is_01() || !ap_const_lv5_3.is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_3_reg_886.read()) + sc_biguint<5>(ap_const_lv5_3));
}

void convolution2D::thread_tmp_7_cast_fu_679_p1() {
    tmp_7_cast_fu_679_p1 = esl_zext<64,5>(tmp_7_fu_674_p2.read());
}

void convolution2D::thread_tmp_7_fu_674_p2() {
    tmp_7_fu_674_p2 = (!tmp_3_reg_886.read().is_01() || !ap_const_lv5_4.is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_3_reg_886.read()) + sc_biguint<5>(ap_const_lv5_4));
}

void convolution2D::thread_tmp_8_fu_782_p2() {
    tmp_8_fu_782_p2 = (!tmp_9_reg_903_pp0_iter1_reg.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_bigint<5>(tmp_9_reg_903_pp0_iter1_reg.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void convolution2D::thread_tmp_9_cast_fu_752_p1() {
    tmp_9_cast_fu_752_p1 = esl_sext<64,5>(tmp_9_reg_903.read());
}

void convolution2D::thread_tmp_9_fu_511_p2() {
    tmp_9_fu_511_p2 = (!p_shl3_cast_fu_485_p1.read().is_01() || !tmp_cast_fu_473_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(p_shl3_cast_fu_485_p1.read()) - sc_biguint<5>(tmp_cast_fu_473_p1.read()));
}

void convolution2D::thread_tmp_cast_fu_473_p1() {
    tmp_cast_fu_473_p1 = esl_zext<5,2>(ap_phi_mux_i_phi_fu_317_p4.read());
}

void convolution2D::thread_tmp_fu_742_p2() {
    tmp_fu_742_p2 = (!reg_419.read().is_01() || !tmp_1_1_0_2_reg_1050.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_419.read()) + sc_biguint<32>(tmp_1_1_0_2_reg_1050.read()));
}

void convolution2D::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond3_fu_457_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond3_fu_457_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 8 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            }
            break;
        case 32 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage4_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            }
            break;
        case 64 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage5_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            }
            break;
        case 128 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage6_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            }
            break;
        case 256 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage7_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<10>) ("XXXXXXXXXX");
            break;
    }
}

void convolution2D::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_r_address0\" :  \"" << input_r_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_r_ce0\" :  \"" << input_r_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_r_q0\" :  \"" << input_r_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_r_address1\" :  \"" << input_r_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_r_ce1\" :  \"" << input_r_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_r_q1\" :  \"" << input_r_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"kernel_address0\" :  \"" << kernel_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"kernel_ce0\" :  \"" << kernel_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_q0\" :  \"" << kernel_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"kernel_address1\" :  \"" << kernel_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"kernel_ce1\" :  \"" << kernel_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_q1\" :  \"" << kernel_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_address0\" :  \"" << output_r_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_ce0\" :  \"" << output_r_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_we0\" :  \"" << output_r_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_d0\" :  \"" << output_r_d0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

