// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "convolution2D.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic convolution2D::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic convolution2D::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<9> convolution2D::ap_ST_fsm_state1 = "1";
const sc_lv<9> convolution2D::ap_ST_fsm_state2 = "10";
const sc_lv<9> convolution2D::ap_ST_fsm_state3 = "100";
const sc_lv<9> convolution2D::ap_ST_fsm_state4 = "1000";
const sc_lv<9> convolution2D::ap_ST_fsm_state5 = "10000";
const sc_lv<9> convolution2D::ap_ST_fsm_state6 = "100000";
const sc_lv<9> convolution2D::ap_ST_fsm_state7 = "1000000";
const sc_lv<9> convolution2D::ap_ST_fsm_state8 = "10000000";
const sc_lv<9> convolution2D::ap_ST_fsm_state9 = "100000000";
const sc_lv<32> convolution2D::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> convolution2D::ap_const_lv32_3 = "11";
const sc_lv<32> convolution2D::ap_const_lv32_4 = "100";
const sc_lv<32> convolution2D::ap_const_lv32_5 = "101";
const sc_lv<32> convolution2D::ap_const_lv32_1 = "1";
const sc_lv<1> convolution2D::ap_const_lv1_0 = "0";
const sc_lv<32> convolution2D::ap_const_lv32_2 = "10";
const sc_lv<1> convolution2D::ap_const_lv1_1 = "1";
const sc_lv<32> convolution2D::ap_const_lv32_6 = "110";
const sc_lv<32> convolution2D::ap_const_lv32_7 = "111";
const sc_lv<2> convolution2D::ap_const_lv2_0 = "00";
const sc_lv<32> convolution2D::ap_const_lv32_8 = "1000";
const sc_lv<2> convolution2D::ap_const_lv2_3 = "11";
const sc_lv<2> convolution2D::ap_const_lv2_1 = "1";
const sc_lv<3> convolution2D::ap_const_lv3_2 = "10";
const bool convolution2D::ap_const_boolean_1 = true;

convolution2D::convolution2D(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_329_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_329_p2 );

    SC_METHOD(thread_arrayNo63_mask_fu_468_p3);
    sensitive << ( tmp_21_fu_458_p4 );

    SC_METHOD(thread_cond2_fu_476_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond2_fu_377_p2 );
    sensitive << ( arrayNo63_mask_fu_468_p3 );

    SC_METHOD(thread_exitcond2_fu_377_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_reg_292 );

    SC_METHOD(thread_exitcond3_fu_329_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_280 );

    SC_METHOD(thread_grp_fu_303_p3);
    sensitive << ( input_0_q0 );
    sensitive << ( input_1_q0 );
    sensitive << ( tmp_13_reg_735 );

    SC_METHOD(thread_grp_fu_310_p3);
    sensitive << ( input_0_q1 );
    sensitive << ( input_1_q1 );
    sensitive << ( tmp_20_reg_756 );

    SC_METHOD(thread_i_1_fu_335_p2);
    sensitive << ( i_reg_280 );

    SC_METHOD(thread_i_cast_fu_325_p1);
    sensitive << ( i_reg_280 );

    SC_METHOD(thread_input_0_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_6_fu_410_p1 );
    sensitive << ( tmp_8_fu_491_p1 );
    sensitive << ( tmp_9_fu_535_p1 );

    SC_METHOD(thread_input_0_address1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_15_fu_438_p1 );
    sensitive << ( tmp_17_fu_523_p1 );
    sensitive << ( tmp_19_fu_562_p1 );

    SC_METHOD(thread_input_0_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_input_0_ce1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_input_1_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_6_fu_410_p1 );
    sensitive << ( tmp_8_fu_491_p1 );
    sensitive << ( tmp_9_fu_535_p1 );

    SC_METHOD(thread_input_1_address1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_15_fu_438_p1 );
    sensitive << ( tmp_17_fu_523_p1 );
    sensitive << ( tmp_19_fu_562_p1 );

    SC_METHOD(thread_input_1_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_input_1_ce1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_input_2_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_12_cast_fu_502_p1 );
    sensitive << ( tmp_14_cast_fu_545_p1 );

    SC_METHOD(thread_input_2_address1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_13_cast_fu_512_p1 );

    SC_METHOD(thread_input_2_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_input_2_ce1);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_input_load_0_2_phi_fu_574_p3);
    sensitive << ( input_2_q0 );
    sensitive << ( cond2_reg_761 );
    sensitive << ( input_1_load_reg_793 );

    SC_METHOD(thread_input_load_1_2_phi_fu_580_p3);
    sensitive << ( input_1_q0 );
    sensitive << ( input_2_q1 );
    sensitive << ( cond2_reg_761 );

    SC_METHOD(thread_input_load_2_2_phi_fu_598_p3);
    sensitive << ( input_1_q0 );
    sensitive << ( input_2_q0 );
    sensitive << ( cond2_reg_761 );

    SC_METHOD(thread_j_1_fu_383_p2);
    sensitive << ( j_reg_292 );

    SC_METHOD(thread_j_cast_fu_373_p1);
    sensitive << ( j_reg_292 );

    SC_METHOD(thread_newIndex_cast_fu_482_p1);
    sensitive << ( tmp_reg_718 );

    SC_METHOD(thread_newIndex_trunc1_fu_424_p2);
    sensitive << ( tmp_fu_398_p1 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_4_cast_fu_659_p1 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( tmp4_reg_908 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp1_fu_663_p2 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_p_shl_cast_fu_353_p1);
    sensitive << ( tmp_2_fu_345_p3 );

    SC_METHOD(thread_tmp1_fu_663_p2);
    sensitive << ( tmp2_reg_873 );
    sensitive << ( tmp3_reg_903 );

    SC_METHOD(thread_tmp2_fu_605_p2);
    sensitive << ( tmp_1_reg_823 );
    sensitive << ( tmp_1_0_1_reg_838 );

    SC_METHOD(thread_tmp3_fu_636_p2);
    sensitive << ( tmp_1_0_2_reg_853 );
    sensitive << ( tmp_1_1_reg_858 );

    SC_METHOD(thread_tmp4_fu_653_p2);
    sensitive << ( tmp6_fu_648_p2 );
    sensitive << ( tmp5_fu_640_p2 );

    SC_METHOD(thread_tmp5_fu_640_p2);
    sensitive << ( tmp_1_1_1_reg_878 );
    sensitive << ( tmp_1_1_2_reg_883 );

    SC_METHOD(thread_tmp6_fu_648_p2);
    sensitive << ( tmp_1_2_reg_888 );
    sensitive << ( tmp7_fu_644_p2 );

    SC_METHOD(thread_tmp7_fu_644_p2);
    sensitive << ( tmp_1_2_1_reg_893 );
    sensitive << ( tmp_1_2_2_reg_898 );

    SC_METHOD(thread_tmp_10_fu_497_p2);
    sensitive << ( i_cast_reg_673 );
    sensitive << ( newIndex_cast_fu_482_p1 );

    SC_METHOD(thread_tmp_11_fu_507_p2);
    sensitive << ( tmp_5_1_cast_reg_693 );
    sensitive << ( newIndex_cast_fu_482_p1 );

    SC_METHOD(thread_tmp_12_cast_fu_502_p1);
    sensitive << ( tmp_10_fu_497_p2 );

    SC_METHOD(thread_tmp_12_fu_541_p2);
    sensitive << ( tmp_4_2_reg_698 );
    sensitive << ( newIndex_cast_reg_768 );

    SC_METHOD(thread_tmp_13_cast_fu_512_p1);
    sensitive << ( tmp_11_fu_507_p2 );

    SC_METHOD(thread_tmp_14_cast_fu_545_p1);
    sensitive << ( tmp_12_fu_541_p2 );

    SC_METHOD(thread_tmp_14_fu_430_p3);
    sensitive << ( newIndex_trunc1_fu_424_p2 );
    sensitive << ( i_reg_280 );

    SC_METHOD(thread_tmp_15_fu_438_p1);
    sensitive << ( tmp_14_fu_430_p3 );

    SC_METHOD(thread_tmp_16_fu_517_p3);
    sensitive << ( i_1_reg_681 );
    sensitive << ( newIndex_trunc1_reg_740 );

    SC_METHOD(thread_tmp_17_fu_523_p1);
    sensitive << ( tmp_16_fu_517_p3 );

    SC_METHOD(thread_tmp_18_fu_556_p3);
    sensitive << ( tmp_4_2_reg_698 );
    sensitive << ( newIndex_trunc1_reg_740 );

    SC_METHOD(thread_tmp_19_fu_562_p1);
    sensitive << ( tmp_18_fu_556_p3 );

    SC_METHOD(thread_tmp_1_0_1_fu_568_p0);
    sensitive << ( kernel_0_1 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_tmp_1_0_1_fu_568_p2);
    sensitive << ( reg_321 );
    sensitive << ( tmp_1_0_1_fu_568_p0 );

    SC_METHOD(thread_tmp_1_0_2_fu_587_p0);
    sensitive << ( kernel_0_2 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_tmp_1_0_2_fu_587_p2);
    sensitive << ( input_load_0_2_phi_reg_843 );
    sensitive << ( tmp_1_0_2_fu_587_p0 );

    SC_METHOD(thread_tmp_1_1_1_fu_609_p0);
    sensitive << ( kernel_1_1 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_tmp_1_1_1_fu_609_p2);
    sensitive << ( reg_321 );
    sensitive << ( tmp_1_1_1_fu_609_p0 );

    SC_METHOD(thread_tmp_1_1_2_fu_615_p0);
    sensitive << ( kernel_1_2 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_tmp_1_1_2_fu_615_p2);
    sensitive << ( input_load_1_2_phi_reg_848 );
    sensitive << ( tmp_1_1_2_fu_615_p0 );

    SC_METHOD(thread_tmp_1_1_fu_592_p0);
    sensitive << ( kernel_1_0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_tmp_1_1_fu_592_p2);
    sensitive << ( reg_317 );
    sensitive << ( tmp_1_1_fu_592_p0 );

    SC_METHOD(thread_tmp_1_2_1_fu_626_p0);
    sensitive << ( kernel_2_1 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_tmp_1_2_1_fu_626_p2);
    sensitive << ( input_load_2_1_phi_reg_863 );
    sensitive << ( tmp_1_2_1_fu_626_p0 );

    SC_METHOD(thread_tmp_1_2_2_fu_631_p0);
    sensitive << ( kernel_2_2 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_tmp_1_2_2_fu_631_p2);
    sensitive << ( input_load_2_2_phi_reg_868 );
    sensitive << ( tmp_1_2_2_fu_631_p0 );

    SC_METHOD(thread_tmp_1_2_fu_620_p0);
    sensitive << ( kernel_2_0 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_tmp_1_2_fu_620_p2);
    sensitive << ( reg_317 );
    sensitive << ( tmp_1_2_fu_620_p0 );

    SC_METHOD(thread_tmp_1_fu_550_p0);
    sensitive << ( kernel_0_0 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_tmp_1_fu_550_p2);
    sensitive << ( reg_317 );
    sensitive << ( tmp_1_fu_550_p0 );

    SC_METHOD(thread_tmp_21_fu_458_p4);
    sensitive << ( tmp_8_0_2_fu_452_p2 );

    SC_METHOD(thread_tmp_2_fu_345_p3);
    sensitive << ( i_reg_280 );

    SC_METHOD(thread_tmp_3_fu_357_p2);
    sensitive << ( p_shl_cast_fu_353_p1 );
    sensitive << ( tmp_cast_fu_341_p1 );

    SC_METHOD(thread_tmp_4_2_fu_367_p2);
    sensitive << ( i_cast_fu_325_p1 );

    SC_METHOD(thread_tmp_4_cast_fu_659_p1);
    sensitive << ( tmp_4_reg_713 );

    SC_METHOD(thread_tmp_4_fu_393_p2);
    sensitive << ( tmp_3_reg_688 );
    sensitive << ( tmp_9_cast_fu_389_p1 );

    SC_METHOD(thread_tmp_5_1_cast_fu_363_p1);
    sensitive << ( i_1_fu_335_p2 );

    SC_METHOD(thread_tmp_5_fu_402_p3);
    sensitive << ( tmp_fu_398_p1 );
    sensitive << ( i_reg_280 );

    SC_METHOD(thread_tmp_6_fu_410_p1);
    sensitive << ( tmp_5_fu_402_p3 );

    SC_METHOD(thread_tmp_7_fu_485_p3);
    sensitive << ( i_1_reg_681 );
    sensitive << ( tmp_reg_718 );

    SC_METHOD(thread_tmp_8_0_2_fu_452_p2);
    sensitive << ( j_cast_fu_373_p1 );

    SC_METHOD(thread_tmp_8_fu_491_p1);
    sensitive << ( tmp_7_fu_485_p3 );

    SC_METHOD(thread_tmp_9_cast_fu_389_p1);
    sensitive << ( j_reg_292 );

    SC_METHOD(thread_tmp_9_fu_535_p1);
    sensitive << ( tmp_s_fu_529_p3 );

    SC_METHOD(thread_tmp_cast_fu_341_p1);
    sensitive << ( i_reg_280 );

    SC_METHOD(thread_tmp_fu_398_p1);
    sensitive << ( j_reg_292 );

    SC_METHOD(thread_tmp_s_fu_529_p3);
    sensitive << ( tmp_4_2_reg_698 );
    sensitive << ( tmp_reg_718 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_329_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond2_fu_377_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "convolution2D_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_0_address0, "(port)input_0_address0");
    sc_trace(mVcdFile, input_0_ce0, "(port)input_0_ce0");
    sc_trace(mVcdFile, input_0_q0, "(port)input_0_q0");
    sc_trace(mVcdFile, input_0_address1, "(port)input_0_address1");
    sc_trace(mVcdFile, input_0_ce1, "(port)input_0_ce1");
    sc_trace(mVcdFile, input_0_q1, "(port)input_0_q1");
    sc_trace(mVcdFile, input_1_address0, "(port)input_1_address0");
    sc_trace(mVcdFile, input_1_ce0, "(port)input_1_ce0");
    sc_trace(mVcdFile, input_1_q0, "(port)input_1_q0");
    sc_trace(mVcdFile, input_1_address1, "(port)input_1_address1");
    sc_trace(mVcdFile, input_1_ce1, "(port)input_1_ce1");
    sc_trace(mVcdFile, input_1_q1, "(port)input_1_q1");
    sc_trace(mVcdFile, input_2_address0, "(port)input_2_address0");
    sc_trace(mVcdFile, input_2_ce0, "(port)input_2_ce0");
    sc_trace(mVcdFile, input_2_q0, "(port)input_2_q0");
    sc_trace(mVcdFile, input_2_address1, "(port)input_2_address1");
    sc_trace(mVcdFile, input_2_ce1, "(port)input_2_ce1");
    sc_trace(mVcdFile, input_2_q1, "(port)input_2_q1");
    sc_trace(mVcdFile, kernel_0_0, "(port)kernel_0_0");
    sc_trace(mVcdFile, kernel_0_1, "(port)kernel_0_1");
    sc_trace(mVcdFile, kernel_0_2, "(port)kernel_0_2");
    sc_trace(mVcdFile, kernel_1_0, "(port)kernel_1_0");
    sc_trace(mVcdFile, kernel_1_1, "(port)kernel_1_1");
    sc_trace(mVcdFile, kernel_1_2, "(port)kernel_1_2");
    sc_trace(mVcdFile, kernel_2_0, "(port)kernel_2_0");
    sc_trace(mVcdFile, kernel_2_1, "(port)kernel_2_1");
    sc_trace(mVcdFile, kernel_2_2, "(port)kernel_2_2");
    sc_trace(mVcdFile, output_r_address0, "(port)output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "(port)output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "(port)output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "(port)output_r_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, grp_fu_303_p3, "grp_fu_303_p3");
    sc_trace(mVcdFile, reg_317, "reg_317");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, grp_fu_310_p3, "grp_fu_310_p3");
    sc_trace(mVcdFile, reg_321, "reg_321");
    sc_trace(mVcdFile, i_cast_fu_325_p1, "i_cast_fu_325_p1");
    sc_trace(mVcdFile, i_cast_reg_673, "i_cast_reg_673");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_1_fu_335_p2, "i_1_fu_335_p2");
    sc_trace(mVcdFile, i_1_reg_681, "i_1_reg_681");
    sc_trace(mVcdFile, tmp_3_fu_357_p2, "tmp_3_fu_357_p2");
    sc_trace(mVcdFile, tmp_3_reg_688, "tmp_3_reg_688");
    sc_trace(mVcdFile, exitcond3_fu_329_p2, "exitcond3_fu_329_p2");
    sc_trace(mVcdFile, tmp_5_1_cast_fu_363_p1, "tmp_5_1_cast_fu_363_p1");
    sc_trace(mVcdFile, tmp_5_1_cast_reg_693, "tmp_5_1_cast_reg_693");
    sc_trace(mVcdFile, tmp_4_2_fu_367_p2, "tmp_4_2_fu_367_p2");
    sc_trace(mVcdFile, tmp_4_2_reg_698, "tmp_4_2_reg_698");
    sc_trace(mVcdFile, j_1_fu_383_p2, "j_1_fu_383_p2");
    sc_trace(mVcdFile, j_1_reg_708, "j_1_reg_708");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_4_fu_393_p2, "tmp_4_fu_393_p2");
    sc_trace(mVcdFile, tmp_4_reg_713, "tmp_4_reg_713");
    sc_trace(mVcdFile, exitcond2_fu_377_p2, "exitcond2_fu_377_p2");
    sc_trace(mVcdFile, tmp_fu_398_p1, "tmp_fu_398_p1");
    sc_trace(mVcdFile, tmp_reg_718, "tmp_reg_718");
    sc_trace(mVcdFile, tmp_13_reg_735, "tmp_13_reg_735");
    sc_trace(mVcdFile, newIndex_trunc1_fu_424_p2, "newIndex_trunc1_fu_424_p2");
    sc_trace(mVcdFile, newIndex_trunc1_reg_740, "newIndex_trunc1_reg_740");
    sc_trace(mVcdFile, tmp_20_reg_756, "tmp_20_reg_756");
    sc_trace(mVcdFile, cond2_fu_476_p2, "cond2_fu_476_p2");
    sc_trace(mVcdFile, cond2_reg_761, "cond2_reg_761");
    sc_trace(mVcdFile, newIndex_cast_fu_482_p1, "newIndex_cast_fu_482_p1");
    sc_trace(mVcdFile, newIndex_cast_reg_768, "newIndex_cast_reg_768");
    sc_trace(mVcdFile, input_1_load_reg_793, "input_1_load_reg_793");
    sc_trace(mVcdFile, tmp_1_fu_550_p2, "tmp_1_fu_550_p2");
    sc_trace(mVcdFile, tmp_1_reg_823, "tmp_1_reg_823");
    sc_trace(mVcdFile, tmp_1_0_1_fu_568_p2, "tmp_1_0_1_fu_568_p2");
    sc_trace(mVcdFile, tmp_1_0_1_reg_838, "tmp_1_0_1_reg_838");
    sc_trace(mVcdFile, input_load_0_2_phi_fu_574_p3, "input_load_0_2_phi_fu_574_p3");
    sc_trace(mVcdFile, input_load_0_2_phi_reg_843, "input_load_0_2_phi_reg_843");
    sc_trace(mVcdFile, input_load_1_2_phi_fu_580_p3, "input_load_1_2_phi_fu_580_p3");
    sc_trace(mVcdFile, input_load_1_2_phi_reg_848, "input_load_1_2_phi_reg_848");
    sc_trace(mVcdFile, tmp_1_0_2_fu_587_p2, "tmp_1_0_2_fu_587_p2");
    sc_trace(mVcdFile, tmp_1_0_2_reg_853, "tmp_1_0_2_reg_853");
    sc_trace(mVcdFile, tmp_1_1_fu_592_p2, "tmp_1_1_fu_592_p2");
    sc_trace(mVcdFile, tmp_1_1_reg_858, "tmp_1_1_reg_858");
    sc_trace(mVcdFile, input_load_2_1_phi_reg_863, "input_load_2_1_phi_reg_863");
    sc_trace(mVcdFile, input_load_2_2_phi_fu_598_p3, "input_load_2_2_phi_fu_598_p3");
    sc_trace(mVcdFile, input_load_2_2_phi_reg_868, "input_load_2_2_phi_reg_868");
    sc_trace(mVcdFile, tmp2_fu_605_p2, "tmp2_fu_605_p2");
    sc_trace(mVcdFile, tmp2_reg_873, "tmp2_reg_873");
    sc_trace(mVcdFile, tmp_1_1_1_fu_609_p2, "tmp_1_1_1_fu_609_p2");
    sc_trace(mVcdFile, tmp_1_1_1_reg_878, "tmp_1_1_1_reg_878");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, tmp_1_1_2_fu_615_p2, "tmp_1_1_2_fu_615_p2");
    sc_trace(mVcdFile, tmp_1_1_2_reg_883, "tmp_1_1_2_reg_883");
    sc_trace(mVcdFile, tmp_1_2_fu_620_p2, "tmp_1_2_fu_620_p2");
    sc_trace(mVcdFile, tmp_1_2_reg_888, "tmp_1_2_reg_888");
    sc_trace(mVcdFile, tmp_1_2_1_fu_626_p2, "tmp_1_2_1_fu_626_p2");
    sc_trace(mVcdFile, tmp_1_2_1_reg_893, "tmp_1_2_1_reg_893");
    sc_trace(mVcdFile, tmp_1_2_2_fu_631_p2, "tmp_1_2_2_fu_631_p2");
    sc_trace(mVcdFile, tmp_1_2_2_reg_898, "tmp_1_2_2_reg_898");
    sc_trace(mVcdFile, tmp3_fu_636_p2, "tmp3_fu_636_p2");
    sc_trace(mVcdFile, tmp3_reg_903, "tmp3_reg_903");
    sc_trace(mVcdFile, tmp4_fu_653_p2, "tmp4_fu_653_p2");
    sc_trace(mVcdFile, tmp4_reg_908, "tmp4_reg_908");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, i_reg_280, "i_reg_280");
    sc_trace(mVcdFile, j_reg_292, "j_reg_292");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, tmp_6_fu_410_p1, "tmp_6_fu_410_p1");
    sc_trace(mVcdFile, tmp_15_fu_438_p1, "tmp_15_fu_438_p1");
    sc_trace(mVcdFile, tmp_8_fu_491_p1, "tmp_8_fu_491_p1");
    sc_trace(mVcdFile, tmp_12_cast_fu_502_p1, "tmp_12_cast_fu_502_p1");
    sc_trace(mVcdFile, tmp_13_cast_fu_512_p1, "tmp_13_cast_fu_512_p1");
    sc_trace(mVcdFile, tmp_17_fu_523_p1, "tmp_17_fu_523_p1");
    sc_trace(mVcdFile, tmp_9_fu_535_p1, "tmp_9_fu_535_p1");
    sc_trace(mVcdFile, tmp_14_cast_fu_545_p1, "tmp_14_cast_fu_545_p1");
    sc_trace(mVcdFile, tmp_19_fu_562_p1, "tmp_19_fu_562_p1");
    sc_trace(mVcdFile, tmp_4_cast_fu_659_p1, "tmp_4_cast_fu_659_p1");
    sc_trace(mVcdFile, tmp_2_fu_345_p3, "tmp_2_fu_345_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_353_p1, "p_shl_cast_fu_353_p1");
    sc_trace(mVcdFile, tmp_cast_fu_341_p1, "tmp_cast_fu_341_p1");
    sc_trace(mVcdFile, tmp_9_cast_fu_389_p1, "tmp_9_cast_fu_389_p1");
    sc_trace(mVcdFile, tmp_5_fu_402_p3, "tmp_5_fu_402_p3");
    sc_trace(mVcdFile, tmp_14_fu_430_p3, "tmp_14_fu_430_p3");
    sc_trace(mVcdFile, j_cast_fu_373_p1, "j_cast_fu_373_p1");
    sc_trace(mVcdFile, tmp_8_0_2_fu_452_p2, "tmp_8_0_2_fu_452_p2");
    sc_trace(mVcdFile, tmp_21_fu_458_p4, "tmp_21_fu_458_p4");
    sc_trace(mVcdFile, arrayNo63_mask_fu_468_p3, "arrayNo63_mask_fu_468_p3");
    sc_trace(mVcdFile, tmp_7_fu_485_p3, "tmp_7_fu_485_p3");
    sc_trace(mVcdFile, tmp_10_fu_497_p2, "tmp_10_fu_497_p2");
    sc_trace(mVcdFile, tmp_11_fu_507_p2, "tmp_11_fu_507_p2");
    sc_trace(mVcdFile, tmp_16_fu_517_p3, "tmp_16_fu_517_p3");
    sc_trace(mVcdFile, tmp_s_fu_529_p3, "tmp_s_fu_529_p3");
    sc_trace(mVcdFile, tmp_12_fu_541_p2, "tmp_12_fu_541_p2");
    sc_trace(mVcdFile, tmp_1_fu_550_p0, "tmp_1_fu_550_p0");
    sc_trace(mVcdFile, tmp_18_fu_556_p3, "tmp_18_fu_556_p3");
    sc_trace(mVcdFile, tmp_1_0_1_fu_568_p0, "tmp_1_0_1_fu_568_p0");
    sc_trace(mVcdFile, tmp_1_0_2_fu_587_p0, "tmp_1_0_2_fu_587_p0");
    sc_trace(mVcdFile, tmp_1_1_fu_592_p0, "tmp_1_1_fu_592_p0");
    sc_trace(mVcdFile, tmp_1_1_1_fu_609_p0, "tmp_1_1_1_fu_609_p0");
    sc_trace(mVcdFile, tmp_1_1_2_fu_615_p0, "tmp_1_1_2_fu_615_p0");
    sc_trace(mVcdFile, tmp_1_2_fu_620_p0, "tmp_1_2_fu_620_p0");
    sc_trace(mVcdFile, tmp_1_2_1_fu_626_p0, "tmp_1_2_1_fu_626_p0");
    sc_trace(mVcdFile, tmp_1_2_2_fu_631_p0, "tmp_1_2_2_fu_631_p0");
    sc_trace(mVcdFile, tmp7_fu_644_p2, "tmp7_fu_644_p2");
    sc_trace(mVcdFile, tmp6_fu_648_p2, "tmp6_fu_648_p2");
    sc_trace(mVcdFile, tmp5_fu_640_p2, "tmp5_fu_640_p2");
    sc_trace(mVcdFile, tmp1_fu_663_p2, "tmp1_fu_663_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("convolution2D.hdltvin.dat");
    mHdltvoutHandle.open("convolution2D.hdltvout.dat");
}

convolution2D::~convolution2D() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void convolution2D::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_377_p2.read(), ap_const_lv1_1))) {
        i_reg_280 = i_1_reg_681.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_280 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_329_p2.read(), ap_const_lv1_0))) {
        j_reg_292 = ap_const_lv2_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        j_reg_292 = j_1_reg_708.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_377_p2.read()))) {
        cond2_reg_761 = cond2_fu_476_p2.read();
        newIndex_trunc1_reg_740 = newIndex_trunc1_fu_424_p2.read();
        tmp_13_reg_735 = j_reg_292.read().range(1, 1);
        tmp_20_reg_756 = j_1_fu_383_p2.read().range(1, 1);
        tmp_4_reg_713 = tmp_4_fu_393_p2.read();
        tmp_reg_718 = tmp_fu_398_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_1_reg_681 = i_1_fu_335_p2.read();
        i_cast_reg_673 = i_cast_fu_325_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        input_1_load_reg_793 = input_1_q0.read();
        newIndex_cast_reg_768 = newIndex_cast_fu_482_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        input_load_0_2_phi_reg_843 = input_load_0_2_phi_fu_574_p3.read();
        input_load_1_2_phi_reg_848 = input_load_1_2_phi_fu_580_p3.read();
        tmp_1_0_1_reg_838 = tmp_1_0_1_fu_568_p2.read();
        tmp_1_reg_823 = tmp_1_fu_550_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        input_load_2_1_phi_reg_863 = grp_fu_310_p3.read();
        input_load_2_2_phi_reg_868 = input_load_2_2_phi_fu_598_p3.read();
        tmp2_reg_873 = tmp2_fu_605_p2.read();
        tmp_1_0_2_reg_853 = tmp_1_0_2_fu_587_p2.read();
        tmp_1_1_reg_858 = tmp_1_1_fu_592_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_1_reg_708 = j_1_fu_383_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        reg_317 = grp_fu_303_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        reg_321 = grp_fu_310_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        tmp3_reg_903 = tmp3_fu_636_p2.read();
        tmp_1_1_1_reg_878 = tmp_1_1_1_fu_609_p2.read();
        tmp_1_1_2_reg_883 = tmp_1_1_2_fu_615_p2.read();
        tmp_1_2_1_reg_893 = tmp_1_2_1_fu_626_p2.read();
        tmp_1_2_2_reg_898 = tmp_1_2_2_fu_631_p2.read();
        tmp_1_2_reg_888 = tmp_1_2_fu_620_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        tmp4_reg_908 = tmp4_fu_653_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond3_fu_329_p2.read(), ap_const_lv1_0))) {
        tmp_3_reg_688 = tmp_3_fu_357_p2.read();
        tmp_4_2_reg_698 = tmp_4_2_fu_367_p2.read();
        tmp_5_1_cast_reg_693 = tmp_5_1_cast_fu_363_p1.read();
    }
}

void convolution2D::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void convolution2D::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void convolution2D::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void convolution2D::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void convolution2D::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void convolution2D::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void convolution2D::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void convolution2D::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void convolution2D::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void convolution2D::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_329_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void convolution2D::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void convolution2D::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_329_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void convolution2D::thread_arrayNo63_mask_fu_468_p3() {
    arrayNo63_mask_fu_468_p3 = esl_concat<2,1>(tmp_21_fu_458_p4.read(), ap_const_lv1_0);
}

void convolution2D::thread_cond2_fu_476_p2() {
    cond2_fu_476_p2 = (!arrayNo63_mask_fu_468_p3.read().is_01() || !ap_const_lv3_2.is_01())? sc_lv<1>(): sc_lv<1>(arrayNo63_mask_fu_468_p3.read() == ap_const_lv3_2);
}

void convolution2D::thread_exitcond2_fu_377_p2() {
    exitcond2_fu_377_p2 = (!j_reg_292.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_292.read() == ap_const_lv2_3);
}

void convolution2D::thread_exitcond3_fu_329_p2() {
    exitcond3_fu_329_p2 = (!i_reg_280.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_280.read() == ap_const_lv2_3);
}

void convolution2D::thread_grp_fu_303_p3() {
    grp_fu_303_p3 = (!tmp_13_reg_735.read()[0].is_01())? sc_lv<32>(): ((tmp_13_reg_735.read()[0].to_bool())? input_1_q0.read(): input_0_q0.read());
}

void convolution2D::thread_grp_fu_310_p3() {
    grp_fu_310_p3 = (!tmp_20_reg_756.read()[0].is_01())? sc_lv<32>(): ((tmp_20_reg_756.read()[0].to_bool())? input_1_q1.read(): input_0_q1.read());
}

void convolution2D::thread_i_1_fu_335_p2() {
    i_1_fu_335_p2 = (!i_reg_280.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i_reg_280.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void convolution2D::thread_i_cast_fu_325_p1() {
    i_cast_fu_325_p1 = esl_zext<3,2>(i_reg_280.read());
}

void convolution2D::thread_input_0_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        input_0_address0 =  (sc_lv<4>) (tmp_9_fu_535_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        input_0_address0 =  (sc_lv<4>) (tmp_8_fu_491_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        input_0_address0 =  (sc_lv<4>) (tmp_6_fu_410_p1.read());
    } else {
        input_0_address0 = "XXXX";
    }
}

void convolution2D::thread_input_0_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        input_0_address1 =  (sc_lv<4>) (tmp_19_fu_562_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        input_0_address1 =  (sc_lv<4>) (tmp_17_fu_523_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        input_0_address1 =  (sc_lv<4>) (tmp_15_fu_438_p1.read());
    } else {
        input_0_address1 = "XXXX";
    }
}

void convolution2D::thread_input_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        input_0_ce0 = ap_const_logic_1;
    } else {
        input_0_ce0 = ap_const_logic_0;
    }
}

void convolution2D::thread_input_0_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        input_0_ce1 = ap_const_logic_1;
    } else {
        input_0_ce1 = ap_const_logic_0;
    }
}

void convolution2D::thread_input_1_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        input_1_address0 =  (sc_lv<4>) (tmp_9_fu_535_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        input_1_address0 =  (sc_lv<4>) (tmp_8_fu_491_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        input_1_address0 =  (sc_lv<4>) (tmp_6_fu_410_p1.read());
    } else {
        input_1_address0 = "XXXX";
    }
}

void convolution2D::thread_input_1_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        input_1_address1 =  (sc_lv<4>) (tmp_19_fu_562_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        input_1_address1 =  (sc_lv<4>) (tmp_17_fu_523_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        input_1_address1 =  (sc_lv<4>) (tmp_15_fu_438_p1.read());
    } else {
        input_1_address1 = "XXXX";
    }
}

void convolution2D::thread_input_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        input_1_ce0 = ap_const_logic_1;
    } else {
        input_1_ce0 = ap_const_logic_0;
    }
}

void convolution2D::thread_input_1_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        input_1_ce1 = ap_const_logic_1;
    } else {
        input_1_ce1 = ap_const_logic_0;
    }
}

void convolution2D::thread_input_2_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        input_2_address0 =  (sc_lv<3>) (tmp_14_cast_fu_545_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        input_2_address0 =  (sc_lv<3>) (tmp_12_cast_fu_502_p1.read());
    } else {
        input_2_address0 =  (sc_lv<3>) ("XXX");
    }
}

void convolution2D::thread_input_2_address1() {
    input_2_address1 =  (sc_lv<3>) (tmp_13_cast_fu_512_p1.read());
}

void convolution2D::thread_input_2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        input_2_ce0 = ap_const_logic_1;
    } else {
        input_2_ce0 = ap_const_logic_0;
    }
}

void convolution2D::thread_input_2_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        input_2_ce1 = ap_const_logic_1;
    } else {
        input_2_ce1 = ap_const_logic_0;
    }
}

void convolution2D::thread_input_load_0_2_phi_fu_574_p3() {
    input_load_0_2_phi_fu_574_p3 = (!cond2_reg_761.read()[0].is_01())? sc_lv<32>(): ((cond2_reg_761.read()[0].to_bool())? input_1_load_reg_793.read(): input_2_q0.read());
}

void convolution2D::thread_input_load_1_2_phi_fu_580_p3() {
    input_load_1_2_phi_fu_580_p3 = (!cond2_reg_761.read()[0].is_01())? sc_lv<32>(): ((cond2_reg_761.read()[0].to_bool())? input_1_q0.read(): input_2_q1.read());
}

void convolution2D::thread_input_load_2_2_phi_fu_598_p3() {
    input_load_2_2_phi_fu_598_p3 = (!cond2_reg_761.read()[0].is_01())? sc_lv<32>(): ((cond2_reg_761.read()[0].to_bool())? input_1_q0.read(): input_2_q0.read());
}

void convolution2D::thread_j_1_fu_383_p2() {
    j_1_fu_383_p2 = (!j_reg_292.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(j_reg_292.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void convolution2D::thread_j_cast_fu_373_p1() {
    j_cast_fu_373_p1 = esl_zext<3,2>(j_reg_292.read());
}

void convolution2D::thread_newIndex_cast_fu_482_p1() {
    newIndex_cast_fu_482_p1 = esl_zext<3,1>(tmp_reg_718.read());
}

void convolution2D::thread_newIndex_trunc1_fu_424_p2() {
    newIndex_trunc1_fu_424_p2 = (tmp_fu_398_p1.read() ^ ap_const_lv1_1);
}

void convolution2D::thread_output_r_address0() {
    output_r_address0 =  (sc_lv<4>) (tmp_4_cast_fu_659_p1.read());
}

void convolution2D::thread_output_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void convolution2D::thread_output_r_d0() {
    output_r_d0 = (!tmp4_reg_908.read().is_01() || !tmp1_fu_663_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp4_reg_908.read()) + sc_biguint<32>(tmp1_fu_663_p2.read()));
}

void convolution2D::thread_output_r_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void convolution2D::thread_p_shl_cast_fu_353_p1() {
    p_shl_cast_fu_353_p1 = esl_zext<5,4>(tmp_2_fu_345_p3.read());
}

void convolution2D::thread_tmp1_fu_663_p2() {
    tmp1_fu_663_p2 = (!tmp3_reg_903.read().is_01() || !tmp2_reg_873.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp3_reg_903.read()) + sc_biguint<32>(tmp2_reg_873.read()));
}

void convolution2D::thread_tmp2_fu_605_p2() {
    tmp2_fu_605_p2 = (!tmp_1_0_1_reg_838.read().is_01() || !tmp_1_reg_823.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_1_0_1_reg_838.read()) + sc_biguint<32>(tmp_1_reg_823.read()));
}

void convolution2D::thread_tmp3_fu_636_p2() {
    tmp3_fu_636_p2 = (!tmp_1_0_2_reg_853.read().is_01() || !tmp_1_1_reg_858.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_1_0_2_reg_853.read()) + sc_biguint<32>(tmp_1_1_reg_858.read()));
}

void convolution2D::thread_tmp4_fu_653_p2() {
    tmp4_fu_653_p2 = (!tmp6_fu_648_p2.read().is_01() || !tmp5_fu_640_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp6_fu_648_p2.read()) + sc_biguint<32>(tmp5_fu_640_p2.read()));
}

void convolution2D::thread_tmp5_fu_640_p2() {
    tmp5_fu_640_p2 = (!tmp_1_1_1_reg_878.read().is_01() || !tmp_1_1_2_reg_883.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_1_1_1_reg_878.read()) + sc_biguint<32>(tmp_1_1_2_reg_883.read()));
}

void convolution2D::thread_tmp6_fu_648_p2() {
    tmp6_fu_648_p2 = (!tmp7_fu_644_p2.read().is_01() || !tmp_1_2_reg_888.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp7_fu_644_p2.read()) + sc_biguint<32>(tmp_1_2_reg_888.read()));
}

void convolution2D::thread_tmp7_fu_644_p2() {
    tmp7_fu_644_p2 = (!tmp_1_2_1_reg_893.read().is_01() || !tmp_1_2_2_reg_898.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_1_2_1_reg_893.read()) + sc_biguint<32>(tmp_1_2_2_reg_898.read()));
}

void convolution2D::thread_tmp_10_fu_497_p2() {
    tmp_10_fu_497_p2 = (!newIndex_cast_fu_482_p1.read().is_01() || !i_cast_reg_673.read().is_01())? sc_lv<3>(): (sc_biguint<3>(newIndex_cast_fu_482_p1.read()) + sc_biguint<3>(i_cast_reg_673.read()));
}

void convolution2D::thread_tmp_11_fu_507_p2() {
    tmp_11_fu_507_p2 = (!newIndex_cast_fu_482_p1.read().is_01() || !tmp_5_1_cast_reg_693.read().is_01())? sc_lv<3>(): (sc_biguint<3>(newIndex_cast_fu_482_p1.read()) + sc_biguint<3>(tmp_5_1_cast_reg_693.read()));
}

void convolution2D::thread_tmp_12_cast_fu_502_p1() {
    tmp_12_cast_fu_502_p1 = esl_zext<64,3>(tmp_10_fu_497_p2.read());
}

void convolution2D::thread_tmp_12_fu_541_p2() {
    tmp_12_fu_541_p2 = (!newIndex_cast_reg_768.read().is_01() || !tmp_4_2_reg_698.read().is_01())? sc_lv<3>(): (sc_biguint<3>(newIndex_cast_reg_768.read()) + sc_biguint<3>(tmp_4_2_reg_698.read()));
}

void convolution2D::thread_tmp_13_cast_fu_512_p1() {
    tmp_13_cast_fu_512_p1 = esl_zext<64,3>(tmp_11_fu_507_p2.read());
}

void convolution2D::thread_tmp_14_cast_fu_545_p1() {
    tmp_14_cast_fu_545_p1 = esl_zext<64,3>(tmp_12_fu_541_p2.read());
}

void convolution2D::thread_tmp_14_fu_430_p3() {
    tmp_14_fu_430_p3 = esl_concat<2,1>(i_reg_280.read(), newIndex_trunc1_fu_424_p2.read());
}

void convolution2D::thread_tmp_15_fu_438_p1() {
    tmp_15_fu_438_p1 = esl_zext<64,3>(tmp_14_fu_430_p3.read());
}

void convolution2D::thread_tmp_16_fu_517_p3() {
    tmp_16_fu_517_p3 = esl_concat<2,1>(i_1_reg_681.read(), newIndex_trunc1_reg_740.read());
}

void convolution2D::thread_tmp_17_fu_523_p1() {
    tmp_17_fu_523_p1 = esl_zext<64,3>(tmp_16_fu_517_p3.read());
}

void convolution2D::thread_tmp_18_fu_556_p3() {
    tmp_18_fu_556_p3 = esl_concat<3,1>(tmp_4_2_reg_698.read(), newIndex_trunc1_reg_740.read());
}

void convolution2D::thread_tmp_19_fu_562_p1() {
    tmp_19_fu_562_p1 = esl_zext<64,4>(tmp_18_fu_556_p3.read());
}

void convolution2D::thread_tmp_1_0_1_fu_568_p0() {
    tmp_1_0_1_fu_568_p0 = kernel_0_1.read();
}

void convolution2D::thread_tmp_1_0_1_fu_568_p2() {
    tmp_1_0_1_fu_568_p2 = (!tmp_1_0_1_fu_568_p0.read().is_01() || !reg_321.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_1_0_1_fu_568_p0.read()) * sc_bigint<32>(reg_321.read());
}

void convolution2D::thread_tmp_1_0_2_fu_587_p0() {
    tmp_1_0_2_fu_587_p0 = kernel_0_2.read();
}

void convolution2D::thread_tmp_1_0_2_fu_587_p2() {
    tmp_1_0_2_fu_587_p2 = (!tmp_1_0_2_fu_587_p0.read().is_01() || !input_load_0_2_phi_reg_843.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_1_0_2_fu_587_p0.read()) * sc_bigint<32>(input_load_0_2_phi_reg_843.read());
}

void convolution2D::thread_tmp_1_1_1_fu_609_p0() {
    tmp_1_1_1_fu_609_p0 = kernel_1_1.read();
}

void convolution2D::thread_tmp_1_1_1_fu_609_p2() {
    tmp_1_1_1_fu_609_p2 = (!tmp_1_1_1_fu_609_p0.read().is_01() || !reg_321.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_1_1_1_fu_609_p0.read()) * sc_bigint<32>(reg_321.read());
}

void convolution2D::thread_tmp_1_1_2_fu_615_p0() {
    tmp_1_1_2_fu_615_p0 = kernel_1_2.read();
}

void convolution2D::thread_tmp_1_1_2_fu_615_p2() {
    tmp_1_1_2_fu_615_p2 = (!tmp_1_1_2_fu_615_p0.read().is_01() || !input_load_1_2_phi_reg_848.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_1_1_2_fu_615_p0.read()) * sc_bigint<32>(input_load_1_2_phi_reg_848.read());
}

void convolution2D::thread_tmp_1_1_fu_592_p0() {
    tmp_1_1_fu_592_p0 = kernel_1_0.read();
}

void convolution2D::thread_tmp_1_1_fu_592_p2() {
    tmp_1_1_fu_592_p2 = (!tmp_1_1_fu_592_p0.read().is_01() || !reg_317.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_1_1_fu_592_p0.read()) * sc_bigint<32>(reg_317.read());
}

void convolution2D::thread_tmp_1_2_1_fu_626_p0() {
    tmp_1_2_1_fu_626_p0 = kernel_2_1.read();
}

void convolution2D::thread_tmp_1_2_1_fu_626_p2() {
    tmp_1_2_1_fu_626_p2 = (!tmp_1_2_1_fu_626_p0.read().is_01() || !input_load_2_1_phi_reg_863.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_1_2_1_fu_626_p0.read()) * sc_bigint<32>(input_load_2_1_phi_reg_863.read());
}

void convolution2D::thread_tmp_1_2_2_fu_631_p0() {
    tmp_1_2_2_fu_631_p0 = kernel_2_2.read();
}

void convolution2D::thread_tmp_1_2_2_fu_631_p2() {
    tmp_1_2_2_fu_631_p2 = (!tmp_1_2_2_fu_631_p0.read().is_01() || !input_load_2_2_phi_reg_868.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_1_2_2_fu_631_p0.read()) * sc_bigint<32>(input_load_2_2_phi_reg_868.read());
}

void convolution2D::thread_tmp_1_2_fu_620_p0() {
    tmp_1_2_fu_620_p0 = kernel_2_0.read();
}

void convolution2D::thread_tmp_1_2_fu_620_p2() {
    tmp_1_2_fu_620_p2 = (!tmp_1_2_fu_620_p0.read().is_01() || !reg_317.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_1_2_fu_620_p0.read()) * sc_bigint<32>(reg_317.read());
}

void convolution2D::thread_tmp_1_fu_550_p0() {
    tmp_1_fu_550_p0 = kernel_0_0.read();
}

void convolution2D::thread_tmp_1_fu_550_p2() {
    tmp_1_fu_550_p2 = (!tmp_1_fu_550_p0.read().is_01() || !reg_317.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_1_fu_550_p0.read()) * sc_bigint<32>(reg_317.read());
}

void convolution2D::thread_tmp_21_fu_458_p4() {
    tmp_21_fu_458_p4 = tmp_8_0_2_fu_452_p2.read().range(2, 1);
}

void convolution2D::thread_tmp_2_fu_345_p3() {
    tmp_2_fu_345_p3 = esl_concat<2,2>(i_reg_280.read(), ap_const_lv2_0);
}

void convolution2D::thread_tmp_3_fu_357_p2() {
    tmp_3_fu_357_p2 = (!p_shl_cast_fu_353_p1.read().is_01() || !tmp_cast_fu_341_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(p_shl_cast_fu_353_p1.read()) - sc_biguint<5>(tmp_cast_fu_341_p1.read()));
}

void convolution2D::thread_tmp_4_2_fu_367_p2() {
    tmp_4_2_fu_367_p2 = (!i_cast_fu_325_p1.read().is_01() || !ap_const_lv3_2.is_01())? sc_lv<3>(): (sc_biguint<3>(i_cast_fu_325_p1.read()) + sc_biguint<3>(ap_const_lv3_2));
}

void convolution2D::thread_tmp_4_cast_fu_659_p1() {
    tmp_4_cast_fu_659_p1 = esl_sext<64,5>(tmp_4_reg_713.read());
}

void convolution2D::thread_tmp_4_fu_393_p2() {
    tmp_4_fu_393_p2 = (!tmp_9_cast_fu_389_p1.read().is_01() || !tmp_3_reg_688.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_9_cast_fu_389_p1.read()) + sc_biguint<5>(tmp_3_reg_688.read()));
}

void convolution2D::thread_tmp_5_1_cast_fu_363_p1() {
    tmp_5_1_cast_fu_363_p1 = esl_zext<3,2>(i_1_fu_335_p2.read());
}

void convolution2D::thread_tmp_5_fu_402_p3() {
    tmp_5_fu_402_p3 = esl_concat<2,1>(i_reg_280.read(), tmp_fu_398_p1.read());
}

void convolution2D::thread_tmp_6_fu_410_p1() {
    tmp_6_fu_410_p1 = esl_zext<64,3>(tmp_5_fu_402_p3.read());
}

void convolution2D::thread_tmp_7_fu_485_p3() {
    tmp_7_fu_485_p3 = esl_concat<2,1>(i_1_reg_681.read(), tmp_reg_718.read());
}

void convolution2D::thread_tmp_8_0_2_fu_452_p2() {
    tmp_8_0_2_fu_452_p2 = (!ap_const_lv3_2.is_01() || !j_cast_fu_373_p1.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_2) + sc_biguint<3>(j_cast_fu_373_p1.read()));
}

void convolution2D::thread_tmp_8_fu_491_p1() {
    tmp_8_fu_491_p1 = esl_zext<64,3>(tmp_7_fu_485_p3.read());
}

void convolution2D::thread_tmp_9_cast_fu_389_p1() {
    tmp_9_cast_fu_389_p1 = esl_zext<5,2>(j_reg_292.read());
}

void convolution2D::thread_tmp_9_fu_535_p1() {
    tmp_9_fu_535_p1 = esl_zext<64,4>(tmp_s_fu_529_p3.read());
}

void convolution2D::thread_tmp_cast_fu_341_p1() {
    tmp_cast_fu_341_p1 = esl_zext<5,2>(i_reg_280.read());
}

void convolution2D::thread_tmp_fu_398_p1() {
    tmp_fu_398_p1 = j_reg_292.read().range(1-1, 0);
}

void convolution2D::thread_tmp_s_fu_529_p3() {
    tmp_s_fu_529_p3 = esl_concat<3,1>(tmp_4_2_reg_698.read(), tmp_reg_718.read());
}

void convolution2D::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond3_fu_329_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond2_fu_377_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<9>) ("XXXXXXXXX");
            break;
    }
}

void convolution2D::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_0_address0\" :  \"" << input_0_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_0_ce0\" :  \"" << input_0_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_0_q0\" :  \"" << input_0_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_0_address1\" :  \"" << input_0_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_0_ce1\" :  \"" << input_0_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_0_q1\" :  \"" << input_0_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_1_address0\" :  \"" << input_1_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_1_ce0\" :  \"" << input_1_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_1_q0\" :  \"" << input_1_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_1_address1\" :  \"" << input_1_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_1_ce1\" :  \"" << input_1_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_1_q1\" :  \"" << input_1_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_2_address0\" :  \"" << input_2_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_2_ce0\" :  \"" << input_2_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_2_q0\" :  \"" << input_2_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_2_address1\" :  \"" << input_2_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_2_ce1\" :  \"" << input_2_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_2_q1\" :  \"" << input_2_q1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_0_0\" :  \"" << kernel_0_0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_0_1\" :  \"" << kernel_0_1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_0_2\" :  \"" << kernel_0_2.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_1_0\" :  \"" << kernel_1_0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_1_1\" :  \"" << kernel_1_1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_1_2\" :  \"" << kernel_1_2.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_2_0\" :  \"" << kernel_2_0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_2_1\" :  \"" << kernel_2_1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_2_2\" :  \"" << kernel_2_2.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_address0\" :  \"" << output_r_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_ce0\" :  \"" << output_r_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_we0\" :  \"" << output_r_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_d0\" :  \"" << output_r_d0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

