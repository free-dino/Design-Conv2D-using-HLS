// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "convolution2D.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic convolution2D::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic convolution2D::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> convolution2D::ap_ST_fsm_state1 = "1";
const sc_lv<5> convolution2D::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<5> convolution2D::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<5> convolution2D::ap_ST_fsm_pp0_stage2 = "1000";
const sc_lv<5> convolution2D::ap_ST_fsm_state10 = "10000";
const sc_lv<32> convolution2D::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool convolution2D::ap_const_boolean_1 = true;
const sc_lv<32> convolution2D::ap_const_lv32_1 = "1";
const bool convolution2D::ap_const_boolean_0 = false;
const sc_lv<32> convolution2D::ap_const_lv32_2 = "10";
const sc_lv<1> convolution2D::ap_const_lv1_0 = "0";
const sc_lv<32> convolution2D::ap_const_lv32_3 = "11";
const sc_lv<1> convolution2D::ap_const_lv1_1 = "1";
const sc_lv<2> convolution2D::ap_const_lv2_0 = "00";
const sc_lv<2> convolution2D::ap_const_lv2_3 = "11";
const sc_lv<2> convolution2D::ap_const_lv2_1 = "1";
const sc_lv<3> convolution2D::ap_const_lv3_1 = "1";
const sc_lv<61> convolution2D::ap_const_lv61_0 = "0000000000000000000000000000000000000000000000000000000000000";
const sc_lv<3> convolution2D::ap_const_lv3_2 = "10";
const sc_lv<4> convolution2D::ap_const_lv4_1 = "1";
const sc_lv<60> convolution2D::ap_const_lv60_0 = "000000000000000000000000000000000000000000000000000000000000";
const sc_lv<5> convolution2D::ap_const_lv5_1 = "1";
const sc_lv<5> convolution2D::ap_const_lv5_2 = "10";
const sc_lv<32> convolution2D::ap_const_lv32_4 = "100";

convolution2D::convolution2D(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_11001);

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state6_pp0_stage1_iter1);

    SC_METHOD(thread_ap_block_state7_pp0_stage2_iter1);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state9_pp0_stage1_iter2);

    SC_METHOD(thread_ap_condition_103);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_ap_condition_125);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond3_fu_369_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_phi_mux_i_phi_fu_324_p4);
    sensitive << ( i_reg_320 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond3_reg_769 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( i_1_reg_773 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_exitcond3_fu_369_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_i_phi_fu_324_p4 );

    SC_METHOD(thread_grp_fu_357_p1);
    sensitive << ( kernel_1_2 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( kernel_1_2_read_reg_911 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_grp_fu_357_p2);
    sensitive << ( reg_344 );
    sensitive << ( grp_fu_357_p1 );

    SC_METHOD(thread_grp_fu_363_p1);
    sensitive << ( kernel_1_1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( kernel_1_1_read_reg_905 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_grp_fu_363_p2);
    sensitive << ( reg_344 );
    sensitive << ( grp_fu_363_p1 );

    SC_METHOD(thread_i_1_fu_375_p2);
    sensitive << ( ap_phi_mux_i_phi_fu_324_p4 );

    SC_METHOD(thread_i_cast_fu_433_p1);
    sensitive << ( i_reg_320 );

    SC_METHOD(thread_input_0_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( tmp_11_reg_808 );
    sensitive << ( tmp_15_reg_848 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_3_fu_394_p1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_input_0_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( tmp_5_fu_406_p3 );
    sensitive << ( tmp_13_fu_442_p3 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_17_fu_498_p3 );

    SC_METHOD(thread_input_0_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_input_0_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_input_1_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( tmp_13_reg_833 );
    sensitive << ( tmp_15_fu_470_p1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_3_fu_394_p1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_input_1_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( tmp_5_reg_783 );
    sensitive << ( tmp_11_fu_428_p1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_17_fu_498_p3 );

    SC_METHOD(thread_input_1_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_input_1_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_input_2_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_fu_381_p1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( tmp_5_0_2_fu_457_p1 );

    SC_METHOD(thread_input_2_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_5_0_1_fu_415_p1 );

    SC_METHOD(thread_input_2_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_input_2_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( tmp_7_cast_fu_714_p1 );
    sensitive << ( tmp_9_cast_fu_764_p1 );

    SC_METHOD(thread_output_r_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_8_cast_fu_725_p1 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_output_r_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( sum_2_2_2_2_reg_1123 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( sum_2_0_2_2_fu_734_p2 );

    SC_METHOD(thread_output_r_d1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp11_reg_1108 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp8_fu_740_p2 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( exitcond3_reg_769_pp0_iter1_reg );
    sensitive << ( exitcond3_reg_769_pp0_iter2_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_output_r_we1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond3_reg_769_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_p_shl_cast_fu_704_p1);
    sensitive << ( tmp_6_fu_696_p3 );

    SC_METHOD(thread_sum_2_0_2_2_fu_734_p2);
    sensitive << ( tmp4_reg_1103 );
    sensitive << ( tmp1_fu_730_p2 );

    SC_METHOD(thread_sum_2_2_2_2_fu_754_p2);
    sensitive << ( tmp18_reg_1113 );
    sensitive << ( tmp15_fu_750_p2 );

    SC_METHOD(thread_tmp10_fu_608_p2);
    sensitive << ( tmp_1_1_0_2_reg_1003 );
    sensitive << ( tmp_1_1_1_reg_1008 );

    SC_METHOD(thread_tmp11_fu_667_p2);
    sensitive << ( tmp13_fu_662_p2 );
    sensitive << ( tmp12_fu_654_p2 );

    SC_METHOD(thread_tmp12_fu_654_p2);
    sensitive << ( tmp_1_1_1_1_reg_968 );
    sensitive << ( tmp_1_1_1_2_reg_1053 );

    SC_METHOD(thread_tmp13_fu_662_p2);
    sensitive << ( tmp_1_1_2_reg_1058 );
    sensitive << ( tmp14_fu_658_p2 );

    SC_METHOD(thread_tmp14_fu_658_p2);
    sensitive << ( tmp_1_1_2_1_reg_1013 );
    sensitive << ( tmp_1_1_2_2_reg_1063 );

    SC_METHOD(thread_tmp15_fu_750_p2);
    sensitive << ( tmp16_reg_1093 );
    sensitive << ( tmp17_reg_1098 );

    SC_METHOD(thread_tmp16_fu_627_p2);
    sensitive << ( tmp_1_2_reg_973 );
    sensitive << ( tmp_1_2_0_1_reg_1023 );

    SC_METHOD(thread_tmp17_fu_631_p2);
    sensitive << ( tmp_1_2_0_2_reg_978 );
    sensitive << ( tmp_1_2_1_reg_1028 );

    SC_METHOD(thread_tmp18_fu_686_p2);
    sensitive << ( tmp20_fu_681_p2 );
    sensitive << ( tmp19_fu_673_p2 );

    SC_METHOD(thread_tmp19_fu_673_p2);
    sensitive << ( tmp_1_2_1_2_reg_1033 );
    sensitive << ( tmp_1_2_1_1_reg_1073 );

    SC_METHOD(thread_tmp1_fu_730_p2);
    sensitive << ( tmp2_reg_998 );
    sensitive << ( tmp3_reg_1048 );

    SC_METHOD(thread_tmp20_fu_681_p2);
    sensitive << ( tmp_1_2_2_reg_1078 );
    sensitive << ( tmp21_fu_677_p2 );

    SC_METHOD(thread_tmp21_fu_677_p2);
    sensitive << ( tmp_1_2_2_1_reg_1083 );
    sensitive << ( tmp_1_2_2_2_reg_1088 );

    SC_METHOD(thread_tmp2_fu_547_p2);
    sensitive << ( tmp_s_reg_868 );
    sensitive << ( tmp_1_0_0_1_reg_878 );

    SC_METHOD(thread_tmp3_fu_594_p2);
    sensitive << ( tmp_1_0_0_2_reg_888 );
    sensitive << ( tmp_1_0_1_reg_983 );

    SC_METHOD(thread_tmp4_fu_648_p2);
    sensitive << ( tmp6_fu_643_p2 );
    sensitive << ( tmp5_fu_635_p2 );

    SC_METHOD(thread_tmp5_fu_635_p2);
    sensitive << ( tmp_1_0_1_2_reg_917 );
    sensitive << ( tmp_1_0_1_1_reg_988 );

    SC_METHOD(thread_tmp6_fu_643_p2);
    sensitive << ( tmp_1_0_2_reg_1038 );
    sensitive << ( tmp7_fu_639_p2 );

    SC_METHOD(thread_tmp7_fu_639_p2);
    sensitive << ( tmp_1_0_2_2_reg_993 );
    sensitive << ( tmp_1_0_2_1_reg_1043 );

    SC_METHOD(thread_tmp8_fu_740_p2);
    sensitive << ( tmp9_reg_1018 );
    sensitive << ( tmp10_reg_1068 );

    SC_METHOD(thread_tmp9_fu_566_p2);
    sensitive << ( tmp_1_1_reg_958 );
    sensitive << ( tmp_1_1_0_1_reg_963 );

    SC_METHOD(thread_tmp_10_fu_420_p3);
    sensitive << ( i_1_fu_375_p2 );

    SC_METHOD(thread_tmp_11_fu_428_p1);
    sensitive << ( tmp_10_fu_420_p3 );

    SC_METHOD(thread_tmp_12_fu_437_p2);
    sensitive << ( tmp_10_reg_803 );

    SC_METHOD(thread_tmp_13_fu_442_p3);
    sensitive << ( tmp_12_fu_437_p2 );

    SC_METHOD(thread_tmp_14_fu_462_p3);
    sensitive << ( tmp_4_0_2_fu_451_p2 );

    SC_METHOD(thread_tmp_15_fu_470_p1);
    sensitive << ( tmp_14_fu_462_p3 );

    SC_METHOD(thread_tmp_16_fu_493_p2);
    sensitive << ( tmp_14_reg_843 );

    SC_METHOD(thread_tmp_17_fu_498_p3);
    sensitive << ( tmp_16_fu_493_p2 );

    SC_METHOD(thread_tmp_1_0_0_1_fu_481_p1);
    sensitive << ( kernel_0_1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_tmp_1_0_0_1_fu_481_p2);
    sensitive << ( reg_336 );
    sensitive << ( tmp_1_0_0_1_fu_481_p1 );

    SC_METHOD(thread_tmp_1_0_0_2_fu_487_p1);
    sensitive << ( kernel_0_2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_tmp_1_0_0_2_fu_487_p2);
    sensitive << ( reg_340 );
    sensitive << ( tmp_1_0_0_2_fu_487_p1 );

    SC_METHOD(thread_tmp_1_0_1_1_fu_537_p2);
    sensitive << ( reg_336 );
    sensitive << ( kernel_1_1_read_reg_905 );

    SC_METHOD(thread_tmp_1_0_1_fu_532_p2);
    sensitive << ( reg_332 );
    sensitive << ( kernel_1_0_read_reg_898 );

    SC_METHOD(thread_tmp_1_0_2_1_fu_589_p2);
    sensitive << ( reg_336 );
    sensitive << ( kernel_2_1_read_reg_944 );

    SC_METHOD(thread_tmp_1_0_2_2_fu_542_p2);
    sensitive << ( reg_340 );
    sensitive << ( kernel_2_2_read_reg_951 );

    SC_METHOD(thread_tmp_1_0_2_fu_584_p2);
    sensitive << ( reg_332 );
    sensitive << ( kernel_2_0_read_reg_937 );

    SC_METHOD(thread_tmp_1_1_0_1_fu_514_p1);
    sensitive << ( kernel_0_1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_tmp_1_1_0_1_fu_514_p2);
    sensitive << ( reg_340 );
    sensitive << ( tmp_1_1_0_1_fu_514_p1 );

    SC_METHOD(thread_tmp_1_1_0_2_fu_551_p2);
    sensitive << ( reg_353 );
    sensitive << ( kernel_0_2_read_reg_883 );

    SC_METHOD(thread_tmp_1_1_1_fu_556_p2);
    sensitive << ( reg_336 );
    sensitive << ( kernel_1_0_read_reg_898 );

    SC_METHOD(thread_tmp_1_1_2_1_fu_561_p2);
    sensitive << ( reg_340 );
    sensitive << ( kernel_2_1_read_reg_944 );

    SC_METHOD(thread_tmp_1_1_2_2_fu_603_p2);
    sensitive << ( reg_353 );
    sensitive << ( kernel_2_2_read_reg_951 );

    SC_METHOD(thread_tmp_1_1_2_fu_598_p2);
    sensitive << ( reg_336 );
    sensitive << ( kernel_2_0_read_reg_937 );

    SC_METHOD(thread_tmp_1_1_fu_508_p1);
    sensitive << ( kernel_0_0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_tmp_1_1_fu_508_p2);
    sensitive << ( reg_336 );
    sensitive << ( tmp_1_1_fu_508_p1 );

    SC_METHOD(thread_tmp_1_2_0_1_fu_570_p2);
    sensitive << ( reg_353 );
    sensitive << ( kernel_0_1_read_reg_873 );

    SC_METHOD(thread_tmp_1_2_0_2_fu_526_p1);
    sensitive << ( kernel_0_2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_tmp_1_2_0_2_fu_526_p2);
    sensitive << ( reg_349 );
    sensitive << ( tmp_1_2_0_2_fu_526_p1 );

    SC_METHOD(thread_tmp_1_2_1_2_fu_580_p2);
    sensitive << ( input_2_load_1_reg_863 );
    sensitive << ( kernel_1_2_read_reg_911 );

    SC_METHOD(thread_tmp_1_2_1_fu_575_p2);
    sensitive << ( reg_344 );
    sensitive << ( kernel_1_0_read_reg_898 );

    SC_METHOD(thread_tmp_1_2_2_1_fu_617_p2);
    sensitive << ( reg_353 );
    sensitive << ( kernel_2_1_read_reg_944 );

    SC_METHOD(thread_tmp_1_2_2_2_fu_622_p2);
    sensitive << ( reg_349 );
    sensitive << ( kernel_2_2_read_reg_951 );

    SC_METHOD(thread_tmp_1_2_2_fu_612_p2);
    sensitive << ( reg_340 );
    sensitive << ( kernel_2_0_read_reg_937 );

    SC_METHOD(thread_tmp_1_2_fu_520_p1);
    sensitive << ( kernel_0_0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_tmp_1_2_fu_520_p2);
    sensitive << ( reg_340 );
    sensitive << ( tmp_1_2_fu_520_p1 );

    SC_METHOD(thread_tmp_2_fu_386_p3);
    sensitive << ( ap_phi_mux_i_phi_fu_324_p4 );

    SC_METHOD(thread_tmp_3_fu_394_p1);
    sensitive << ( tmp_2_fu_386_p3 );

    SC_METHOD(thread_tmp_4_0_2_fu_451_p2);
    sensitive << ( i_cast_fu_433_p1 );

    SC_METHOD(thread_tmp_4_fu_400_p2);
    sensitive << ( tmp_2_fu_386_p3 );

    SC_METHOD(thread_tmp_5_0_1_fu_415_p1);
    sensitive << ( i_1_fu_375_p2 );

    SC_METHOD(thread_tmp_5_0_2_fu_457_p1);
    sensitive << ( tmp_4_0_2_fu_451_p2 );

    SC_METHOD(thread_tmp_5_fu_406_p3);
    sensitive << ( tmp_4_fu_400_p2 );

    SC_METHOD(thread_tmp_6_fu_696_p3);
    sensitive << ( i_reg_320_pp0_iter1_reg );

    SC_METHOD(thread_tmp_7_cast_fu_714_p1);
    sensitive << ( tmp_7_fu_708_p2 );

    SC_METHOD(thread_tmp_7_fu_708_p2);
    sensitive << ( p_shl_cast_fu_704_p1 );
    sensitive << ( tmp_cast_fu_692_p1 );

    SC_METHOD(thread_tmp_8_cast_fu_725_p1);
    sensitive << ( tmp_8_fu_719_p2 );

    SC_METHOD(thread_tmp_8_fu_719_p2);
    sensitive << ( tmp_7_fu_708_p2 );

    SC_METHOD(thread_tmp_9_cast_fu_764_p1);
    sensitive << ( tmp_9_fu_759_p2 );

    SC_METHOD(thread_tmp_9_fu_759_p2);
    sensitive << ( tmp_7_reg_1118 );

    SC_METHOD(thread_tmp_cast_fu_692_p1);
    sensitive << ( i_reg_320_pp0_iter1_reg );

    SC_METHOD(thread_tmp_fu_381_p1);
    sensitive << ( ap_phi_mux_i_phi_fu_324_p4 );

    SC_METHOD(thread_tmp_s_fu_475_p1);
    sensitive << ( kernel_0_0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_tmp_s_fu_475_p2);
    sensitive << ( reg_332 );
    sensitive << ( tmp_s_fu_475_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond3_fu_369_p2 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage2_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "convolution2D_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_0_address0, "(port)input_0_address0");
    sc_trace(mVcdFile, input_0_ce0, "(port)input_0_ce0");
    sc_trace(mVcdFile, input_0_q0, "(port)input_0_q0");
    sc_trace(mVcdFile, input_0_address1, "(port)input_0_address1");
    sc_trace(mVcdFile, input_0_ce1, "(port)input_0_ce1");
    sc_trace(mVcdFile, input_0_q1, "(port)input_0_q1");
    sc_trace(mVcdFile, input_1_address0, "(port)input_1_address0");
    sc_trace(mVcdFile, input_1_ce0, "(port)input_1_ce0");
    sc_trace(mVcdFile, input_1_q0, "(port)input_1_q0");
    sc_trace(mVcdFile, input_1_address1, "(port)input_1_address1");
    sc_trace(mVcdFile, input_1_ce1, "(port)input_1_ce1");
    sc_trace(mVcdFile, input_1_q1, "(port)input_1_q1");
    sc_trace(mVcdFile, input_2_address0, "(port)input_2_address0");
    sc_trace(mVcdFile, input_2_ce0, "(port)input_2_ce0");
    sc_trace(mVcdFile, input_2_q0, "(port)input_2_q0");
    sc_trace(mVcdFile, input_2_address1, "(port)input_2_address1");
    sc_trace(mVcdFile, input_2_ce1, "(port)input_2_ce1");
    sc_trace(mVcdFile, input_2_q1, "(port)input_2_q1");
    sc_trace(mVcdFile, kernel_0_0, "(port)kernel_0_0");
    sc_trace(mVcdFile, kernel_0_1, "(port)kernel_0_1");
    sc_trace(mVcdFile, kernel_0_2, "(port)kernel_0_2");
    sc_trace(mVcdFile, kernel_1_0, "(port)kernel_1_0");
    sc_trace(mVcdFile, kernel_1_1, "(port)kernel_1_1");
    sc_trace(mVcdFile, kernel_1_2, "(port)kernel_1_2");
    sc_trace(mVcdFile, kernel_2_0, "(port)kernel_2_0");
    sc_trace(mVcdFile, kernel_2_1, "(port)kernel_2_1");
    sc_trace(mVcdFile, kernel_2_2, "(port)kernel_2_2");
    sc_trace(mVcdFile, output_r_address0, "(port)output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "(port)output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "(port)output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "(port)output_r_d0");
    sc_trace(mVcdFile, output_r_address1, "(port)output_r_address1");
    sc_trace(mVcdFile, output_r_ce1, "(port)output_r_ce1");
    sc_trace(mVcdFile, output_r_we1, "(port)output_r_we1");
    sc_trace(mVcdFile, output_r_d1, "(port)output_r_d1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_reg_320, "i_reg_320");
    sc_trace(mVcdFile, i_reg_320_pp0_iter1_reg, "i_reg_320_pp0_iter1_reg");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter1, "ap_block_state5_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter2, "ap_block_state8_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, reg_332, "reg_332");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage1_iter1, "ap_block_state6_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage1_iter2, "ap_block_state9_pp0_stage1_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, exitcond3_reg_769, "exitcond3_reg_769");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage2_iter0, "ap_block_state4_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage2_iter1, "ap_block_state7_pp0_stage2_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, reg_336, "reg_336");
    sc_trace(mVcdFile, reg_340, "reg_340");
    sc_trace(mVcdFile, reg_344, "reg_344");
    sc_trace(mVcdFile, reg_349, "reg_349");
    sc_trace(mVcdFile, reg_353, "reg_353");
    sc_trace(mVcdFile, exitcond3_fu_369_p2, "exitcond3_fu_369_p2");
    sc_trace(mVcdFile, exitcond3_reg_769_pp0_iter1_reg, "exitcond3_reg_769_pp0_iter1_reg");
    sc_trace(mVcdFile, exitcond3_reg_769_pp0_iter2_reg, "exitcond3_reg_769_pp0_iter2_reg");
    sc_trace(mVcdFile, i_1_fu_375_p2, "i_1_fu_375_p2");
    sc_trace(mVcdFile, i_1_reg_773, "i_1_reg_773");
    sc_trace(mVcdFile, tmp_5_fu_406_p3, "tmp_5_fu_406_p3");
    sc_trace(mVcdFile, tmp_5_reg_783, "tmp_5_reg_783");
    sc_trace(mVcdFile, tmp_10_fu_420_p3, "tmp_10_fu_420_p3");
    sc_trace(mVcdFile, tmp_10_reg_803, "tmp_10_reg_803");
    sc_trace(mVcdFile, tmp_11_fu_428_p1, "tmp_11_fu_428_p1");
    sc_trace(mVcdFile, tmp_11_reg_808, "tmp_11_reg_808");
    sc_trace(mVcdFile, tmp_13_fu_442_p3, "tmp_13_fu_442_p3");
    sc_trace(mVcdFile, tmp_13_reg_833, "tmp_13_reg_833");
    sc_trace(mVcdFile, tmp_14_fu_462_p3, "tmp_14_fu_462_p3");
    sc_trace(mVcdFile, tmp_14_reg_843, "tmp_14_reg_843");
    sc_trace(mVcdFile, tmp_15_fu_470_p1, "tmp_15_fu_470_p1");
    sc_trace(mVcdFile, tmp_15_reg_848, "tmp_15_reg_848");
    sc_trace(mVcdFile, input_2_load_1_reg_863, "input_2_load_1_reg_863");
    sc_trace(mVcdFile, tmp_s_fu_475_p2, "tmp_s_fu_475_p2");
    sc_trace(mVcdFile, tmp_s_reg_868, "tmp_s_reg_868");
    sc_trace(mVcdFile, kernel_0_1_read_reg_873, "kernel_0_1_read_reg_873");
    sc_trace(mVcdFile, tmp_1_0_0_1_fu_481_p2, "tmp_1_0_0_1_fu_481_p2");
    sc_trace(mVcdFile, tmp_1_0_0_1_reg_878, "tmp_1_0_0_1_reg_878");
    sc_trace(mVcdFile, kernel_0_2_read_reg_883, "kernel_0_2_read_reg_883");
    sc_trace(mVcdFile, tmp_1_0_0_2_fu_487_p2, "tmp_1_0_0_2_fu_487_p2");
    sc_trace(mVcdFile, tmp_1_0_0_2_reg_888, "tmp_1_0_0_2_reg_888");
    sc_trace(mVcdFile, kernel_1_0_read_reg_898, "kernel_1_0_read_reg_898");
    sc_trace(mVcdFile, kernel_1_1_read_reg_905, "kernel_1_1_read_reg_905");
    sc_trace(mVcdFile, kernel_1_2_read_reg_911, "kernel_1_2_read_reg_911");
    sc_trace(mVcdFile, grp_fu_357_p2, "grp_fu_357_p2");
    sc_trace(mVcdFile, tmp_1_0_1_2_reg_917, "tmp_1_0_1_2_reg_917");
    sc_trace(mVcdFile, kernel_2_0_read_reg_937, "kernel_2_0_read_reg_937");
    sc_trace(mVcdFile, kernel_2_1_read_reg_944, "kernel_2_1_read_reg_944");
    sc_trace(mVcdFile, kernel_2_2_read_reg_951, "kernel_2_2_read_reg_951");
    sc_trace(mVcdFile, tmp_1_1_fu_508_p2, "tmp_1_1_fu_508_p2");
    sc_trace(mVcdFile, tmp_1_1_reg_958, "tmp_1_1_reg_958");
    sc_trace(mVcdFile, tmp_1_1_0_1_fu_514_p2, "tmp_1_1_0_1_fu_514_p2");
    sc_trace(mVcdFile, tmp_1_1_0_1_reg_963, "tmp_1_1_0_1_reg_963");
    sc_trace(mVcdFile, grp_fu_363_p2, "grp_fu_363_p2");
    sc_trace(mVcdFile, tmp_1_1_1_1_reg_968, "tmp_1_1_1_1_reg_968");
    sc_trace(mVcdFile, tmp_1_2_fu_520_p2, "tmp_1_2_fu_520_p2");
    sc_trace(mVcdFile, tmp_1_2_reg_973, "tmp_1_2_reg_973");
    sc_trace(mVcdFile, tmp_1_2_0_2_fu_526_p2, "tmp_1_2_0_2_fu_526_p2");
    sc_trace(mVcdFile, tmp_1_2_0_2_reg_978, "tmp_1_2_0_2_reg_978");
    sc_trace(mVcdFile, tmp_1_0_1_fu_532_p2, "tmp_1_0_1_fu_532_p2");
    sc_trace(mVcdFile, tmp_1_0_1_reg_983, "tmp_1_0_1_reg_983");
    sc_trace(mVcdFile, tmp_1_0_1_1_fu_537_p2, "tmp_1_0_1_1_fu_537_p2");
    sc_trace(mVcdFile, tmp_1_0_1_1_reg_988, "tmp_1_0_1_1_reg_988");
    sc_trace(mVcdFile, tmp_1_0_2_2_fu_542_p2, "tmp_1_0_2_2_fu_542_p2");
    sc_trace(mVcdFile, tmp_1_0_2_2_reg_993, "tmp_1_0_2_2_reg_993");
    sc_trace(mVcdFile, tmp2_fu_547_p2, "tmp2_fu_547_p2");
    sc_trace(mVcdFile, tmp2_reg_998, "tmp2_reg_998");
    sc_trace(mVcdFile, tmp_1_1_0_2_fu_551_p2, "tmp_1_1_0_2_fu_551_p2");
    sc_trace(mVcdFile, tmp_1_1_0_2_reg_1003, "tmp_1_1_0_2_reg_1003");
    sc_trace(mVcdFile, tmp_1_1_1_fu_556_p2, "tmp_1_1_1_fu_556_p2");
    sc_trace(mVcdFile, tmp_1_1_1_reg_1008, "tmp_1_1_1_reg_1008");
    sc_trace(mVcdFile, tmp_1_1_2_1_fu_561_p2, "tmp_1_1_2_1_fu_561_p2");
    sc_trace(mVcdFile, tmp_1_1_2_1_reg_1013, "tmp_1_1_2_1_reg_1013");
    sc_trace(mVcdFile, tmp9_fu_566_p2, "tmp9_fu_566_p2");
    sc_trace(mVcdFile, tmp9_reg_1018, "tmp9_reg_1018");
    sc_trace(mVcdFile, tmp_1_2_0_1_fu_570_p2, "tmp_1_2_0_1_fu_570_p2");
    sc_trace(mVcdFile, tmp_1_2_0_1_reg_1023, "tmp_1_2_0_1_reg_1023");
    sc_trace(mVcdFile, tmp_1_2_1_fu_575_p2, "tmp_1_2_1_fu_575_p2");
    sc_trace(mVcdFile, tmp_1_2_1_reg_1028, "tmp_1_2_1_reg_1028");
    sc_trace(mVcdFile, tmp_1_2_1_2_fu_580_p2, "tmp_1_2_1_2_fu_580_p2");
    sc_trace(mVcdFile, tmp_1_2_1_2_reg_1033, "tmp_1_2_1_2_reg_1033");
    sc_trace(mVcdFile, tmp_1_0_2_fu_584_p2, "tmp_1_0_2_fu_584_p2");
    sc_trace(mVcdFile, tmp_1_0_2_reg_1038, "tmp_1_0_2_reg_1038");
    sc_trace(mVcdFile, tmp_1_0_2_1_fu_589_p2, "tmp_1_0_2_1_fu_589_p2");
    sc_trace(mVcdFile, tmp_1_0_2_1_reg_1043, "tmp_1_0_2_1_reg_1043");
    sc_trace(mVcdFile, tmp3_fu_594_p2, "tmp3_fu_594_p2");
    sc_trace(mVcdFile, tmp3_reg_1048, "tmp3_reg_1048");
    sc_trace(mVcdFile, tmp_1_1_1_2_reg_1053, "tmp_1_1_1_2_reg_1053");
    sc_trace(mVcdFile, tmp_1_1_2_fu_598_p2, "tmp_1_1_2_fu_598_p2");
    sc_trace(mVcdFile, tmp_1_1_2_reg_1058, "tmp_1_1_2_reg_1058");
    sc_trace(mVcdFile, tmp_1_1_2_2_fu_603_p2, "tmp_1_1_2_2_fu_603_p2");
    sc_trace(mVcdFile, tmp_1_1_2_2_reg_1063, "tmp_1_1_2_2_reg_1063");
    sc_trace(mVcdFile, tmp10_fu_608_p2, "tmp10_fu_608_p2");
    sc_trace(mVcdFile, tmp10_reg_1068, "tmp10_reg_1068");
    sc_trace(mVcdFile, tmp_1_2_1_1_reg_1073, "tmp_1_2_1_1_reg_1073");
    sc_trace(mVcdFile, tmp_1_2_2_fu_612_p2, "tmp_1_2_2_fu_612_p2");
    sc_trace(mVcdFile, tmp_1_2_2_reg_1078, "tmp_1_2_2_reg_1078");
    sc_trace(mVcdFile, tmp_1_2_2_1_fu_617_p2, "tmp_1_2_2_1_fu_617_p2");
    sc_trace(mVcdFile, tmp_1_2_2_1_reg_1083, "tmp_1_2_2_1_reg_1083");
    sc_trace(mVcdFile, tmp_1_2_2_2_fu_622_p2, "tmp_1_2_2_2_fu_622_p2");
    sc_trace(mVcdFile, tmp_1_2_2_2_reg_1088, "tmp_1_2_2_2_reg_1088");
    sc_trace(mVcdFile, tmp16_fu_627_p2, "tmp16_fu_627_p2");
    sc_trace(mVcdFile, tmp16_reg_1093, "tmp16_reg_1093");
    sc_trace(mVcdFile, tmp17_fu_631_p2, "tmp17_fu_631_p2");
    sc_trace(mVcdFile, tmp17_reg_1098, "tmp17_reg_1098");
    sc_trace(mVcdFile, tmp4_fu_648_p2, "tmp4_fu_648_p2");
    sc_trace(mVcdFile, tmp4_reg_1103, "tmp4_reg_1103");
    sc_trace(mVcdFile, tmp11_fu_667_p2, "tmp11_fu_667_p2");
    sc_trace(mVcdFile, tmp11_reg_1108, "tmp11_reg_1108");
    sc_trace(mVcdFile, tmp18_fu_686_p2, "tmp18_fu_686_p2");
    sc_trace(mVcdFile, tmp18_reg_1113, "tmp18_reg_1113");
    sc_trace(mVcdFile, tmp_7_fu_708_p2, "tmp_7_fu_708_p2");
    sc_trace(mVcdFile, tmp_7_reg_1118, "tmp_7_reg_1118");
    sc_trace(mVcdFile, sum_2_2_2_2_fu_754_p2, "sum_2_2_2_2_fu_754_p2");
    sc_trace(mVcdFile, sum_2_2_2_2_reg_1123, "sum_2_2_2_2_reg_1123");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_phi_mux_i_phi_fu_324_p4, "ap_phi_mux_i_phi_fu_324_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, tmp_3_fu_394_p1, "tmp_3_fu_394_p1");
    sc_trace(mVcdFile, tmp_fu_381_p1, "tmp_fu_381_p1");
    sc_trace(mVcdFile, tmp_5_0_1_fu_415_p1, "tmp_5_0_1_fu_415_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, tmp_5_0_2_fu_457_p1, "tmp_5_0_2_fu_457_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, tmp_17_fu_498_p3, "tmp_17_fu_498_p3");
    sc_trace(mVcdFile, tmp_7_cast_fu_714_p1, "tmp_7_cast_fu_714_p1");
    sc_trace(mVcdFile, tmp_8_cast_fu_725_p1, "tmp_8_cast_fu_725_p1");
    sc_trace(mVcdFile, tmp_9_cast_fu_764_p1, "tmp_9_cast_fu_764_p1");
    sc_trace(mVcdFile, sum_2_0_2_2_fu_734_p2, "sum_2_0_2_2_fu_734_p2");
    sc_trace(mVcdFile, grp_fu_357_p1, "grp_fu_357_p1");
    sc_trace(mVcdFile, grp_fu_363_p1, "grp_fu_363_p1");
    sc_trace(mVcdFile, tmp_2_fu_386_p3, "tmp_2_fu_386_p3");
    sc_trace(mVcdFile, tmp_4_fu_400_p2, "tmp_4_fu_400_p2");
    sc_trace(mVcdFile, tmp_12_fu_437_p2, "tmp_12_fu_437_p2");
    sc_trace(mVcdFile, i_cast_fu_433_p1, "i_cast_fu_433_p1");
    sc_trace(mVcdFile, tmp_4_0_2_fu_451_p2, "tmp_4_0_2_fu_451_p2");
    sc_trace(mVcdFile, tmp_s_fu_475_p1, "tmp_s_fu_475_p1");
    sc_trace(mVcdFile, tmp_1_0_0_1_fu_481_p1, "tmp_1_0_0_1_fu_481_p1");
    sc_trace(mVcdFile, tmp_1_0_0_2_fu_487_p1, "tmp_1_0_0_2_fu_487_p1");
    sc_trace(mVcdFile, tmp_16_fu_493_p2, "tmp_16_fu_493_p2");
    sc_trace(mVcdFile, tmp_1_1_fu_508_p1, "tmp_1_1_fu_508_p1");
    sc_trace(mVcdFile, tmp_1_1_0_1_fu_514_p1, "tmp_1_1_0_1_fu_514_p1");
    sc_trace(mVcdFile, tmp_1_2_fu_520_p1, "tmp_1_2_fu_520_p1");
    sc_trace(mVcdFile, tmp_1_2_0_2_fu_526_p1, "tmp_1_2_0_2_fu_526_p1");
    sc_trace(mVcdFile, tmp7_fu_639_p2, "tmp7_fu_639_p2");
    sc_trace(mVcdFile, tmp6_fu_643_p2, "tmp6_fu_643_p2");
    sc_trace(mVcdFile, tmp5_fu_635_p2, "tmp5_fu_635_p2");
    sc_trace(mVcdFile, tmp14_fu_658_p2, "tmp14_fu_658_p2");
    sc_trace(mVcdFile, tmp13_fu_662_p2, "tmp13_fu_662_p2");
    sc_trace(mVcdFile, tmp12_fu_654_p2, "tmp12_fu_654_p2");
    sc_trace(mVcdFile, tmp21_fu_677_p2, "tmp21_fu_677_p2");
    sc_trace(mVcdFile, tmp20_fu_681_p2, "tmp20_fu_681_p2");
    sc_trace(mVcdFile, tmp19_fu_673_p2, "tmp19_fu_673_p2");
    sc_trace(mVcdFile, tmp_6_fu_696_p3, "tmp_6_fu_696_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_704_p1, "p_shl_cast_fu_704_p1");
    sc_trace(mVcdFile, tmp_cast_fu_692_p1, "tmp_cast_fu_692_p1");
    sc_trace(mVcdFile, tmp_8_fu_719_p2, "tmp_8_fu_719_p2");
    sc_trace(mVcdFile, tmp1_fu_730_p2, "tmp1_fu_730_p2");
    sc_trace(mVcdFile, tmp8_fu_740_p2, "tmp8_fu_740_p2");
    sc_trace(mVcdFile, tmp15_fu_750_p2, "tmp15_fu_750_p2");
    sc_trace(mVcdFile, tmp_9_fu_759_p2, "tmp_9_fu_759_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_condition_103, "ap_condition_103");
    sc_trace(mVcdFile, ap_condition_125, "ap_condition_125");
#endif

    }
    mHdltvinHandle.open("convolution2D.hdltvin.dat");
    mHdltvoutHandle.open("convolution2D.hdltvout.dat");
}

convolution2D::~convolution2D() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void convolution2D::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond3_reg_769.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        i_reg_320 = i_1_reg_773.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_320 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(exitcond3_reg_769.read(), ap_const_lv1_0)) {
        if (esl_seteq<1,1,1>(ap_condition_125.read(), ap_const_boolean_1)) {
            reg_344 = input_1_q0.read();
        } else if (esl_seteq<1,1,1>(ap_condition_103.read(), ap_const_boolean_1)) {
            reg_344 = input_1_q1.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond3_reg_769 = exitcond3_fu_369_p2.read();
        exitcond3_reg_769_pp0_iter1_reg = exitcond3_reg_769.read();
        exitcond3_reg_769_pp0_iter2_reg = exitcond3_reg_769_pp0_iter1_reg.read();
        i_reg_320_pp0_iter1_reg = i_reg_320.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        i_1_reg_773 = i_1_fu_375_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond3_reg_769.read(), ap_const_lv1_0))) {
        input_2_load_1_reg_863 = input_2_q1.read();
    }
    if ((esl_seteq<1,1,1>(exitcond3_reg_769.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        kernel_0_1_read_reg_873 = kernel_0_1.read();
        kernel_0_2_read_reg_883 = kernel_0_2.read();
        kernel_1_0_read_reg_898 = kernel_1_0.read();
        kernel_1_1_read_reg_905 = kernel_1_1.read();
        kernel_1_2_read_reg_911 = kernel_1_2.read();
        kernel_2_0_read_reg_937 = kernel_2_0.read();
        kernel_2_1_read_reg_944 = kernel_2_1.read();
        kernel_2_2_read_reg_951 = kernel_2_2.read();
        tmp_1_0_0_1_reg_878 = tmp_1_0_0_1_fu_481_p2.read();
        tmp_1_0_0_2_reg_888 = tmp_1_0_0_2_fu_487_p2.read();
        tmp_1_1_0_1_reg_963 = tmp_1_1_0_1_fu_514_p2.read();
        tmp_1_1_reg_958 = tmp_1_1_fu_508_p2.read();
        tmp_1_2_0_2_reg_978 = tmp_1_2_0_2_fu_526_p2.read();
        tmp_1_2_reg_973 = tmp_1_2_fu_520_p2.read();
        tmp_s_reg_868 = tmp_s_fu_475_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond3_reg_769.read(), ap_const_lv1_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond3_reg_769.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond3_reg_769.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
        reg_332 = input_0_q0.read();
        reg_336 = input_0_q1.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond3_reg_769.read(), ap_const_lv1_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond3_reg_769.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        reg_340 = input_1_q0.read();
        reg_349 = input_2_q0.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond3_reg_769.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond3_reg_769.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
        reg_353 = input_1_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_reg_769_pp0_iter1_reg.read()))) {
        sum_2_2_2_2_reg_1123 = sum_2_2_2_2_fu_754_p2.read();
        tmp_7_reg_1118 = tmp_7_fu_708_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_reg_769_pp0_iter1_reg.read()))) {
        tmp10_reg_1068 = tmp10_fu_608_p2.read();
        tmp16_reg_1093 = tmp16_fu_627_p2.read();
        tmp17_reg_1098 = tmp17_fu_631_p2.read();
        tmp3_reg_1048 = tmp3_fu_594_p2.read();
        tmp_1_0_2_1_reg_1043 = tmp_1_0_2_1_fu_589_p2.read();
        tmp_1_0_2_reg_1038 = tmp_1_0_2_fu_584_p2.read();
        tmp_1_1_2_2_reg_1063 = tmp_1_1_2_2_fu_603_p2.read();
        tmp_1_1_2_reg_1058 = tmp_1_1_2_fu_598_p2.read();
        tmp_1_2_2_1_reg_1083 = tmp_1_2_2_1_fu_617_p2.read();
        tmp_1_2_2_2_reg_1088 = tmp_1_2_2_2_fu_622_p2.read();
        tmp_1_2_2_reg_1078 = tmp_1_2_2_fu_612_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_reg_769_pp0_iter1_reg.read()))) {
        tmp11_reg_1108 = tmp11_fu_667_p2.read();
        tmp18_reg_1113 = tmp18_fu_686_p2.read();
        tmp4_reg_1103 = tmp4_fu_648_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond3_reg_769.read(), ap_const_lv1_0))) {
        tmp2_reg_998 = tmp2_fu_547_p2.read();
        tmp9_reg_1018 = tmp9_fu_566_p2.read();
        tmp_1_0_1_1_reg_988 = tmp_1_0_1_1_fu_537_p2.read();
        tmp_1_0_1_reg_983 = tmp_1_0_1_fu_532_p2.read();
        tmp_1_0_2_2_reg_993 = tmp_1_0_2_2_fu_542_p2.read();
        tmp_1_1_0_2_reg_1003 = tmp_1_1_0_2_fu_551_p2.read();
        tmp_1_1_1_reg_1008 = tmp_1_1_1_fu_556_p2.read();
        tmp_1_1_2_1_reg_1013 = tmp_1_1_2_1_fu_561_p2.read();
        tmp_1_2_0_1_reg_1023 = tmp_1_2_0_1_fu_570_p2.read();
        tmp_1_2_1_2_reg_1033 = tmp_1_2_1_2_fu_580_p2.read();
        tmp_1_2_1_reg_1028 = tmp_1_2_1_fu_575_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_369_p2.read()))) {
        tmp_10_reg_803 = tmp_10_fu_420_p3.read();
        tmp_11_reg_808 = tmp_11_fu_428_p1.read();
        tmp_5_reg_783 = tmp_5_fu_406_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond3_reg_769.read(), ap_const_lv1_0))) {
        tmp_13_reg_833 = tmp_13_fu_442_p3.read();
        tmp_14_reg_843 = tmp_14_fu_462_p3.read();
        tmp_15_reg_848 = tmp_15_fu_470_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond3_reg_769.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        tmp_1_0_1_2_reg_917 = grp_fu_357_p2.read();
        tmp_1_1_1_1_reg_968 = grp_fu_363_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_reg_769_pp0_iter1_reg.read()))) {
        tmp_1_1_1_2_reg_1053 = grp_fu_357_p2.read();
        tmp_1_2_1_1_reg_1073 = grp_fu_363_p2.read();
    }
}

void convolution2D::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void convolution2D::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void convolution2D::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[3];
}

void convolution2D::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void convolution2D::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[4];
}

void convolution2D::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_state4_pp0_stage2_iter0() {
    ap_block_state4_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_state5_pp0_stage0_iter1() {
    ap_block_state5_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_state6_pp0_stage1_iter1() {
    ap_block_state6_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_state7_pp0_stage2_iter1() {
    ap_block_state7_pp0_stage2_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_state8_pp0_stage0_iter2() {
    ap_block_state8_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_block_state9_pp0_stage1_iter2() {
    ap_block_state9_pp0_stage1_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolution2D::thread_ap_condition_103() {
    ap_condition_103 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0));
}

void convolution2D::thread_ap_condition_125() {
    ap_condition_125 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()));
}

void convolution2D::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(exitcond3_fu_369_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void convolution2D::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void convolution2D::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void convolution2D::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void convolution2D::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void convolution2D::thread_ap_phi_mux_i_phi_fu_324_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(exitcond3_reg_769.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_phi_fu_324_p4 = i_1_reg_773.read();
    } else {
        ap_phi_mux_i_phi_fu_324_p4 = i_reg_320.read();
    }
}

void convolution2D::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void convolution2D::thread_exitcond3_fu_369_p2() {
    exitcond3_fu_369_p2 = (!ap_phi_mux_i_phi_fu_324_p4.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i_phi_fu_324_p4.read() == ap_const_lv2_3);
}

void convolution2D::thread_grp_fu_357_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        grp_fu_357_p1 = kernel_1_2_read_reg_911.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        grp_fu_357_p1 = kernel_1_2.read();
    } else {
        grp_fu_357_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void convolution2D::thread_grp_fu_357_p2() {
    grp_fu_357_p2 = (!reg_344.read().is_01() || !grp_fu_357_p1.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_344.read()) * sc_bigint<32>(grp_fu_357_p1.read());
}

void convolution2D::thread_grp_fu_363_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        grp_fu_363_p1 = kernel_1_1_read_reg_905.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        grp_fu_363_p1 = kernel_1_1.read();
    } else {
        grp_fu_363_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void convolution2D::thread_grp_fu_363_p2() {
    grp_fu_363_p2 = (!reg_344.read().is_01() || !grp_fu_363_p1.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_344.read()) * sc_bigint<32>(grp_fu_363_p1.read());
}

void convolution2D::thread_i_1_fu_375_p2() {
    i_1_fu_375_p2 = (!ap_phi_mux_i_phi_fu_324_p4.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(ap_phi_mux_i_phi_fu_324_p4.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void convolution2D::thread_i_cast_fu_433_p1() {
    i_cast_fu_433_p1 = esl_zext<3,2>(i_reg_320.read());
}

void convolution2D::thread_input_0_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            input_0_address0 =  (sc_lv<4>) (tmp_15_reg_848.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            input_0_address0 =  (sc_lv<4>) (tmp_11_reg_808.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            input_0_address0 =  (sc_lv<4>) (tmp_3_fu_394_p1.read());
        } else {
            input_0_address0 =  (sc_lv<4>) ("XXXX");
        }
    } else {
        input_0_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void convolution2D::thread_input_0_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            input_0_address1 =  (sc_lv<4>) (tmp_17_fu_498_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            input_0_address1 =  (sc_lv<4>) (tmp_13_fu_442_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            input_0_address1 =  (sc_lv<4>) (tmp_5_fu_406_p3.read());
        } else {
            input_0_address1 =  (sc_lv<4>) ("XXXX");
        }
    } else {
        input_0_address1 =  (sc_lv<4>) ("XXXX");
    }
}

void convolution2D::thread_input_0_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())))) {
        input_0_ce0 = ap_const_logic_1;
    } else {
        input_0_ce0 = ap_const_logic_0;
    }
}

void convolution2D::thread_input_0_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())))) {
        input_0_ce1 = ap_const_logic_1;
    } else {
        input_0_ce1 = ap_const_logic_0;
    }
}

void convolution2D::thread_input_1_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            input_1_address0 =  (sc_lv<4>) (tmp_13_reg_833.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            input_1_address0 =  (sc_lv<4>) (tmp_15_fu_470_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            input_1_address0 =  (sc_lv<4>) (tmp_3_fu_394_p1.read());
        } else {
            input_1_address0 =  (sc_lv<4>) ("XXXX");
        }
    } else {
        input_1_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void convolution2D::thread_input_1_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            input_1_address1 =  (sc_lv<4>) (tmp_17_fu_498_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            input_1_address1 =  (sc_lv<4>) (tmp_5_reg_783.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            input_1_address1 =  (sc_lv<4>) (tmp_11_fu_428_p1.read());
        } else {
            input_1_address1 =  (sc_lv<4>) ("XXXX");
        }
    } else {
        input_1_address1 =  (sc_lv<4>) ("XXXX");
    }
}

void convolution2D::thread_input_1_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())))) {
        input_1_ce0 = ap_const_logic_1;
    } else {
        input_1_ce0 = ap_const_logic_0;
    }
}

void convolution2D::thread_input_1_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())))) {
        input_1_ce1 = ap_const_logic_1;
    } else {
        input_1_ce1 = ap_const_logic_0;
    }
}

void convolution2D::thread_input_2_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            input_2_address0 =  (sc_lv<3>) (tmp_5_0_2_fu_457_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            input_2_address0 =  (sc_lv<3>) (tmp_fu_381_p1.read());
        } else {
            input_2_address0 =  (sc_lv<3>) ("XXX");
        }
    } else {
        input_2_address0 =  (sc_lv<3>) ("XXX");
    }
}

void convolution2D::thread_input_2_address1() {
    input_2_address1 =  (sc_lv<3>) (tmp_5_0_1_fu_415_p1.read());
}

void convolution2D::thread_input_2_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())))) {
        input_2_ce0 = ap_const_logic_1;
    } else {
        input_2_ce0 = ap_const_logic_0;
    }
}

void convolution2D::thread_input_2_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        input_2_ce1 = ap_const_logic_1;
    } else {
        input_2_ce1 = ap_const_logic_0;
    }
}

void convolution2D::thread_output_r_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            output_r_address0 =  (sc_lv<4>) (tmp_9_cast_fu_764_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            output_r_address0 =  (sc_lv<4>) (tmp_7_cast_fu_714_p1.read());
        } else {
            output_r_address0 =  (sc_lv<4>) ("XXXX");
        }
    } else {
        output_r_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void convolution2D::thread_output_r_address1() {
    output_r_address1 =  (sc_lv<4>) (tmp_8_cast_fu_725_p1.read());
}

void convolution2D::thread_output_r_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())))) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void convolution2D::thread_output_r_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        output_r_ce1 = ap_const_logic_1;
    } else {
        output_r_ce1 = ap_const_logic_0;
    }
}

void convolution2D::thread_output_r_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            output_r_d0 = sum_2_2_2_2_reg_1123.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            output_r_d0 = sum_2_0_2_2_fu_734_p2.read();
        } else {
            output_r_d0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        output_r_d0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void convolution2D::thread_output_r_d1() {
    output_r_d1 = (!tmp11_reg_1108.read().is_01() || !tmp8_fu_740_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp11_reg_1108.read()) + sc_biguint<32>(tmp8_fu_740_p2.read()));
}

void convolution2D::thread_output_r_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_reg_769_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_reg_769_pp0_iter2_reg.read())))) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void convolution2D::thread_output_r_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_reg_769_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        output_r_we1 = ap_const_logic_1;
    } else {
        output_r_we1 = ap_const_logic_0;
    }
}

void convolution2D::thread_p_shl_cast_fu_704_p1() {
    p_shl_cast_fu_704_p1 = esl_zext<5,4>(tmp_6_fu_696_p3.read());
}

void convolution2D::thread_sum_2_0_2_2_fu_734_p2() {
    sum_2_0_2_2_fu_734_p2 = (!tmp4_reg_1103.read().is_01() || !tmp1_fu_730_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp4_reg_1103.read()) + sc_biguint<32>(tmp1_fu_730_p2.read()));
}

void convolution2D::thread_sum_2_2_2_2_fu_754_p2() {
    sum_2_2_2_2_fu_754_p2 = (!tmp18_reg_1113.read().is_01() || !tmp15_fu_750_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp18_reg_1113.read()) + sc_biguint<32>(tmp15_fu_750_p2.read()));
}

void convolution2D::thread_tmp10_fu_608_p2() {
    tmp10_fu_608_p2 = (!tmp_1_1_0_2_reg_1003.read().is_01() || !tmp_1_1_1_reg_1008.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_1_1_0_2_reg_1003.read()) + sc_biguint<32>(tmp_1_1_1_reg_1008.read()));
}

void convolution2D::thread_tmp11_fu_667_p2() {
    tmp11_fu_667_p2 = (!tmp13_fu_662_p2.read().is_01() || !tmp12_fu_654_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp13_fu_662_p2.read()) + sc_biguint<32>(tmp12_fu_654_p2.read()));
}

void convolution2D::thread_tmp12_fu_654_p2() {
    tmp12_fu_654_p2 = (!tmp_1_1_1_1_reg_968.read().is_01() || !tmp_1_1_1_2_reg_1053.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_1_1_1_1_reg_968.read()) + sc_biguint<32>(tmp_1_1_1_2_reg_1053.read()));
}

void convolution2D::thread_tmp13_fu_662_p2() {
    tmp13_fu_662_p2 = (!tmp14_fu_658_p2.read().is_01() || !tmp_1_1_2_reg_1058.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp14_fu_658_p2.read()) + sc_biguint<32>(tmp_1_1_2_reg_1058.read()));
}

void convolution2D::thread_tmp14_fu_658_p2() {
    tmp14_fu_658_p2 = (!tmp_1_1_2_1_reg_1013.read().is_01() || !tmp_1_1_2_2_reg_1063.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_1_1_2_1_reg_1013.read()) + sc_biguint<32>(tmp_1_1_2_2_reg_1063.read()));
}

void convolution2D::thread_tmp15_fu_750_p2() {
    tmp15_fu_750_p2 = (!tmp17_reg_1098.read().is_01() || !tmp16_reg_1093.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp17_reg_1098.read()) + sc_biguint<32>(tmp16_reg_1093.read()));
}

void convolution2D::thread_tmp16_fu_627_p2() {
    tmp16_fu_627_p2 = (!tmp_1_2_reg_973.read().is_01() || !tmp_1_2_0_1_reg_1023.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_1_2_reg_973.read()) + sc_biguint<32>(tmp_1_2_0_1_reg_1023.read()));
}

void convolution2D::thread_tmp17_fu_631_p2() {
    tmp17_fu_631_p2 = (!tmp_1_2_0_2_reg_978.read().is_01() || !tmp_1_2_1_reg_1028.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_1_2_0_2_reg_978.read()) + sc_biguint<32>(tmp_1_2_1_reg_1028.read()));
}

void convolution2D::thread_tmp18_fu_686_p2() {
    tmp18_fu_686_p2 = (!tmp20_fu_681_p2.read().is_01() || !tmp19_fu_673_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp20_fu_681_p2.read()) + sc_biguint<32>(tmp19_fu_673_p2.read()));
}

void convolution2D::thread_tmp19_fu_673_p2() {
    tmp19_fu_673_p2 = (!tmp_1_2_1_1_reg_1073.read().is_01() || !tmp_1_2_1_2_reg_1033.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_1_2_1_1_reg_1073.read()) + sc_biguint<32>(tmp_1_2_1_2_reg_1033.read()));
}

void convolution2D::thread_tmp1_fu_730_p2() {
    tmp1_fu_730_p2 = (!tmp3_reg_1048.read().is_01() || !tmp2_reg_998.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp3_reg_1048.read()) + sc_biguint<32>(tmp2_reg_998.read()));
}

void convolution2D::thread_tmp20_fu_681_p2() {
    tmp20_fu_681_p2 = (!tmp21_fu_677_p2.read().is_01() || !tmp_1_2_2_reg_1078.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp21_fu_677_p2.read()) + sc_biguint<32>(tmp_1_2_2_reg_1078.read()));
}

void convolution2D::thread_tmp21_fu_677_p2() {
    tmp21_fu_677_p2 = (!tmp_1_2_2_1_reg_1083.read().is_01() || !tmp_1_2_2_2_reg_1088.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_1_2_2_1_reg_1083.read()) + sc_biguint<32>(tmp_1_2_2_2_reg_1088.read()));
}

void convolution2D::thread_tmp2_fu_547_p2() {
    tmp2_fu_547_p2 = (!tmp_s_reg_868.read().is_01() || !tmp_1_0_0_1_reg_878.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_s_reg_868.read()) + sc_biguint<32>(tmp_1_0_0_1_reg_878.read()));
}

void convolution2D::thread_tmp3_fu_594_p2() {
    tmp3_fu_594_p2 = (!tmp_1_0_0_2_reg_888.read().is_01() || !tmp_1_0_1_reg_983.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_1_0_0_2_reg_888.read()) + sc_biguint<32>(tmp_1_0_1_reg_983.read()));
}

void convolution2D::thread_tmp4_fu_648_p2() {
    tmp4_fu_648_p2 = (!tmp6_fu_643_p2.read().is_01() || !tmp5_fu_635_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp6_fu_643_p2.read()) + sc_biguint<32>(tmp5_fu_635_p2.read()));
}

void convolution2D::thread_tmp5_fu_635_p2() {
    tmp5_fu_635_p2 = (!tmp_1_0_1_1_reg_988.read().is_01() || !tmp_1_0_1_2_reg_917.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_1_0_1_1_reg_988.read()) + sc_biguint<32>(tmp_1_0_1_2_reg_917.read()));
}

void convolution2D::thread_tmp6_fu_643_p2() {
    tmp6_fu_643_p2 = (!tmp7_fu_639_p2.read().is_01() || !tmp_1_0_2_reg_1038.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp7_fu_639_p2.read()) + sc_biguint<32>(tmp_1_0_2_reg_1038.read()));
}

void convolution2D::thread_tmp7_fu_639_p2() {
    tmp7_fu_639_p2 = (!tmp_1_0_2_1_reg_1043.read().is_01() || !tmp_1_0_2_2_reg_993.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_1_0_2_1_reg_1043.read()) + sc_biguint<32>(tmp_1_0_2_2_reg_993.read()));
}

void convolution2D::thread_tmp8_fu_740_p2() {
    tmp8_fu_740_p2 = (!tmp10_reg_1068.read().is_01() || !tmp9_reg_1018.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp10_reg_1068.read()) + sc_biguint<32>(tmp9_reg_1018.read()));
}

void convolution2D::thread_tmp9_fu_566_p2() {
    tmp9_fu_566_p2 = (!tmp_1_1_reg_958.read().is_01() || !tmp_1_1_0_1_reg_963.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_1_1_reg_958.read()) + sc_biguint<32>(tmp_1_1_0_1_reg_963.read()));
}

void convolution2D::thread_tmp_10_fu_420_p3() {
    tmp_10_fu_420_p3 = esl_concat<2,1>(i_1_fu_375_p2.read(), ap_const_lv1_0);
}

void convolution2D::thread_tmp_11_fu_428_p1() {
    tmp_11_fu_428_p1 = esl_zext<64,3>(tmp_10_fu_420_p3.read());
}

void convolution2D::thread_tmp_12_fu_437_p2() {
    tmp_12_fu_437_p2 = (tmp_10_reg_803.read() | ap_const_lv3_1);
}

void convolution2D::thread_tmp_13_fu_442_p3() {
    tmp_13_fu_442_p3 = esl_concat<61,3>(ap_const_lv61_0, tmp_12_fu_437_p2.read());
}

void convolution2D::thread_tmp_14_fu_462_p3() {
    tmp_14_fu_462_p3 = esl_concat<3,1>(tmp_4_0_2_fu_451_p2.read(), ap_const_lv1_0);
}

void convolution2D::thread_tmp_15_fu_470_p1() {
    tmp_15_fu_470_p1 = esl_zext<64,4>(tmp_14_fu_462_p3.read());
}

void convolution2D::thread_tmp_16_fu_493_p2() {
    tmp_16_fu_493_p2 = (tmp_14_reg_843.read() | ap_const_lv4_1);
}

void convolution2D::thread_tmp_17_fu_498_p3() {
    tmp_17_fu_498_p3 = esl_concat<60,4>(ap_const_lv60_0, tmp_16_fu_493_p2.read());
}

void convolution2D::thread_tmp_1_0_0_1_fu_481_p1() {
    tmp_1_0_0_1_fu_481_p1 = kernel_0_1.read();
}

void convolution2D::thread_tmp_1_0_0_1_fu_481_p2() {
    tmp_1_0_0_1_fu_481_p2 = (!reg_336.read().is_01() || !tmp_1_0_0_1_fu_481_p1.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_336.read()) * sc_bigint<32>(tmp_1_0_0_1_fu_481_p1.read());
}

void convolution2D::thread_tmp_1_0_0_2_fu_487_p1() {
    tmp_1_0_0_2_fu_487_p1 = kernel_0_2.read();
}

void convolution2D::thread_tmp_1_0_0_2_fu_487_p2() {
    tmp_1_0_0_2_fu_487_p2 = (!reg_340.read().is_01() || !tmp_1_0_0_2_fu_487_p1.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_340.read()) * sc_bigint<32>(tmp_1_0_0_2_fu_487_p1.read());
}

void convolution2D::thread_tmp_1_0_1_1_fu_537_p2() {
    tmp_1_0_1_1_fu_537_p2 = (!reg_336.read().is_01() || !kernel_1_1_read_reg_905.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_336.read()) * sc_bigint<32>(kernel_1_1_read_reg_905.read());
}

void convolution2D::thread_tmp_1_0_1_fu_532_p2() {
    tmp_1_0_1_fu_532_p2 = (!reg_332.read().is_01() || !kernel_1_0_read_reg_898.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_332.read()) * sc_bigint<32>(kernel_1_0_read_reg_898.read());
}

void convolution2D::thread_tmp_1_0_2_1_fu_589_p2() {
    tmp_1_0_2_1_fu_589_p2 = (!reg_336.read().is_01() || !kernel_2_1_read_reg_944.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_336.read()) * sc_bigint<32>(kernel_2_1_read_reg_944.read());
}

void convolution2D::thread_tmp_1_0_2_2_fu_542_p2() {
    tmp_1_0_2_2_fu_542_p2 = (!reg_340.read().is_01() || !kernel_2_2_read_reg_951.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_340.read()) * sc_bigint<32>(kernel_2_2_read_reg_951.read());
}

void convolution2D::thread_tmp_1_0_2_fu_584_p2() {
    tmp_1_0_2_fu_584_p2 = (!reg_332.read().is_01() || !kernel_2_0_read_reg_937.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_332.read()) * sc_bigint<32>(kernel_2_0_read_reg_937.read());
}

void convolution2D::thread_tmp_1_1_0_1_fu_514_p1() {
    tmp_1_1_0_1_fu_514_p1 = kernel_0_1.read();
}

void convolution2D::thread_tmp_1_1_0_1_fu_514_p2() {
    tmp_1_1_0_1_fu_514_p2 = (!reg_340.read().is_01() || !tmp_1_1_0_1_fu_514_p1.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_340.read()) * sc_bigint<32>(tmp_1_1_0_1_fu_514_p1.read());
}

void convolution2D::thread_tmp_1_1_0_2_fu_551_p2() {
    tmp_1_1_0_2_fu_551_p2 = (!reg_353.read().is_01() || !kernel_0_2_read_reg_883.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_353.read()) * sc_bigint<32>(kernel_0_2_read_reg_883.read());
}

void convolution2D::thread_tmp_1_1_1_fu_556_p2() {
    tmp_1_1_1_fu_556_p2 = (!reg_336.read().is_01() || !kernel_1_0_read_reg_898.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_336.read()) * sc_bigint<32>(kernel_1_0_read_reg_898.read());
}

void convolution2D::thread_tmp_1_1_2_1_fu_561_p2() {
    tmp_1_1_2_1_fu_561_p2 = (!reg_340.read().is_01() || !kernel_2_1_read_reg_944.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_340.read()) * sc_bigint<32>(kernel_2_1_read_reg_944.read());
}

void convolution2D::thread_tmp_1_1_2_2_fu_603_p2() {
    tmp_1_1_2_2_fu_603_p2 = (!reg_353.read().is_01() || !kernel_2_2_read_reg_951.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_353.read()) * sc_bigint<32>(kernel_2_2_read_reg_951.read());
}

void convolution2D::thread_tmp_1_1_2_fu_598_p2() {
    tmp_1_1_2_fu_598_p2 = (!reg_336.read().is_01() || !kernel_2_0_read_reg_937.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_336.read()) * sc_bigint<32>(kernel_2_0_read_reg_937.read());
}

void convolution2D::thread_tmp_1_1_fu_508_p1() {
    tmp_1_1_fu_508_p1 = kernel_0_0.read();
}

void convolution2D::thread_tmp_1_1_fu_508_p2() {
    tmp_1_1_fu_508_p2 = (!reg_336.read().is_01() || !tmp_1_1_fu_508_p1.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_336.read()) * sc_bigint<32>(tmp_1_1_fu_508_p1.read());
}

void convolution2D::thread_tmp_1_2_0_1_fu_570_p2() {
    tmp_1_2_0_1_fu_570_p2 = (!reg_353.read().is_01() || !kernel_0_1_read_reg_873.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_353.read()) * sc_bigint<32>(kernel_0_1_read_reg_873.read());
}

void convolution2D::thread_tmp_1_2_0_2_fu_526_p1() {
    tmp_1_2_0_2_fu_526_p1 = kernel_0_2.read();
}

void convolution2D::thread_tmp_1_2_0_2_fu_526_p2() {
    tmp_1_2_0_2_fu_526_p2 = (!reg_349.read().is_01() || !tmp_1_2_0_2_fu_526_p1.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_349.read()) * sc_bigint<32>(tmp_1_2_0_2_fu_526_p1.read());
}

void convolution2D::thread_tmp_1_2_1_2_fu_580_p2() {
    tmp_1_2_1_2_fu_580_p2 = (!input_2_load_1_reg_863.read().is_01() || !kernel_1_2_read_reg_911.read().is_01())? sc_lv<32>(): sc_bigint<32>(input_2_load_1_reg_863.read()) * sc_bigint<32>(kernel_1_2_read_reg_911.read());
}

void convolution2D::thread_tmp_1_2_1_fu_575_p2() {
    tmp_1_2_1_fu_575_p2 = (!reg_344.read().is_01() || !kernel_1_0_read_reg_898.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_344.read()) * sc_bigint<32>(kernel_1_0_read_reg_898.read());
}

void convolution2D::thread_tmp_1_2_2_1_fu_617_p2() {
    tmp_1_2_2_1_fu_617_p2 = (!reg_353.read().is_01() || !kernel_2_1_read_reg_944.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_353.read()) * sc_bigint<32>(kernel_2_1_read_reg_944.read());
}

void convolution2D::thread_tmp_1_2_2_2_fu_622_p2() {
    tmp_1_2_2_2_fu_622_p2 = (!reg_349.read().is_01() || !kernel_2_2_read_reg_951.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_349.read()) * sc_bigint<32>(kernel_2_2_read_reg_951.read());
}

void convolution2D::thread_tmp_1_2_2_fu_612_p2() {
    tmp_1_2_2_fu_612_p2 = (!reg_340.read().is_01() || !kernel_2_0_read_reg_937.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_340.read()) * sc_bigint<32>(kernel_2_0_read_reg_937.read());
}

void convolution2D::thread_tmp_1_2_fu_520_p1() {
    tmp_1_2_fu_520_p1 = kernel_0_0.read();
}

void convolution2D::thread_tmp_1_2_fu_520_p2() {
    tmp_1_2_fu_520_p2 = (!reg_340.read().is_01() || !tmp_1_2_fu_520_p1.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_340.read()) * sc_bigint<32>(tmp_1_2_fu_520_p1.read());
}

void convolution2D::thread_tmp_2_fu_386_p3() {
    tmp_2_fu_386_p3 = esl_concat<2,1>(ap_phi_mux_i_phi_fu_324_p4.read(), ap_const_lv1_0);
}

void convolution2D::thread_tmp_3_fu_394_p1() {
    tmp_3_fu_394_p1 = esl_zext<64,3>(tmp_2_fu_386_p3.read());
}

void convolution2D::thread_tmp_4_0_2_fu_451_p2() {
    tmp_4_0_2_fu_451_p2 = (!i_cast_fu_433_p1.read().is_01() || !ap_const_lv3_2.is_01())? sc_lv<3>(): (sc_biguint<3>(i_cast_fu_433_p1.read()) + sc_biguint<3>(ap_const_lv3_2));
}

void convolution2D::thread_tmp_4_fu_400_p2() {
    tmp_4_fu_400_p2 = (tmp_2_fu_386_p3.read() | ap_const_lv3_1);
}

void convolution2D::thread_tmp_5_0_1_fu_415_p1() {
    tmp_5_0_1_fu_415_p1 = esl_zext<64,2>(i_1_fu_375_p2.read());
}

void convolution2D::thread_tmp_5_0_2_fu_457_p1() {
    tmp_5_0_2_fu_457_p1 = esl_zext<64,3>(tmp_4_0_2_fu_451_p2.read());
}

void convolution2D::thread_tmp_5_fu_406_p3() {
    tmp_5_fu_406_p3 = esl_concat<61,3>(ap_const_lv61_0, tmp_4_fu_400_p2.read());
}

void convolution2D::thread_tmp_6_fu_696_p3() {
    tmp_6_fu_696_p3 = esl_concat<2,2>(i_reg_320_pp0_iter1_reg.read(), ap_const_lv2_0);
}

void convolution2D::thread_tmp_7_cast_fu_714_p1() {
    tmp_7_cast_fu_714_p1 = esl_sext<64,5>(tmp_7_fu_708_p2.read());
}

void convolution2D::thread_tmp_7_fu_708_p2() {
    tmp_7_fu_708_p2 = (!p_shl_cast_fu_704_p1.read().is_01() || !tmp_cast_fu_692_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(p_shl_cast_fu_704_p1.read()) - sc_biguint<5>(tmp_cast_fu_692_p1.read()));
}

void convolution2D::thread_tmp_8_cast_fu_725_p1() {
    tmp_8_cast_fu_725_p1 = esl_sext<64,5>(tmp_8_fu_719_p2.read());
}

void convolution2D::thread_tmp_8_fu_719_p2() {
    tmp_8_fu_719_p2 = (!tmp_7_fu_708_p2.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_bigint<5>(tmp_7_fu_708_p2.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void convolution2D::thread_tmp_9_cast_fu_764_p1() {
    tmp_9_cast_fu_764_p1 = esl_sext<64,5>(tmp_9_fu_759_p2.read());
}

void convolution2D::thread_tmp_9_fu_759_p2() {
    tmp_9_fu_759_p2 = (!tmp_7_reg_1118.read().is_01() || !ap_const_lv5_2.is_01())? sc_lv<5>(): (sc_bigint<5>(tmp_7_reg_1118.read()) + sc_biguint<5>(ap_const_lv5_2));
}

void convolution2D::thread_tmp_cast_fu_692_p1() {
    tmp_cast_fu_692_p1 = esl_zext<5,2>(i_reg_320_pp0_iter1_reg.read());
}

void convolution2D::thread_tmp_fu_381_p1() {
    tmp_fu_381_p1 = esl_zext<64,2>(ap_phi_mux_i_phi_fu_324_p4.read());
}

void convolution2D::thread_tmp_s_fu_475_p1() {
    tmp_s_fu_475_p1 = kernel_0_0.read();
}

void convolution2D::thread_tmp_s_fu_475_p2() {
    tmp_s_fu_475_p2 = (!reg_332.read().is_01() || !tmp_s_fu_475_p1.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_332.read()) * sc_bigint<32>(tmp_s_fu_475_p1.read());
}

void convolution2D::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond3_fu_369_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond3_fu_369_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 8 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<5>) ("XXXXX");
            break;
    }
}

void convolution2D::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_0_address0\" :  \"" << input_0_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_0_ce0\" :  \"" << input_0_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_0_q0\" :  \"" << input_0_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_0_address1\" :  \"" << input_0_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_0_ce1\" :  \"" << input_0_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_0_q1\" :  \"" << input_0_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_1_address0\" :  \"" << input_1_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_1_ce0\" :  \"" << input_1_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_1_q0\" :  \"" << input_1_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_1_address1\" :  \"" << input_1_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_1_ce1\" :  \"" << input_1_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_1_q1\" :  \"" << input_1_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_2_address0\" :  \"" << input_2_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_2_ce0\" :  \"" << input_2_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_2_q0\" :  \"" << input_2_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_2_address1\" :  \"" << input_2_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_2_ce1\" :  \"" << input_2_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_2_q1\" :  \"" << input_2_q1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_0_0\" :  \"" << kernel_0_0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_0_1\" :  \"" << kernel_0_1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_0_2\" :  \"" << kernel_0_2.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_1_0\" :  \"" << kernel_1_0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_1_1\" :  \"" << kernel_1_1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_1_2\" :  \"" << kernel_1_2.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_2_0\" :  \"" << kernel_2_0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_2_1\" :  \"" << kernel_2_1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_2_2\" :  \"" << kernel_2_2.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_address0\" :  \"" << output_r_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_ce0\" :  \"" << output_r_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_we0\" :  \"" << output_r_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_d0\" :  \"" << output_r_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_address1\" :  \"" << output_r_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_ce1\" :  \"" << output_r_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_we1\" :  \"" << output_r_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_d1\" :  \"" << output_r_d1.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

