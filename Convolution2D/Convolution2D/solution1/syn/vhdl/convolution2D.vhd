-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity convolution2D is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_r_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    input_r_ce0 : OUT STD_LOGIC;
    input_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_r_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    input_r_ce1 : OUT STD_LOGIC;
    input_r_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    kernel_ce0 : OUT STD_LOGIC;
    kernel_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    kernel_ce1 : OUT STD_LOGIC;
    kernel_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_r_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_r_ce0 : OUT STD_LOGIC;
    output_r_we0 : OUT STD_LOGIC;
    output_r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of convolution2D is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "convolution2D,hls_ip_2018_3,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.742000,HLS_SYN_LAT=29,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=42,HLS_SYN_FF=1199,HLS_SYN_LUT=1571,HLS_VERSION=2018_3}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv6_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal i_reg_313 : STD_LOGIC_VECTOR (1 downto 0);
    signal reg_324 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal exitcond3_reg_875 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state12_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state5_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state13_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state6_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state7_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state9_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal reg_328 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_332 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state8_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal reg_337 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_342 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_346_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_395 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_352_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_399 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_357_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_403 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_363_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_407 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_368_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_411 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_374_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_415 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_379_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_419 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond3_reg_875_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_385_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_423 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_390_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_427 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_431_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_443 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_447_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_453 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond3_fu_457_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_463_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_1_reg_879 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_3_fu_489_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_3_reg_886 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_9_fu_511_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_9_reg_903 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_9_reg_903_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_4_0_2_fu_517_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_4_0_2_reg_910 : STD_LOGIC_VECTOR (2 downto 0);
    signal kernel_load_1_reg_921 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_547_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_12_reg_927 : STD_LOGIC_VECTOR (4 downto 0);
    signal kernel_load_2_reg_940 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_load_5_reg_956 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_fu_592_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_18_reg_961 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_1_0_1_fu_614_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_0_1_reg_978 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_0_1_1_reg_988 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_load_6_reg_998 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_load_7_reg_1004 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp9_fu_639_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp9_reg_1010 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp5_fu_664_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp5_reg_1025 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_2_fu_669_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_2_reg_1030 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_0_2_2_reg_1045 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_0_2_fu_694_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_0_2_reg_1050 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_2_1_fu_699_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_2_1_reg_1055 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_2_0_2_2_fu_730_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_2_0_2_2_reg_1065 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_2_2_fu_736_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_2_2_reg_1070 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp8_fu_747_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp8_reg_1075 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_1_1_reg_1080 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_2_1_2_2_fu_777_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_2_1_2_2_reg_1085 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp17_fu_792_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp17_reg_1090 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_2_2_2_2_fu_814_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_2_2_2_2_reg_1095 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_phi_mux_i_phi_fu_317_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_3_cast_fu_495_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_4_cast_fu_506_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_cast_fu_528_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal tmp_14_cast_fu_553_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_cast_fu_563_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal tmp_16_cast_fu_573_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_cast_fu_598_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal tmp_21_cast_fu_609_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_cast_fu_624_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal tmp_22_cast_fu_634_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_cast_fu_649_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal tmp_23_cast_fu_659_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_cast_fu_679_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal tmp_18_cast_fu_689_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_24_cast_fu_709_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal tmp_9_cast_fu_752_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_10_cast_fu_787_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_cast_fu_825_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_437_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_477_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_cast_fu_473_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl3_cast_fu_485_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_4_fu_500_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_cast_fu_469_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_5_fu_523_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_11_fu_536_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_5_0_1_cast_fu_533_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl1_cast_fu_543_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_13_fu_558_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_14_fu_568_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_17_fu_581_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_5_0_2_cast_fu_578_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_shl_cast_fu_588_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_19_fu_603_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_6_fu_619_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_20_fu_629_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_15_fu_644_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_21_fu_654_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_fu_674_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_16_fu_684_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_22_fu_704_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp7_fu_714_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp6_fu_719_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp4_fu_725_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_742_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp12_fu_762_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp10_fu_756_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp13_fu_766_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp11_fu_771_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_782_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp19_fu_797_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp20_fu_803_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp18_fu_809_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_820_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_313_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_reg_875 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                i_reg_313 <= i_1_reg_879;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_reg_313 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    reg_332_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_reg_875 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001))) then 
                reg_332 <= input_r_q0;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (exitcond3_reg_875 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (exitcond3_reg_875 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((exitcond3_reg_875 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((exitcond3_reg_875 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((exitcond3_reg_875 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
                reg_332 <= input_r_q1;
            end if; 
        end if;
    end process;

    reg_337_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_reg_875 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001))) then 
                    reg_337 <= kernel_q0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    reg_337 <= kernel_q1;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond3_reg_875 <= exitcond3_fu_457_p2;
                exitcond3_reg_875_pp0_iter1_reg <= exitcond3_reg_875;
                tmp_9_reg_903_pp0_iter1_reg <= tmp_9_reg_903;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                i_1_reg_879 <= i_1_fu_463_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_reg_875 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                kernel_load_1_reg_921 <= kernel_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (exitcond3_reg_875 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                kernel_load_2_reg_940 <= kernel_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (exitcond3_reg_875 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                kernel_load_5_reg_956 <= kernel_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_reg_875 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                kernel_load_6_reg_998 <= kernel_q0;
                kernel_load_7_reg_1004 <= kernel_q1;
                tmp_1_0_1_1_reg_988 <= grp_fu_346_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((exitcond3_reg_875 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (exitcond3_reg_875 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (exitcond3_reg_875 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((exitcond3_reg_875 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((exitcond3_reg_875 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((exitcond3_reg_875 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((exitcond3_reg_875 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_324 <= input_r_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (exitcond3_reg_875 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((exitcond3_reg_875 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_328 <= kernel_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((exitcond3_reg_875 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((exitcond3_reg_875 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)))) then
                reg_342 <= input_r_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (exitcond3_reg_875 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (exitcond3_reg_875 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                reg_395 <= grp_fu_346_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (exitcond3_reg_875 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((exitcond3_reg_875 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)))) then
                reg_399 <= grp_fu_352_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (exitcond3_reg_875 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((exitcond3_reg_875 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)))) then
                reg_403 <= grp_fu_357_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((exitcond3_reg_875 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (exitcond3_reg_875 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                reg_407 <= grp_fu_363_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (exitcond3_reg_875 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((exitcond3_reg_875 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)))) then
                reg_411 <= grp_fu_368_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((exitcond3_reg_875 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((exitcond3_reg_875 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((exitcond3_reg_875 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)))) then
                reg_415 <= grp_fu_374_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((exitcond3_reg_875 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((exitcond3_reg_875_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then
                reg_419 <= grp_fu_379_p2;
                reg_453 <= grp_fu_447_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((exitcond3_reg_875 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((exitcond3_reg_875 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)))) then
                reg_423 <= grp_fu_385_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((exitcond3_reg_875 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((exitcond3_reg_875 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)))) then
                reg_427 <= grp_fu_390_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (exitcond3_reg_875 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((exitcond3_reg_875 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)))) then
                reg_443 <= grp_fu_431_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_reg_875 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then
                sum_2_0_2_2_reg_1065 <= sum_2_0_2_2_fu_730_p2;
                tmp8_reg_1075 <= tmp8_fu_747_p2;
                tmp_1_1_2_2_reg_1070 <= tmp_1_1_2_2_fu_736_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_reg_875 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                sum_2_1_2_2_reg_1085 <= sum_2_1_2_2_fu_777_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (exitcond3_reg_875_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                sum_2_2_2_2_reg_1095 <= sum_2_2_2_2_fu_814_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_reg_875_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp17_reg_1090 <= tmp17_fu_792_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_reg_875 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001))) then
                tmp5_reg_1025 <= tmp5_fu_664_p2;
                tmp_1_1_2_reg_1030 <= tmp_1_1_2_fu_669_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_reg_875 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                tmp9_reg_1010 <= tmp9_fu_639_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_reg_875 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_12_reg_927 <= tmp_12_fu_547_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (exitcond3_reg_875 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                tmp_18_reg_961 <= tmp_18_fu_592_p2;
                tmp_1_1_0_1_reg_978 <= tmp_1_1_0_1_fu_614_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_reg_875 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001))) then
                tmp_1_0_2_2_reg_1045 <= grp_fu_379_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_reg_875 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001))) then
                tmp_1_1_0_2_reg_1050 <= tmp_1_1_0_2_fu_694_p2;
                tmp_1_1_2_1_reg_1055 <= tmp_1_1_2_1_fu_699_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_reg_875 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then
                tmp_1_2_1_1_reg_1080 <= grp_fu_357_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_fu_457_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_3_reg_886 <= tmp_3_fu_489_p2;
                tmp_4_0_2_reg_910 <= tmp_4_0_2_fu_517_p2;
                tmp_9_reg_903 <= tmp_9_fu_511_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter1, exitcond3_fu_457_p2, ap_block_pp0_stage0_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (exitcond3_fu_457_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (exitcond3_fu_457_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((not(((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(8);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state14 <= ap_CS_fsm(9);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond3_fu_457_p2)
    begin
        if ((exitcond3_fu_457_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_phi_fu_317_p4_assign_proc : process(i_reg_313, exitcond3_reg_875, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, i_1_reg_879, ap_block_pp0_stage0)
    begin
        if (((exitcond3_reg_875 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_i_phi_fu_317_p4 <= i_1_reg_879;
        else 
            ap_phi_mux_i_phi_fu_317_p4 <= i_reg_313;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    exitcond3_fu_457_p2 <= "1" when (ap_phi_mux_i_phi_fu_317_p4 = ap_const_lv2_3) else "0";
    grp_fu_346_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(reg_328) * signed(reg_324))), 32));
    grp_fu_352_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(kernel_load_1_reg_921) * signed(reg_332))), 32));
    grp_fu_357_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(reg_328) * signed(reg_332))), 32));
    grp_fu_363_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(kernel_load_2_reg_940) * signed(reg_324))), 32));
    grp_fu_368_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(reg_337) * signed(reg_332))), 32));
    grp_fu_374_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(kernel_load_5_reg_956) * signed(reg_332))), 32));
    grp_fu_379_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(reg_337) * signed(reg_324))), 32));
    grp_fu_385_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(kernel_load_6_reg_998) * signed(reg_324))), 32));
    grp_fu_390_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(kernel_load_7_reg_1004) * signed(reg_342))), 32));
    grp_fu_431_p2 <= std_logic_vector(unsigned(reg_399) + unsigned(reg_395));
    grp_fu_437_p2 <= std_logic_vector(unsigned(reg_411) + unsigned(reg_407));
    grp_fu_447_p2 <= std_logic_vector(unsigned(reg_443) + unsigned(grp_fu_437_p2));
    i_1_fu_463_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_phi_fu_317_p4) + unsigned(ap_const_lv2_1));
    i_cast_fu_469_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_i_phi_fu_317_p4),3));

    input_r_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage0, tmp_3_cast_fu_495_p1, tmp_5_cast_fu_528_p1, ap_block_pp0_stage1, tmp_15_cast_fu_563_p1, ap_block_pp0_stage2, tmp_20_cast_fu_598_p1, ap_block_pp0_stage3, ap_block_pp0_stage4, tmp_22_cast_fu_634_p1, tmp_17_cast_fu_649_p1, ap_block_pp0_stage5, tmp_7_cast_fu_679_p1, ap_block_pp0_stage6, tmp_24_cast_fu_709_p1, ap_block_pp0_stage7)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                input_r_address0 <= tmp_24_cast_fu_709_p1(5 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                input_r_address0 <= tmp_7_cast_fu_679_p1(5 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                input_r_address0 <= tmp_17_cast_fu_649_p1(5 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                input_r_address0 <= tmp_22_cast_fu_634_p1(5 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                input_r_address0 <= tmp_20_cast_fu_598_p1(5 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                input_r_address0 <= tmp_15_cast_fu_563_p1(5 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                input_r_address0 <= tmp_5_cast_fu_528_p1(5 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                input_r_address0 <= tmp_3_cast_fu_495_p1(5 - 1 downto 0);
            else 
                input_r_address0 <= "XXXXX";
            end if;
        else 
            input_r_address0 <= "XXXXX";
        end if; 
    end process;


    input_r_address1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage0, tmp_4_cast_fu_506_p1, ap_block_pp0_stage1, tmp_14_cast_fu_553_p1, ap_block_pp0_stage2, tmp_16_cast_fu_573_p1, ap_block_pp0_stage3, tmp_21_cast_fu_609_p1, tmp_6_cast_fu_624_p1, ap_block_pp0_stage4, ap_block_pp0_stage5, tmp_23_cast_fu_659_p1, ap_block_pp0_stage6, tmp_18_cast_fu_689_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                input_r_address1 <= tmp_18_cast_fu_689_p1(5 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                input_r_address1 <= tmp_23_cast_fu_659_p1(5 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                input_r_address1 <= tmp_6_cast_fu_624_p1(5 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                input_r_address1 <= tmp_21_cast_fu_609_p1(5 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                input_r_address1 <= tmp_16_cast_fu_573_p1(5 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                input_r_address1 <= tmp_14_cast_fu_553_p1(5 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                input_r_address1 <= tmp_4_cast_fu_506_p1(5 - 1 downto 0);
            else 
                input_r_address1 <= "XXXXX";
            end if;
        else 
            input_r_address1 <= "XXXXX";
        end if; 
    end process;


    input_r_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            input_r_ce0 <= ap_const_logic_1;
        else 
            input_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_r_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            input_r_ce1 <= ap_const_logic_1;
        else 
            input_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    kernel_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                kernel_address0 <= ap_const_lv64_8(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                kernel_address0 <= ap_const_lv64_6(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                kernel_address0 <= ap_const_lv64_4(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                kernel_address0 <= ap_const_lv64_2(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                kernel_address0 <= ap_const_lv64_0(4 - 1 downto 0);
            else 
                kernel_address0 <= "XXXX";
            end if;
        else 
            kernel_address0 <= "XXXX";
        end if; 
    end process;


    kernel_address1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                kernel_address1 <= ap_const_lv64_7(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                kernel_address1 <= ap_const_lv64_5(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                kernel_address1 <= ap_const_lv64_3(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                kernel_address1 <= ap_const_lv64_1(4 - 1 downto 0);
            else 
                kernel_address1 <= "XXXX";
            end if;
        else 
            kernel_address1 <= "XXXX";
        end if; 
    end process;


    kernel_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            kernel_ce0 <= ap_const_logic_1;
        else 
            kernel_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kernel_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            kernel_ce1 <= ap_const_logic_1;
        else 
            kernel_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_r_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage3, tmp_9_cast_fu_752_p1, tmp_10_cast_fu_787_p1, tmp_12_cast_fu_825_p1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                output_r_address0 <= tmp_12_cast_fu_825_p1(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                output_r_address0 <= tmp_10_cast_fu_787_p1(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                output_r_address0 <= tmp_9_cast_fu_752_p1(4 - 1 downto 0);
            else 
                output_r_address0 <= "XXXX";
            end if;
        else 
            output_r_address0 <= "XXXX";
        end if; 
    end process;


    output_r_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            output_r_ce0 <= ap_const_logic_1;
        else 
            output_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_r_d0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, sum_2_0_2_2_reg_1065, sum_2_1_2_2_reg_1085, sum_2_2_2_2_reg_1095, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                output_r_d0 <= sum_2_2_2_2_reg_1095;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                output_r_d0 <= sum_2_1_2_2_reg_1085;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                output_r_d0 <= sum_2_0_2_2_reg_1065;
            else 
                output_r_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            output_r_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_r_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, exitcond3_reg_875, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, exitcond3_reg_875_pp0_iter1_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (exitcond3_reg_875_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((exitcond3_reg_875 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((exitcond3_reg_875_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            output_r_we0 <= ap_const_logic_1;
        else 
            output_r_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_shl1_cast_fu_543_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_fu_536_p3),5));
    p_shl3_cast_fu_485_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_477_p3),5));
    p_shl_cast_fu_588_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_17_fu_581_p3),6));
    sum_2_0_2_2_fu_730_p2 <= std_logic_vector(unsigned(reg_453) + unsigned(tmp4_fu_725_p2));
    sum_2_1_2_2_fu_777_p2 <= std_logic_vector(unsigned(tmp8_reg_1075) + unsigned(tmp11_fu_771_p2));
    sum_2_2_2_2_fu_814_p2 <= std_logic_vector(unsigned(reg_453) + unsigned(tmp18_fu_809_p2));
    tmp10_fu_756_p2 <= std_logic_vector(unsigned(reg_415) + unsigned(reg_403));
    tmp11_fu_771_p2 <= std_logic_vector(unsigned(tmp10_fu_756_p2) + unsigned(tmp13_fu_766_p2));
    tmp12_fu_762_p2 <= std_logic_vector(unsigned(tmp_1_1_2_2_reg_1070) + unsigned(tmp_1_1_2_1_reg_1055));
    tmp13_fu_766_p2 <= std_logic_vector(unsigned(tmp_1_1_2_reg_1030) + unsigned(tmp12_fu_762_p2));
    tmp17_fu_792_p2 <= std_logic_vector(unsigned(reg_415) + unsigned(tmp_1_2_1_1_reg_1080));
    tmp18_fu_809_p2 <= std_logic_vector(unsigned(tmp17_reg_1090) + unsigned(tmp20_fu_803_p2));
    tmp19_fu_797_p2 <= std_logic_vector(unsigned(reg_419) + unsigned(reg_427));
    tmp20_fu_803_p2 <= std_logic_vector(unsigned(reg_423) + unsigned(tmp19_fu_797_p2));
    tmp4_fu_725_p2 <= std_logic_vector(unsigned(tmp5_reg_1025) + unsigned(tmp6_fu_719_p2));
    tmp5_fu_664_p2 <= std_logic_vector(unsigned(reg_415) + unsigned(tmp_1_0_1_1_reg_988));
    tmp6_fu_719_p2 <= std_logic_vector(unsigned(reg_423) + unsigned(tmp7_fu_714_p2));
    tmp7_fu_714_p2 <= std_logic_vector(unsigned(tmp_1_0_2_2_reg_1045) + unsigned(reg_427));
    tmp8_fu_747_p2 <= std_logic_vector(unsigned(tmp9_reg_1010) + unsigned(tmp_fu_742_p2));
    tmp9_fu_639_p2 <= std_logic_vector(unsigned(tmp_1_1_0_1_reg_978) + unsigned(reg_403));
        tmp_10_cast_fu_787_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_8_fu_782_p2),64));

    tmp_10_fu_820_p2 <= std_logic_vector(signed(tmp_9_reg_903_pp0_iter1_reg) + signed(ap_const_lv5_2));
    tmp_11_fu_536_p3 <= (i_1_reg_879 & ap_const_lv2_0);
        tmp_12_cast_fu_825_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_10_fu_820_p2),64));

    tmp_12_fu_547_p2 <= std_logic_vector(unsigned(tmp_5_0_1_cast_fu_533_p1) + unsigned(p_shl1_cast_fu_543_p1));
    tmp_13_fu_558_p2 <= std_logic_vector(unsigned(tmp_12_reg_927) + unsigned(ap_const_lv5_1));
    tmp_14_cast_fu_553_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_fu_547_p2),64));
    tmp_14_fu_568_p2 <= std_logic_vector(unsigned(tmp_12_reg_927) + unsigned(ap_const_lv5_2));
    tmp_15_cast_fu_563_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_fu_558_p2),64));
    tmp_15_fu_644_p2 <= std_logic_vector(unsigned(tmp_12_reg_927) + unsigned(ap_const_lv5_3));
    tmp_16_cast_fu_573_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_fu_568_p2),64));
    tmp_16_fu_684_p2 <= std_logic_vector(unsigned(tmp_12_reg_927) + unsigned(ap_const_lv5_4));
    tmp_17_cast_fu_649_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_15_fu_644_p2),64));
    tmp_17_fu_581_p3 <= (tmp_4_0_2_reg_910 & ap_const_lv2_0);
    tmp_18_cast_fu_689_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_16_fu_684_p2),64));
    tmp_18_fu_592_p2 <= std_logic_vector(unsigned(tmp_5_0_2_cast_fu_578_p1) + unsigned(p_shl_cast_fu_588_p1));
    tmp_19_fu_603_p2 <= std_logic_vector(unsigned(tmp_18_fu_592_p2) + unsigned(ap_const_lv6_1));
    tmp_1_1_0_1_fu_614_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(kernel_load_1_reg_921) * signed(reg_324))), 32));
    tmp_1_1_0_2_fu_694_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(kernel_load_2_reg_940) * signed(reg_332))), 32));
    tmp_1_1_2_1_fu_699_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(kernel_load_7_reg_1004) * signed(reg_324))), 32));
    tmp_1_1_2_2_fu_736_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(reg_337) * signed(reg_342))), 32));
    tmp_1_1_2_fu_669_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(kernel_load_6_reg_998) * signed(reg_342))), 32));
    tmp_20_cast_fu_598_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_18_fu_592_p2),64));
    tmp_20_fu_629_p2 <= std_logic_vector(unsigned(tmp_18_reg_961) + unsigned(ap_const_lv6_2));
    tmp_21_cast_fu_609_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_19_fu_603_p2),64));
    tmp_21_fu_654_p2 <= std_logic_vector(unsigned(tmp_18_reg_961) + unsigned(ap_const_lv6_3));
        tmp_22_cast_fu_634_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_20_fu_629_p2),64));

    tmp_22_fu_704_p2 <= std_logic_vector(unsigned(tmp_18_reg_961) + unsigned(ap_const_lv6_4));
        tmp_23_cast_fu_659_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_21_fu_654_p2),64));

        tmp_24_cast_fu_709_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_22_fu_704_p2),64));

    tmp_2_fu_477_p3 <= (ap_phi_mux_i_phi_fu_317_p4 & ap_const_lv2_0);
    tmp_3_cast_fu_495_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_489_p2),64));
    tmp_3_fu_489_p2 <= std_logic_vector(unsigned(tmp_cast_fu_473_p1) + unsigned(p_shl3_cast_fu_485_p1));
    tmp_4_0_2_fu_517_p2 <= std_logic_vector(unsigned(i_cast_fu_469_p1) + unsigned(ap_const_lv3_2));
    tmp_4_cast_fu_506_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_500_p2),64));
    tmp_4_fu_500_p2 <= std_logic_vector(unsigned(tmp_3_fu_489_p2) + unsigned(ap_const_lv5_1));
    tmp_5_0_1_cast_fu_533_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_reg_879),5));
    tmp_5_0_2_cast_fu_578_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_0_2_reg_910),6));
    tmp_5_cast_fu_528_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_523_p2),64));
    tmp_5_fu_523_p2 <= std_logic_vector(unsigned(tmp_3_reg_886) + unsigned(ap_const_lv5_2));
    tmp_6_cast_fu_624_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_619_p2),64));
    tmp_6_fu_619_p2 <= std_logic_vector(unsigned(tmp_3_reg_886) + unsigned(ap_const_lv5_3));
    tmp_7_cast_fu_679_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_674_p2),64));
    tmp_7_fu_674_p2 <= std_logic_vector(unsigned(tmp_3_reg_886) + unsigned(ap_const_lv5_4));
    tmp_8_fu_782_p2 <= std_logic_vector(signed(tmp_9_reg_903_pp0_iter1_reg) + signed(ap_const_lv5_1));
        tmp_9_cast_fu_752_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_9_reg_903),64));

    tmp_9_fu_511_p2 <= std_logic_vector(unsigned(p_shl3_cast_fu_485_p1) - unsigned(tmp_cast_fu_473_p1));
    tmp_cast_fu_473_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_i_phi_fu_317_p4),5));
    tmp_fu_742_p2 <= std_logic_vector(unsigned(reg_419) + unsigned(tmp_1_1_0_2_reg_1050));
end behav;
