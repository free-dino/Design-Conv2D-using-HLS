-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity convolution2D is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    input_0_ce0 : OUT STD_LOGIC;
    input_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_0_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    input_0_ce1 : OUT STD_LOGIC;
    input_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    input_1_ce0 : OUT STD_LOGIC;
    input_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_1_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    input_1_ce1 : OUT STD_LOGIC;
    input_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    input_2_ce0 : OUT STD_LOGIC;
    input_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_2_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    input_2_ce1 : OUT STD_LOGIC;
    input_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_0_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_0_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_1_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_1_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_2_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_2_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    output_r_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_r_ce0 : OUT STD_LOGIC;
    output_r_we0 : OUT STD_LOGIC;
    output_r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_r_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_r_ce1 : OUT STD_LOGIC;
    output_r_we1 : OUT STD_LOGIC;
    output_r_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of convolution2D is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "convolution2D,hls_ip_2018_3,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.742000,HLS_SYN_LAT=15,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=75,HLS_SYN_FF=1762,HLS_SYN_LUT=1661,HLS_VERSION=2018_3}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv61_0 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv60_0 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal i_reg_320 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_reg_320_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal reg_332 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state9_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal exitcond3_reg_769 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal reg_336 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_340 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_344 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_349 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_353 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond3_fu_369_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond3_reg_769_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond3_reg_769_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_375_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_1_reg_773 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_5_fu_406_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_reg_783 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_10_fu_420_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_10_reg_803 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_11_fu_428_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_reg_808 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_fu_442_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_reg_833 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_14_fu_462_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_14_reg_843 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_15_fu_470_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_reg_848 : STD_LOGIC_VECTOR (63 downto 0);
    signal input_2_load_1_reg_863 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_475_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_868 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_0_1_read_reg_873 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_0_0_1_fu_481_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_0_0_1_reg_878 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_0_2_read_reg_883 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_0_0_2_fu_487_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_0_0_2_reg_888 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_1_0_read_reg_898 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_1_1_read_reg_905 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_1_2_read_reg_911 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_357_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_0_1_2_reg_917 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_2_0_read_reg_937 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_2_1_read_reg_944 : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_2_2_read_reg_951 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_fu_508_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_reg_958 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_0_1_fu_514_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_0_1_reg_963 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_363_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_1_1_reg_968 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_fu_520_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_reg_973 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_0_2_fu_526_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_0_2_reg_978 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_0_1_fu_532_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_0_1_reg_983 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_0_1_1_fu_537_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_0_1_1_reg_988 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_0_2_2_fu_542_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_0_2_2_reg_993 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_fu_547_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_reg_998 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_0_2_fu_551_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_0_2_reg_1003 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_1_fu_556_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_1_reg_1008 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_2_1_fu_561_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_2_1_reg_1013 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp9_fu_566_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp9_reg_1018 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_0_1_fu_570_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_0_1_reg_1023 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_1_fu_575_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_1_reg_1028 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_1_2_fu_580_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_1_2_reg_1033 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_0_2_fu_584_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_0_2_reg_1038 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_0_2_1_fu_589_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_0_2_1_reg_1043 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp3_fu_594_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp3_reg_1048 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_1_2_reg_1053 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_2_fu_598_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_2_reg_1058 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_2_2_fu_603_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_2_2_reg_1063 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp10_fu_608_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp10_reg_1068 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_1_1_reg_1073 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_2_fu_612_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_2_reg_1078 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_2_1_fu_617_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_2_1_reg_1083 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_2_2_fu_622_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_2_2_reg_1088 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp16_fu_627_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp16_reg_1093 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp17_fu_631_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp17_reg_1098 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp4_fu_648_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp4_reg_1103 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp11_fu_667_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp11_reg_1108 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp18_fu_686_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp18_reg_1113 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_708_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_7_reg_1118 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_2_2_2_2_fu_754_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_2_2_2_2_reg_1123 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_phi_mux_i_phi_fu_324_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_3_fu_394_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_381_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_0_1_fu_415_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal tmp_5_0_2_fu_457_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal tmp_17_fu_498_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_cast_fu_714_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_cast_fu_725_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_cast_fu_764_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum_2_0_2_2_fu_734_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_357_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_363_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_386_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_4_fu_400_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_12_fu_437_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_cast_fu_433_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_4_0_2_fu_451_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_s_fu_475_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_0_0_1_fu_481_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_0_0_2_fu_487_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_fu_493_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_1_1_fu_508_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_0_1_fu_514_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_fu_520_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_0_2_fu_526_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp7_fu_639_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp6_fu_643_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp5_fu_635_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp14_fu_658_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp13_fu_662_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp12_fu_654_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp21_fu_677_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp20_fu_681_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp19_fu_673_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_696_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl_cast_fu_704_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_cast_fu_692_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_8_fu_719_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp1_fu_730_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp8_fu_740_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp15_fu_750_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_759_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_103 : BOOLEAN;
    signal ap_condition_125 : BOOLEAN;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_320_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond3_reg_769 = ap_const_lv1_0))) then 
                i_reg_320 <= i_1_reg_773;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_reg_320 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    reg_344_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((exitcond3_reg_769 = ap_const_lv1_0)) then
                if ((ap_const_boolean_1 = ap_condition_125)) then 
                    reg_344 <= input_1_q0;
                elsif ((ap_const_boolean_1 = ap_condition_103)) then 
                    reg_344 <= input_1_q1;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond3_reg_769 <= exitcond3_fu_369_p2;
                exitcond3_reg_769_pp0_iter1_reg <= exitcond3_reg_769;
                exitcond3_reg_769_pp0_iter2_reg <= exitcond3_reg_769_pp0_iter1_reg;
                i_reg_320_pp0_iter1_reg <= i_reg_320;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                i_1_reg_773 <= i_1_fu_375_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond3_reg_769 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                input_2_load_1_reg_863 <= input_2_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (exitcond3_reg_769 = ap_const_lv1_0))) then
                kernel_0_1_read_reg_873 <= kernel_0_1;
                kernel_0_2_read_reg_883 <= kernel_0_2;
                kernel_1_0_read_reg_898 <= kernel_1_0;
                kernel_1_1_read_reg_905 <= kernel_1_1;
                kernel_1_2_read_reg_911 <= kernel_1_2;
                kernel_2_0_read_reg_937 <= kernel_2_0;
                kernel_2_1_read_reg_944 <= kernel_2_1;
                kernel_2_2_read_reg_951 <= kernel_2_2;
                tmp_1_0_0_1_reg_878 <= tmp_1_0_0_1_fu_481_p2;
                tmp_1_0_0_2_reg_888 <= tmp_1_0_0_2_fu_487_p2;
                tmp_1_1_0_1_reg_963 <= tmp_1_1_0_1_fu_514_p2;
                tmp_1_1_reg_958 <= tmp_1_1_fu_508_p2;
                tmp_1_2_0_2_reg_978 <= tmp_1_2_0_2_fu_526_p2;
                tmp_1_2_reg_973 <= tmp_1_2_fu_520_p2;
                tmp_s_reg_868 <= tmp_s_fu_475_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (exitcond3_reg_769 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond3_reg_769 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond3_reg_769 = ap_const_lv1_0)))) then
                reg_332 <= input_0_q0;
                reg_336 <= input_0_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (exitcond3_reg_769 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond3_reg_769 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then
                reg_340 <= input_1_q0;
                reg_349 <= input_2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (exitcond3_reg_769 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond3_reg_769 = ap_const_lv1_0)))) then
                reg_353 <= input_1_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond3_reg_769_pp0_iter1_reg = ap_const_lv1_0))) then
                sum_2_2_2_2_reg_1123 <= sum_2_2_2_2_fu_754_p2;
                tmp_7_reg_1118 <= tmp_7_fu_708_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond3_reg_769_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                tmp10_reg_1068 <= tmp10_fu_608_p2;
                tmp16_reg_1093 <= tmp16_fu_627_p2;
                tmp17_reg_1098 <= tmp17_fu_631_p2;
                tmp3_reg_1048 <= tmp3_fu_594_p2;
                tmp_1_0_2_1_reg_1043 <= tmp_1_0_2_1_fu_589_p2;
                tmp_1_0_2_reg_1038 <= tmp_1_0_2_fu_584_p2;
                tmp_1_1_2_2_reg_1063 <= tmp_1_1_2_2_fu_603_p2;
                tmp_1_1_2_reg_1058 <= tmp_1_1_2_fu_598_p2;
                tmp_1_2_2_1_reg_1083 <= tmp_1_2_2_1_fu_617_p2;
                tmp_1_2_2_2_reg_1088 <= tmp_1_2_2_2_fu_622_p2;
                tmp_1_2_2_reg_1078 <= tmp_1_2_2_fu_612_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (exitcond3_reg_769_pp0_iter1_reg = ap_const_lv1_0))) then
                tmp11_reg_1108 <= tmp11_fu_667_p2;
                tmp18_reg_1113 <= tmp18_fu_686_p2;
                tmp4_reg_1103 <= tmp4_fu_648_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond3_reg_769 = ap_const_lv1_0))) then
                tmp2_reg_998 <= tmp2_fu_547_p2;
                tmp9_reg_1018 <= tmp9_fu_566_p2;
                tmp_1_0_1_1_reg_988 <= tmp_1_0_1_1_fu_537_p2;
                tmp_1_0_1_reg_983 <= tmp_1_0_1_fu_532_p2;
                tmp_1_0_2_2_reg_993 <= tmp_1_0_2_2_fu_542_p2;
                tmp_1_1_0_2_reg_1003 <= tmp_1_1_0_2_fu_551_p2;
                tmp_1_1_1_reg_1008 <= tmp_1_1_1_fu_556_p2;
                tmp_1_1_2_1_reg_1013 <= tmp_1_1_2_1_fu_561_p2;
                tmp_1_2_0_1_reg_1023 <= tmp_1_2_0_1_fu_570_p2;
                tmp_1_2_1_2_reg_1033 <= tmp_1_2_1_2_fu_580_p2;
                tmp_1_2_1_reg_1028 <= tmp_1_2_1_fu_575_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond3_fu_369_p2 = ap_const_lv1_0))) then
                    tmp_10_reg_803(2 downto 1) <= tmp_10_fu_420_p3(2 downto 1);
                    tmp_11_reg_808(2 downto 1) <= tmp_11_fu_428_p1(2 downto 1);
                    tmp_5_reg_783(2 downto 1) <= tmp_5_fu_406_p3(2 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond3_reg_769 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                    tmp_13_reg_833(2 downto 1) <= tmp_13_fu_442_p3(2 downto 1);
                    tmp_14_reg_843(3 downto 1) <= tmp_14_fu_462_p3(3 downto 1);
                    tmp_15_reg_848(3 downto 1) <= tmp_15_fu_470_p1(3 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (exitcond3_reg_769 = ap_const_lv1_0))) then
                tmp_1_0_1_2_reg_917 <= grp_fu_357_p2;
                tmp_1_1_1_1_reg_968 <= grp_fu_363_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond3_reg_769_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                tmp_1_1_1_2_reg_1053 <= grp_fu_357_p2;
                tmp_1_2_1_1_reg_1073 <= grp_fu_363_p2;
            end if;
        end if;
    end process;
    tmp_5_reg_783(0) <= '1';
    tmp_5_reg_783(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    tmp_10_reg_803(0) <= '0';
    tmp_11_reg_808(0) <= '0';
    tmp_11_reg_808(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    tmp_13_reg_833(0) <= '1';
    tmp_13_reg_833(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    tmp_14_reg_843(0) <= '0';
    tmp_15_reg_848(0) <= '0';
    tmp_15_reg_848(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, exitcond3_fu_369_p2, ap_block_pp0_stage0_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage1_subdone, ap_enable_reg_pp0_iter2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond3_fu_369_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond3_fu_369_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_103_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001)
    begin
                ap_condition_103 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001));
    end process;


    ap_condition_125_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_125 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond3_fu_369_p2)
    begin
        if ((exitcond3_fu_369_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_phi_fu_324_p4_assign_proc : process(i_reg_320, ap_CS_fsm_pp0_stage0, exitcond3_reg_769, ap_enable_reg_pp0_iter1, i_1_reg_773, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond3_reg_769 = ap_const_lv1_0))) then 
            ap_phi_mux_i_phi_fu_324_p4 <= i_1_reg_773;
        else 
            ap_phi_mux_i_phi_fu_324_p4 <= i_reg_320;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    exitcond3_fu_369_p2 <= "1" when (ap_phi_mux_i_phi_fu_324_p4 = ap_const_lv2_3) else "0";

    grp_fu_357_p1_assign_proc : process(kernel_1_2, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter1, kernel_1_2_read_reg_911, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_357_p1 <= kernel_1_2_read_reg_911;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_357_p1 <= kernel_1_2;
        else 
            grp_fu_357_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_357_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(reg_344) * signed(grp_fu_357_p1))), 32));

    grp_fu_363_p1_assign_proc : process(kernel_1_1, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter1, kernel_1_1_read_reg_905, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            grp_fu_363_p1 <= kernel_1_1_read_reg_905;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_363_p1 <= kernel_1_1;
        else 
            grp_fu_363_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_363_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(reg_344) * signed(grp_fu_363_p1))), 32));
    i_1_fu_375_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_phi_fu_324_p4) + unsigned(ap_const_lv2_1));
    i_cast_fu_433_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_320),3));

    input_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, tmp_11_reg_808, tmp_15_reg_848, ap_block_pp0_stage0, tmp_3_fu_394_p1, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                input_0_address0 <= tmp_15_reg_848(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                input_0_address0 <= tmp_11_reg_808(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                input_0_address0 <= tmp_3_fu_394_p1(4 - 1 downto 0);
            else 
                input_0_address0 <= "XXXX";
            end if;
        else 
            input_0_address0 <= "XXXX";
        end if; 
    end process;


    input_0_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, tmp_5_fu_406_p3, tmp_13_fu_442_p3, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_17_fu_498_p3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                input_0_address1 <= tmp_17_fu_498_p3(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                input_0_address1 <= tmp_13_fu_442_p3(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                input_0_address1 <= tmp_5_fu_406_p3(4 - 1 downto 0);
            else 
                input_0_address1 <= "XXXX";
            end if;
        else 
            input_0_address1 <= "XXXX";
        end if; 
    end process;


    input_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            input_0_ce0 <= ap_const_logic_1;
        else 
            input_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            input_0_ce1 <= ap_const_logic_1;
        else 
            input_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, tmp_13_reg_833, tmp_15_fu_470_p1, ap_block_pp0_stage0, tmp_3_fu_394_p1, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                input_1_address0 <= tmp_13_reg_833(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                input_1_address0 <= tmp_15_fu_470_p1(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                input_1_address0 <= tmp_3_fu_394_p1(4 - 1 downto 0);
            else 
                input_1_address0 <= "XXXX";
            end if;
        else 
            input_1_address0 <= "XXXX";
        end if; 
    end process;


    input_1_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, tmp_5_reg_783, tmp_11_fu_428_p1, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, tmp_17_fu_498_p3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                input_1_address1 <= tmp_17_fu_498_p3(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                input_1_address1 <= tmp_5_reg_783(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                input_1_address1 <= tmp_11_fu_428_p1(4 - 1 downto 0);
            else 
                input_1_address1 <= "XXXX";
            end if;
        else 
            input_1_address1 <= "XXXX";
        end if; 
    end process;


    input_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            input_1_ce0 <= ap_const_logic_1;
        else 
            input_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            input_1_ce1 <= ap_const_logic_1;
        else 
            input_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_2_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, tmp_fu_381_p1, ap_block_pp0_stage1, tmp_5_0_2_fu_457_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                input_2_address0 <= tmp_5_0_2_fu_457_p1(3 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                input_2_address0 <= tmp_fu_381_p1(3 - 1 downto 0);
            else 
                input_2_address0 <= "XXX";
            end if;
        else 
            input_2_address0 <= "XXX";
        end if; 
    end process;

    input_2_address1 <= tmp_5_0_1_fu_415_p1(3 - 1 downto 0);

    input_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            input_2_ce0 <= ap_const_logic_1;
        else 
            input_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            input_2_ce1 <= ap_const_logic_1;
        else 
            input_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_r_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp0_stage1, tmp_7_cast_fu_714_p1, tmp_9_cast_fu_764_p1)
    begin
        if ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                output_r_address0 <= tmp_9_cast_fu_764_p1(4 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                output_r_address0 <= tmp_7_cast_fu_714_p1(4 - 1 downto 0);
            else 
                output_r_address0 <= "XXXX";
            end if;
        else 
            output_r_address0 <= "XXXX";
        end if; 
    end process;

    output_r_address1 <= tmp_8_cast_fu_725_p1(4 - 1 downto 0);

    output_r_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            output_r_ce0 <= ap_const_logic_1;
        else 
            output_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_r_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            output_r_ce1 <= ap_const_logic_1;
        else 
            output_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_r_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, sum_2_2_2_2_reg_1123, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp0_stage1, sum_2_0_2_2_fu_734_p2)
    begin
        if ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                output_r_d0 <= sum_2_2_2_2_reg_1123;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                output_r_d0 <= sum_2_0_2_2_fu_734_p2;
            else 
                output_r_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            output_r_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    output_r_d1 <= std_logic_vector(unsigned(tmp11_reg_1108) + unsigned(tmp8_fu_740_p2));

    output_r_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, exitcond3_reg_769_pp0_iter1_reg, exitcond3_reg_769_pp0_iter2_reg, ap_enable_reg_pp0_iter2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (exitcond3_reg_769_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (exitcond3_reg_769_pp0_iter1_reg = ap_const_lv1_0)))) then 
            output_r_we0 <= ap_const_logic_1;
        else 
            output_r_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_r_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, exitcond3_reg_769_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (exitcond3_reg_769_pp0_iter1_reg = ap_const_lv1_0))) then 
            output_r_we1 <= ap_const_logic_1;
        else 
            output_r_we1 <= ap_const_logic_0;
        end if; 
    end process;

    p_shl_cast_fu_704_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_696_p3),5));
    sum_2_0_2_2_fu_734_p2 <= std_logic_vector(unsigned(tmp4_reg_1103) + unsigned(tmp1_fu_730_p2));
    sum_2_2_2_2_fu_754_p2 <= std_logic_vector(unsigned(tmp18_reg_1113) + unsigned(tmp15_fu_750_p2));
    tmp10_fu_608_p2 <= std_logic_vector(unsigned(tmp_1_1_0_2_reg_1003) + unsigned(tmp_1_1_1_reg_1008));
    tmp11_fu_667_p2 <= std_logic_vector(unsigned(tmp13_fu_662_p2) + unsigned(tmp12_fu_654_p2));
    tmp12_fu_654_p2 <= std_logic_vector(unsigned(tmp_1_1_1_1_reg_968) + unsigned(tmp_1_1_1_2_reg_1053));
    tmp13_fu_662_p2 <= std_logic_vector(unsigned(tmp14_fu_658_p2) + unsigned(tmp_1_1_2_reg_1058));
    tmp14_fu_658_p2 <= std_logic_vector(unsigned(tmp_1_1_2_1_reg_1013) + unsigned(tmp_1_1_2_2_reg_1063));
    tmp15_fu_750_p2 <= std_logic_vector(unsigned(tmp17_reg_1098) + unsigned(tmp16_reg_1093));
    tmp16_fu_627_p2 <= std_logic_vector(unsigned(tmp_1_2_reg_973) + unsigned(tmp_1_2_0_1_reg_1023));
    tmp17_fu_631_p2 <= std_logic_vector(unsigned(tmp_1_2_0_2_reg_978) + unsigned(tmp_1_2_1_reg_1028));
    tmp18_fu_686_p2 <= std_logic_vector(unsigned(tmp20_fu_681_p2) + unsigned(tmp19_fu_673_p2));
    tmp19_fu_673_p2 <= std_logic_vector(unsigned(tmp_1_2_1_1_reg_1073) + unsigned(tmp_1_2_1_2_reg_1033));
    tmp1_fu_730_p2 <= std_logic_vector(unsigned(tmp3_reg_1048) + unsigned(tmp2_reg_998));
    tmp20_fu_681_p2 <= std_logic_vector(unsigned(tmp21_fu_677_p2) + unsigned(tmp_1_2_2_reg_1078));
    tmp21_fu_677_p2 <= std_logic_vector(unsigned(tmp_1_2_2_1_reg_1083) + unsigned(tmp_1_2_2_2_reg_1088));
    tmp2_fu_547_p2 <= std_logic_vector(unsigned(tmp_s_reg_868) + unsigned(tmp_1_0_0_1_reg_878));
    tmp3_fu_594_p2 <= std_logic_vector(unsigned(tmp_1_0_0_2_reg_888) + unsigned(tmp_1_0_1_reg_983));
    tmp4_fu_648_p2 <= std_logic_vector(unsigned(tmp6_fu_643_p2) + unsigned(tmp5_fu_635_p2));
    tmp5_fu_635_p2 <= std_logic_vector(unsigned(tmp_1_0_1_1_reg_988) + unsigned(tmp_1_0_1_2_reg_917));
    tmp6_fu_643_p2 <= std_logic_vector(unsigned(tmp7_fu_639_p2) + unsigned(tmp_1_0_2_reg_1038));
    tmp7_fu_639_p2 <= std_logic_vector(unsigned(tmp_1_0_2_1_reg_1043) + unsigned(tmp_1_0_2_2_reg_993));
    tmp8_fu_740_p2 <= std_logic_vector(unsigned(tmp10_reg_1068) + unsigned(tmp9_reg_1018));
    tmp9_fu_566_p2 <= std_logic_vector(unsigned(tmp_1_1_reg_958) + unsigned(tmp_1_1_0_1_reg_963));
    tmp_10_fu_420_p3 <= (i_1_fu_375_p2 & ap_const_lv1_0);
    tmp_11_fu_428_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_fu_420_p3),64));
    tmp_12_fu_437_p2 <= (tmp_10_reg_803 or ap_const_lv3_1);
    tmp_13_fu_442_p3 <= (ap_const_lv61_0 & tmp_12_fu_437_p2);
    tmp_14_fu_462_p3 <= (tmp_4_0_2_fu_451_p2 & ap_const_lv1_0);
    tmp_15_fu_470_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_fu_462_p3),64));
    tmp_16_fu_493_p2 <= (tmp_14_reg_843 or ap_const_lv4_1);
    tmp_17_fu_498_p3 <= (ap_const_lv60_0 & tmp_16_fu_493_p2);
    tmp_1_0_0_1_fu_481_p1 <= kernel_0_1;
    tmp_1_0_0_1_fu_481_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(reg_336) * signed(tmp_1_0_0_1_fu_481_p1))), 32));
    tmp_1_0_0_2_fu_487_p1 <= kernel_0_2;
    tmp_1_0_0_2_fu_487_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(reg_340) * signed(tmp_1_0_0_2_fu_487_p1))), 32));
    tmp_1_0_1_1_fu_537_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(reg_336) * signed(kernel_1_1_read_reg_905))), 32));
    tmp_1_0_1_fu_532_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(reg_332) * signed(kernel_1_0_read_reg_898))), 32));
    tmp_1_0_2_1_fu_589_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(reg_336) * signed(kernel_2_1_read_reg_944))), 32));
    tmp_1_0_2_2_fu_542_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(reg_340) * signed(kernel_2_2_read_reg_951))), 32));
    tmp_1_0_2_fu_584_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(reg_332) * signed(kernel_2_0_read_reg_937))), 32));
    tmp_1_1_0_1_fu_514_p1 <= kernel_0_1;
    tmp_1_1_0_1_fu_514_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(reg_340) * signed(tmp_1_1_0_1_fu_514_p1))), 32));
    tmp_1_1_0_2_fu_551_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(reg_353) * signed(kernel_0_2_read_reg_883))), 32));
    tmp_1_1_1_fu_556_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(reg_336) * signed(kernel_1_0_read_reg_898))), 32));
    tmp_1_1_2_1_fu_561_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(reg_340) * signed(kernel_2_1_read_reg_944))), 32));
    tmp_1_1_2_2_fu_603_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(reg_353) * signed(kernel_2_2_read_reg_951))), 32));
    tmp_1_1_2_fu_598_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(reg_336) * signed(kernel_2_0_read_reg_937))), 32));
    tmp_1_1_fu_508_p1 <= kernel_0_0;
    tmp_1_1_fu_508_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(reg_336) * signed(tmp_1_1_fu_508_p1))), 32));
    tmp_1_2_0_1_fu_570_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(reg_353) * signed(kernel_0_1_read_reg_873))), 32));
    tmp_1_2_0_2_fu_526_p1 <= kernel_0_2;
    tmp_1_2_0_2_fu_526_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(reg_349) * signed(tmp_1_2_0_2_fu_526_p1))), 32));
    tmp_1_2_1_2_fu_580_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(input_2_load_1_reg_863) * signed(kernel_1_2_read_reg_911))), 32));
    tmp_1_2_1_fu_575_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(reg_344) * signed(kernel_1_0_read_reg_898))), 32));
    tmp_1_2_2_1_fu_617_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(reg_353) * signed(kernel_2_1_read_reg_944))), 32));
    tmp_1_2_2_2_fu_622_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(reg_349) * signed(kernel_2_2_read_reg_951))), 32));
    tmp_1_2_2_fu_612_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(reg_340) * signed(kernel_2_0_read_reg_937))), 32));
    tmp_1_2_fu_520_p1 <= kernel_0_0;
    tmp_1_2_fu_520_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(reg_340) * signed(tmp_1_2_fu_520_p1))), 32));
    tmp_2_fu_386_p3 <= (ap_phi_mux_i_phi_fu_324_p4 & ap_const_lv1_0);
    tmp_3_fu_394_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_386_p3),64));
    tmp_4_0_2_fu_451_p2 <= std_logic_vector(unsigned(i_cast_fu_433_p1) + unsigned(ap_const_lv3_2));
    tmp_4_fu_400_p2 <= (tmp_2_fu_386_p3 or ap_const_lv3_1);
    tmp_5_0_1_fu_415_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_fu_375_p2),64));
    tmp_5_0_2_fu_457_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_0_2_fu_451_p2),64));
    tmp_5_fu_406_p3 <= (ap_const_lv61_0 & tmp_4_fu_400_p2);
    tmp_6_fu_696_p3 <= (i_reg_320_pp0_iter1_reg & ap_const_lv2_0);
        tmp_7_cast_fu_714_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_7_fu_708_p2),64));

    tmp_7_fu_708_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_704_p1) - unsigned(tmp_cast_fu_692_p1));
        tmp_8_cast_fu_725_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_8_fu_719_p2),64));

    tmp_8_fu_719_p2 <= std_logic_vector(signed(tmp_7_fu_708_p2) + signed(ap_const_lv5_1));
        tmp_9_cast_fu_764_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_9_fu_759_p2),64));

    tmp_9_fu_759_p2 <= std_logic_vector(signed(tmp_7_reg_1118) + signed(ap_const_lv5_2));
    tmp_cast_fu_692_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_320_pp0_iter1_reg),5));
    tmp_fu_381_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_i_phi_fu_324_p4),64));
    tmp_s_fu_475_p1 <= kernel_0_0;
    tmp_s_fu_475_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(reg_332) * signed(tmp_s_fu_475_p1))), 32));
end behav;
